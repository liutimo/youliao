// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youliao.server.proto

#include "youliao.server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace youliao {
namespace pdu {
namespace server {
class ValidateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateRequest>
      _instance;
} _ValidateRequest_default_instance_;
class ValidateResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateRespone>
      _instance;
} _ValidateRespone_default_instance_;
class UserOfflineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserOffline>
      _instance;
} _UserOffline_default_instance_;
class MsgServerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgServerInfo>
      _instance;
} _MsgServerInfo_default_instance_;
class RouteStatusChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RouteStatusChange>
      _instance;
} _RouteStatusChange_default_instance_;
class RouteGetOnlineFirendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RouteGetOnlineFirendRequest>
      _instance;
} _RouteGetOnlineFirendRequest_default_instance_;
class RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse>
      _instance;
} _RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse_default_instance_;
class RouteGetOnlineFriendResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RouteGetOnlineFriendRespone>
      _instance;
} _RouteGetOnlineFriendRespone_default_instance_;
class RouteBroadcaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RouteBroadcase>
      _instance;
} _RouteBroadcase_default_instance_;
}  // namespace server
}  // namespace pdu
}  // namespace youliao
namespace protobuf_youliao_2eserver_2eproto {
void InitDefaultsValidateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::server::_ValidateRequest_default_instance_;
    new (ptr) ::youliao::pdu::server::ValidateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::server::ValidateRequest::InitAsDefaultInstance();
}

void InitDefaultsValidateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValidateRequestImpl);
}

void InitDefaultsValidateResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2ebase_2eproto::InitDefaultsUserInfo();
  {
    void* ptr = &::youliao::pdu::server::_ValidateRespone_default_instance_;
    new (ptr) ::youliao::pdu::server::ValidateRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::server::ValidateRespone::InitAsDefaultInstance();
}

void InitDefaultsValidateRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsValidateResponeImpl);
}

void InitDefaultsUserOfflineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::server::_UserOffline_default_instance_;
    new (ptr) ::youliao::pdu::server::UserOffline();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::server::UserOffline::InitAsDefaultInstance();
}

void InitDefaultsUserOffline() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserOfflineImpl);
}

void InitDefaultsMsgServerInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::server::_MsgServerInfo_default_instance_;
    new (ptr) ::youliao::pdu::server::MsgServerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::server::MsgServerInfo::InitAsDefaultInstance();
}

void InitDefaultsMsgServerInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgServerInfoImpl);
}

void InitDefaultsRouteStatusChangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::server::_RouteStatusChange_default_instance_;
    new (ptr) ::youliao::pdu::server::RouteStatusChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::server::RouteStatusChange::InitAsDefaultInstance();
}

void InitDefaultsRouteStatusChange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRouteStatusChangeImpl);
}

void InitDefaultsRouteGetOnlineFirendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::server::_RouteGetOnlineFirendRequest_default_instance_;
    new (ptr) ::youliao::pdu::server::RouteGetOnlineFirendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::server::RouteGetOnlineFirendRequest::InitAsDefaultInstance();
}

void InitDefaultsRouteGetOnlineFirendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRouteGetOnlineFirendRequestImpl);
}

void InitDefaultsRouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::server::_RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse_default_instance_;
    new (ptr) ::youliao::pdu::server::RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse();
  }
  ::youliao::pdu::server::RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsRouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUseImpl);
}

void InitDefaultsRouteGetOnlineFriendResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2eserver_2eproto::InitDefaultsRouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse();
  {
    void* ptr = &::youliao::pdu::server::_RouteGetOnlineFriendRespone_default_instance_;
    new (ptr) ::youliao::pdu::server::RouteGetOnlineFriendRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::server::RouteGetOnlineFriendRespone::InitAsDefaultInstance();
}

void InitDefaultsRouteGetOnlineFriendRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRouteGetOnlineFriendResponeImpl);
}

void InitDefaultsRouteBroadcaseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::server::_RouteBroadcase_default_instance_;
    new (ptr) ::youliao::pdu::server::RouteBroadcase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::server::RouteBroadcase::InitAsDefaultInstance();
}

void InitDefaultsRouteBroadcase() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRouteBroadcaseImpl);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::ValidateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::ValidateRequest, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::ValidateRequest, user_pwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::ValidateRequest, msg_serv_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::ValidateRequest, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::ValidateRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::ValidateRespone, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::ValidateRespone, result_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::ValidateRespone, result_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::ValidateRespone, user_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::ValidateRespone, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::UserOffline, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::UserOffline, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::MsgServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::MsgServerInfo, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::MsgServerInfo, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::MsgServerInfo, max_conn_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::MsgServerInfo, cur_conn_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteStatusChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteStatusChange, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteStatusChange, user_status_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteGetOnlineFirendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteGetOnlineFirendRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteGetOnlineFirendRequest, attach_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteGetOnlineFriendRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteGetOnlineFriendRespone, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteGetOnlineFriendRespone, online_firends_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteGetOnlineFriendRespone, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteBroadcase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteBroadcase, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteBroadcase, friends_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::server::RouteBroadcase, route_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::youliao::pdu::server::ValidateRequest)},
  { 9, -1, sizeof(::youliao::pdu::server::ValidateRespone)},
  { 19, -1, sizeof(::youliao::pdu::server::UserOffline)},
  { 25, -1, sizeof(::youliao::pdu::server::MsgServerInfo)},
  { 34, -1, sizeof(::youliao::pdu::server::RouteStatusChange)},
  { 41, -1, sizeof(::youliao::pdu::server::RouteGetOnlineFirendRequest)},
  { 48, 55, sizeof(::youliao::pdu::server::RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse)},
  { 57, -1, sizeof(::youliao::pdu::server::RouteGetOnlineFriendRespone)},
  { 65, -1, sizeof(::youliao::pdu::server::RouteBroadcase)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::server::_ValidateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::server::_ValidateRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::server::_UserOffline_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::server::_MsgServerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::server::_RouteStatusChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::server::_RouteGetOnlineFirendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::server::_RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::server::_RouteGetOnlineFriendRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::server::_RouteBroadcase_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "youliao.server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024youliao.server.proto\022\022youliao.pdu.serv"
      "er\032\022youliao.base.proto\"`\n\017ValidateReques"
      "t\022\021\n\tuser_name\030\001 \001(\t\022\020\n\010user_pwd\030\002 \001(\t\022\023"
      "\n\013msg_serv_id\030\003 \001(\r\022\023\n\013attach_data\030\024 \001(\014"
      "\"\224\001\n\017ValidateRespone\022\021\n\tuser_name\030\001 \001(\t\022"
      "\023\n\013result_code\030\002 \001(\r\022\025\n\rresult_string\030\003 "
      "\001(\t\022-\n\tuser_info\030\004 \001(\0132\032.youliao.pdu.bas"
      "e.UserInfo\022\023\n\013attach_data\030\024 \001(\014\"\036\n\013UserO"
      "ffline\022\017\n\007user_id\030\001 \001(\r\"Y\n\rMsgServerInfo"
      "\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\r\022\026\n\016max_conn_c"
      "ount\030\003 \001(\r\022\026\n\016cur_conn_count\030\004 \001(\r\"`\n\021Ro"
      "uteStatusChange\022\017\n\007user_id\030\001 \001(\r\022:\n\020user"
      "_status_type\030\002 \001(\0162 .youliao.pdu.base.Us"
      "erStatusType\"C\n\033RouteGetOnlineFirendRequ"
      "est\022\017\n\007user_id\030\001 \001(\r\022\023\n\013attach_data\030\024 \001("
      "\014\"\325\001\n\033RouteGetOnlineFriendRespone\022\017\n\007use"
      "r_id\030\001 \001(\r\022Z\n\016online_firends\030\002 \003(\0132B.you"
      "liao.pdu.server.RouteGetOnlineFriendResp"
      "one.OnlineFirendsEntry\022\023\n\013attach_data\030\024 "
      "\001(\014\0324\n\022OnlineFirendsEntry\022\013\n\003key\030\001 \001(\r\022\r"
      "\n\005value\030\002 \001(\r:\0028\001\"F\n\016RouteBroadcase\022\017\n\007u"
      "ser_id\030\001 \001(\r\022\017\n\007friends\030\002 \003(\r\022\022\n\nroute_d"
      "ata\030\024 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 897);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "youliao.server.proto", &protobuf_RegisterTypes);
  ::protobuf_youliao_2ebase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_youliao_2eserver_2eproto
namespace youliao {
namespace pdu {
namespace server {

// ===================================================================

void ValidateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateRequest::kUserNameFieldNumber;
const int ValidateRequest::kUserPwdFieldNumber;
const int ValidateRequest::kMsgServIdFieldNumber;
const int ValidateRequest::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateRequest::ValidateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eserver_2eproto::InitDefaultsValidateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.server.ValidateRequest)
}
ValidateRequest::ValidateRequest(const ValidateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  user_pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_pwd().size() > 0) {
    user_pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_pwd_);
  }
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  msg_serv_id_ = from.msg_serv_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.server.ValidateRequest)
}

void ValidateRequest::SharedCtor() {
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_serv_id_ = 0u;
  _cached_size_ = 0;
}

ValidateRequest::~ValidateRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.server.ValidateRequest)
  SharedDtor();
}

void ValidateRequest::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ValidateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValidateRequest::descriptor() {
  ::protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidateRequest& ValidateRequest::default_instance() {
  ::protobuf_youliao_2eserver_2eproto::InitDefaultsValidateRequest();
  return *internal_default_instance();
}


void ValidateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.server.ValidateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_serv_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ValidateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.server.ValidateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), static_cast<int>(this->user_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.server.ValidateRequest.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_pwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_pwd().data(), static_cast<int>(this->user_pwd().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.server.ValidateRequest.user_pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msg_serv_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_serv_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.server.ValidateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.server.ValidateRequest)
  return false;
#undef DO_
}

void ValidateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.server.ValidateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_name = 1;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.server.ValidateRequest.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_name(), output);
  }

  // string user_pwd = 2;
  if (this->user_pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_pwd().data(), static_cast<int>(this->user_pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.server.ValidateRequest.user_pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_pwd(), output);
  }

  // uint32 msg_serv_id = 3;
  if (this->msg_serv_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msg_serv_id(), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.server.ValidateRequest)
}

::google::protobuf::uint8* ValidateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.server.ValidateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_name = 1;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.server.ValidateRequest.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_name(), target);
  }

  // string user_pwd = 2;
  if (this->user_pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_pwd().data(), static_cast<int>(this->user_pwd().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.server.ValidateRequest.user_pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_pwd(), target);
  }

  // uint32 msg_serv_id = 3;
  if (this->msg_serv_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msg_serv_id(), target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.server.ValidateRequest)
  return target;
}

size_t ValidateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.server.ValidateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_name = 1;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // string user_pwd = 2;
  if (this->user_pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_pwd());
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 msg_serv_id = 3;
  if (this->msg_serv_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_serv_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValidateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.server.ValidateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.server.ValidateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.server.ValidateRequest)
    MergeFrom(*source);
  }
}

void ValidateRequest::MergeFrom(const ValidateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.server.ValidateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.user_pwd().size() > 0) {

    user_pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_pwd_);
  }
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.msg_serv_id() != 0) {
    set_msg_serv_id(from.msg_serv_id());
  }
}

void ValidateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.server.ValidateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateRequest::CopyFrom(const ValidateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.server.ValidateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateRequest::IsInitialized() const {
  return true;
}

void ValidateRequest::Swap(ValidateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidateRequest::InternalSwap(ValidateRequest* other) {
  using std::swap;
  user_name_.Swap(&other->user_name_);
  user_pwd_.Swap(&other->user_pwd_);
  attach_data_.Swap(&other->attach_data_);
  swap(msg_serv_id_, other->msg_serv_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValidateRequest::GetMetadata() const {
  protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValidateRespone::InitAsDefaultInstance() {
  ::youliao::pdu::server::_ValidateRespone_default_instance_._instance.get_mutable()->user_info_ = const_cast< ::youliao::pdu::base::UserInfo*>(
      ::youliao::pdu::base::UserInfo::internal_default_instance());
}
void ValidateRespone::clear_user_info() {
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) {
    delete user_info_;
  }
  user_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateRespone::kUserNameFieldNumber;
const int ValidateRespone::kResultCodeFieldNumber;
const int ValidateRespone::kResultStringFieldNumber;
const int ValidateRespone::kUserInfoFieldNumber;
const int ValidateRespone::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateRespone::ValidateRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eserver_2eproto::InitDefaultsValidateRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.server.ValidateRespone)
}
ValidateRespone::ValidateRespone(const ValidateRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  result_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result_string().size() > 0) {
    result_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_string_);
  }
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.has_user_info()) {
    user_info_ = new ::youliao::pdu::base::UserInfo(*from.user_info_);
  } else {
    user_info_ = NULL;
  }
  result_code_ = from.result_code_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.server.ValidateRespone)
}

void ValidateRespone::SharedCtor() {
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_code_) -
      reinterpret_cast<char*>(&user_info_)) + sizeof(result_code_));
  _cached_size_ = 0;
}

ValidateRespone::~ValidateRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.server.ValidateRespone)
  SharedDtor();
}

void ValidateRespone::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_info_;
}

void ValidateRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValidateRespone::descriptor() {
  ::protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidateRespone& ValidateRespone::default_instance() {
  ::protobuf_youliao_2eserver_2eproto::InitDefaultsValidateRespone();
  return *internal_default_instance();
}


void ValidateRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.server.ValidateRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) {
    delete user_info_;
  }
  user_info_ = NULL;
  result_code_ = 0u;
  _internal_metadata_.Clear();
}

bool ValidateRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.server.ValidateRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), static_cast<int>(this->user_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.server.ValidateRespone.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string result_string = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result_string().data(), static_cast<int>(this->result_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.server.ValidateRespone.result_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .youliao.pdu.base.UserInfo user_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.server.ValidateRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.server.ValidateRespone)
  return false;
#undef DO_
}

void ValidateRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.server.ValidateRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_name = 1;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.server.ValidateRespone.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_name(), output);
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result_code(), output);
  }

  // string result_string = 3;
  if (this->result_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result_string().data(), static_cast<int>(this->result_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.server.ValidateRespone.result_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->result_string(), output);
  }

  // .youliao.pdu.base.UserInfo user_info = 4;
  if (this->has_user_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *user_info_, output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.server.ValidateRespone)
}

::google::protobuf::uint8* ValidateRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.server.ValidateRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_name = 1;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.server.ValidateRespone.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_name(), target);
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result_code(), target);
  }

  // string result_string = 3;
  if (this->result_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result_string().data(), static_cast<int>(this->result_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.server.ValidateRespone.result_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->result_string(), target);
  }

  // .youliao.pdu.base.UserInfo user_info = 4;
  if (this->has_user_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *user_info_, deterministic, target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.server.ValidateRespone)
  return target;
}

size_t ValidateRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.server.ValidateRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_name = 1;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // string result_string = 3;
  if (this->result_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result_string());
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // .youliao.pdu.base.UserInfo user_info = 4;
  if (this->has_user_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_info_);
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValidateRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.server.ValidateRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidateRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.server.ValidateRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.server.ValidateRespone)
    MergeFrom(*source);
  }
}

void ValidateRespone::MergeFrom(const ValidateRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.server.ValidateRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.result_string().size() > 0) {

    result_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_string_);
  }
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.has_user_info()) {
    mutable_user_info()->::youliao::pdu::base::UserInfo::MergeFrom(from.user_info());
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
}

void ValidateRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.server.ValidateRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateRespone::CopyFrom(const ValidateRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.server.ValidateRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateRespone::IsInitialized() const {
  return true;
}

void ValidateRespone::Swap(ValidateRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidateRespone::InternalSwap(ValidateRespone* other) {
  using std::swap;
  user_name_.Swap(&other->user_name_);
  result_string_.Swap(&other->result_string_);
  attach_data_.Swap(&other->attach_data_);
  swap(user_info_, other->user_info_);
  swap(result_code_, other->result_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValidateRespone::GetMetadata() const {
  protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserOffline::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserOffline::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserOffline::UserOffline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eserver_2eproto::InitDefaultsUserOffline();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.server.UserOffline)
}
UserOffline::UserOffline(const UserOffline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.server.UserOffline)
}

void UserOffline::SharedCtor() {
  user_id_ = 0u;
  _cached_size_ = 0;
}

UserOffline::~UserOffline() {
  // @@protoc_insertion_point(destructor:youliao.pdu.server.UserOffline)
  SharedDtor();
}

void UserOffline::SharedDtor() {
}

void UserOffline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserOffline::descriptor() {
  ::protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserOffline& UserOffline::default_instance() {
  ::protobuf_youliao_2eserver_2eproto::InitDefaultsUserOffline();
  return *internal_default_instance();
}


void UserOffline::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.server.UserOffline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool UserOffline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.server.UserOffline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.server.UserOffline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.server.UserOffline)
  return false;
#undef DO_
}

void UserOffline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.server.UserOffline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.server.UserOffline)
}

::google::protobuf::uint8* UserOffline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.server.UserOffline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.server.UserOffline)
  return target;
}

size_t UserOffline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.server.UserOffline)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserOffline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.server.UserOffline)
  GOOGLE_DCHECK_NE(&from, this);
  const UserOffline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserOffline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.server.UserOffline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.server.UserOffline)
    MergeFrom(*source);
  }
}

void UserOffline::MergeFrom(const UserOffline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.server.UserOffline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void UserOffline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.server.UserOffline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserOffline::CopyFrom(const UserOffline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.server.UserOffline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserOffline::IsInitialized() const {
  return true;
}

void UserOffline::Swap(UserOffline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserOffline::InternalSwap(UserOffline* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserOffline::GetMetadata() const {
  protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgServerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgServerInfo::kIpFieldNumber;
const int MsgServerInfo::kPortFieldNumber;
const int MsgServerInfo::kMaxConnCountFieldNumber;
const int MsgServerInfo::kCurConnCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgServerInfo::MsgServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eserver_2eproto::InitDefaultsMsgServerInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.server.MsgServerInfo)
}
MsgServerInfo::MsgServerInfo(const MsgServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&cur_conn_count_) -
    reinterpret_cast<char*>(&port_)) + sizeof(cur_conn_count_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.server.MsgServerInfo)
}

void MsgServerInfo::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_conn_count_) -
      reinterpret_cast<char*>(&port_)) + sizeof(cur_conn_count_));
  _cached_size_ = 0;
}

MsgServerInfo::~MsgServerInfo() {
  // @@protoc_insertion_point(destructor:youliao.pdu.server.MsgServerInfo)
  SharedDtor();
}

void MsgServerInfo::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgServerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgServerInfo::descriptor() {
  ::protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgServerInfo& MsgServerInfo::default_instance() {
  ::protobuf_youliao_2eserver_2eproto::InitDefaultsMsgServerInfo();
  return *internal_default_instance();
}


void MsgServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.server.MsgServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_conn_count_) -
      reinterpret_cast<char*>(&port_)) + sizeof(cur_conn_count_));
  _internal_metadata_.Clear();
}

bool MsgServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.server.MsgServerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.server.MsgServerInfo.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_conn_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_conn_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_conn_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_conn_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.server.MsgServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.server.MsgServerInfo)
  return false;
#undef DO_
}

void MsgServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.server.MsgServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.server.MsgServerInfo.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->port(), output);
  }

  // uint32 max_conn_count = 3;
  if (this->max_conn_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max_conn_count(), output);
  }

  // uint32 cur_conn_count = 4;
  if (this->cur_conn_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cur_conn_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.server.MsgServerInfo)
}

::google::protobuf::uint8* MsgServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.server.MsgServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.server.MsgServerInfo.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->port(), target);
  }

  // uint32 max_conn_count = 3;
  if (this->max_conn_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max_conn_count(), target);
  }

  // uint32 cur_conn_count = 4;
  if (this->cur_conn_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cur_conn_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.server.MsgServerInfo)
  return target;
}

size_t MsgServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.server.MsgServerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  // uint32 max_conn_count = 3;
  if (this->max_conn_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_conn_count());
  }

  // uint32 cur_conn_count = 4;
  if (this->cur_conn_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_conn_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.server.MsgServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.server.MsgServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.server.MsgServerInfo)
    MergeFrom(*source);
  }
}

void MsgServerInfo::MergeFrom(const MsgServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.server.MsgServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.max_conn_count() != 0) {
    set_max_conn_count(from.max_conn_count());
  }
  if (from.cur_conn_count() != 0) {
    set_cur_conn_count(from.cur_conn_count());
  }
}

void MsgServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.server.MsgServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgServerInfo::CopyFrom(const MsgServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.server.MsgServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgServerInfo::IsInitialized() const {
  return true;
}

void MsgServerInfo::Swap(MsgServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgServerInfo::InternalSwap(MsgServerInfo* other) {
  using std::swap;
  ip_.Swap(&other->ip_);
  swap(port_, other->port_);
  swap(max_conn_count_, other->max_conn_count_);
  swap(cur_conn_count_, other->cur_conn_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgServerInfo::GetMetadata() const {
  protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RouteStatusChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RouteStatusChange::kUserIdFieldNumber;
const int RouteStatusChange::kUserStatusTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RouteStatusChange::RouteStatusChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eserver_2eproto::InitDefaultsRouteStatusChange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.server.RouteStatusChange)
}
RouteStatusChange::RouteStatusChange(const RouteStatusChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_status_type_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(user_status_type_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.server.RouteStatusChange)
}

void RouteStatusChange::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_status_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(user_status_type_));
  _cached_size_ = 0;
}

RouteStatusChange::~RouteStatusChange() {
  // @@protoc_insertion_point(destructor:youliao.pdu.server.RouteStatusChange)
  SharedDtor();
}

void RouteStatusChange::SharedDtor() {
}

void RouteStatusChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RouteStatusChange::descriptor() {
  ::protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RouteStatusChange& RouteStatusChange::default_instance() {
  ::protobuf_youliao_2eserver_2eproto::InitDefaultsRouteStatusChange();
  return *internal_default_instance();
}


void RouteStatusChange::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.server.RouteStatusChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_status_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(user_status_type_));
  _internal_metadata_.Clear();
}

bool RouteStatusChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.server.RouteStatusChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .youliao.pdu.base.UserStatusType user_status_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_user_status_type(static_cast< ::youliao::pdu::base::UserStatusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.server.RouteStatusChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.server.RouteStatusChange)
  return false;
#undef DO_
}

void RouteStatusChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.server.RouteStatusChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .youliao.pdu.base.UserStatusType user_status_type = 2;
  if (this->user_status_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->user_status_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.server.RouteStatusChange)
}

::google::protobuf::uint8* RouteStatusChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.server.RouteStatusChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .youliao.pdu.base.UserStatusType user_status_type = 2;
  if (this->user_status_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->user_status_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.server.RouteStatusChange)
  return target;
}

size_t RouteStatusChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.server.RouteStatusChange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .youliao.pdu.base.UserStatusType user_status_type = 2;
  if (this->user_status_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->user_status_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RouteStatusChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.server.RouteStatusChange)
  GOOGLE_DCHECK_NE(&from, this);
  const RouteStatusChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RouteStatusChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.server.RouteStatusChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.server.RouteStatusChange)
    MergeFrom(*source);
  }
}

void RouteStatusChange::MergeFrom(const RouteStatusChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.server.RouteStatusChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.user_status_type() != 0) {
    set_user_status_type(from.user_status_type());
  }
}

void RouteStatusChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.server.RouteStatusChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouteStatusChange::CopyFrom(const RouteStatusChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.server.RouteStatusChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouteStatusChange::IsInitialized() const {
  return true;
}

void RouteStatusChange::Swap(RouteStatusChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RouteStatusChange::InternalSwap(RouteStatusChange* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(user_status_type_, other->user_status_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RouteStatusChange::GetMetadata() const {
  protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RouteGetOnlineFirendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RouteGetOnlineFirendRequest::kUserIdFieldNumber;
const int RouteGetOnlineFirendRequest::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RouteGetOnlineFirendRequest::RouteGetOnlineFirendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eserver_2eproto::InitDefaultsRouteGetOnlineFirendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.server.RouteGetOnlineFirendRequest)
}
RouteGetOnlineFirendRequest::RouteGetOnlineFirendRequest(const RouteGetOnlineFirendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.server.RouteGetOnlineFirendRequest)
}

void RouteGetOnlineFirendRequest::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

RouteGetOnlineFirendRequest::~RouteGetOnlineFirendRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.server.RouteGetOnlineFirendRequest)
  SharedDtor();
}

void RouteGetOnlineFirendRequest::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RouteGetOnlineFirendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RouteGetOnlineFirendRequest::descriptor() {
  ::protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RouteGetOnlineFirendRequest& RouteGetOnlineFirendRequest::default_instance() {
  ::protobuf_youliao_2eserver_2eproto::InitDefaultsRouteGetOnlineFirendRequest();
  return *internal_default_instance();
}


void RouteGetOnlineFirendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.server.RouteGetOnlineFirendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool RouteGetOnlineFirendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.server.RouteGetOnlineFirendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.server.RouteGetOnlineFirendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.server.RouteGetOnlineFirendRequest)
  return false;
#undef DO_
}

void RouteGetOnlineFirendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.server.RouteGetOnlineFirendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.server.RouteGetOnlineFirendRequest)
}

::google::protobuf::uint8* RouteGetOnlineFirendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.server.RouteGetOnlineFirendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.server.RouteGetOnlineFirendRequest)
  return target;
}

size_t RouteGetOnlineFirendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.server.RouteGetOnlineFirendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RouteGetOnlineFirendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.server.RouteGetOnlineFirendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RouteGetOnlineFirendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RouteGetOnlineFirendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.server.RouteGetOnlineFirendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.server.RouteGetOnlineFirendRequest)
    MergeFrom(*source);
  }
}

void RouteGetOnlineFirendRequest::MergeFrom(const RouteGetOnlineFirendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.server.RouteGetOnlineFirendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void RouteGetOnlineFirendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.server.RouteGetOnlineFirendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouteGetOnlineFirendRequest::CopyFrom(const RouteGetOnlineFirendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.server.RouteGetOnlineFirendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouteGetOnlineFirendRequest::IsInitialized() const {
  return true;
}

void RouteGetOnlineFirendRequest::Swap(RouteGetOnlineFirendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RouteGetOnlineFirendRequest::InternalSwap(RouteGetOnlineFirendRequest* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RouteGetOnlineFirendRequest::GetMetadata() const {
  protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse::RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse() {}
RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse::RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse::MergeFrom(const RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[6];
}
void RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void RouteGetOnlineFriendRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RouteGetOnlineFriendRespone::kUserIdFieldNumber;
const int RouteGetOnlineFriendRespone::kOnlineFirendsFieldNumber;
const int RouteGetOnlineFriendRespone::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RouteGetOnlineFriendRespone::RouteGetOnlineFriendRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eserver_2eproto::InitDefaultsRouteGetOnlineFriendRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.server.RouteGetOnlineFriendRespone)
}
RouteGetOnlineFriendRespone::RouteGetOnlineFriendRespone(const RouteGetOnlineFriendRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  online_firends_.MergeFrom(from.online_firends_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.server.RouteGetOnlineFriendRespone)
}

void RouteGetOnlineFriendRespone::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

RouteGetOnlineFriendRespone::~RouteGetOnlineFriendRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.server.RouteGetOnlineFriendRespone)
  SharedDtor();
}

void RouteGetOnlineFriendRespone::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RouteGetOnlineFriendRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RouteGetOnlineFriendRespone::descriptor() {
  ::protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RouteGetOnlineFriendRespone& RouteGetOnlineFriendRespone::default_instance() {
  ::protobuf_youliao_2eserver_2eproto::InitDefaultsRouteGetOnlineFriendRespone();
  return *internal_default_instance();
}


void RouteGetOnlineFriendRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.server.RouteGetOnlineFriendRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  online_firends_.Clear();
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool RouteGetOnlineFriendRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.server.RouteGetOnlineFriendRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> online_firends = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&online_firends_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.server.RouteGetOnlineFriendRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.server.RouteGetOnlineFriendRespone)
  return false;
#undef DO_
}

void RouteGetOnlineFriendRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.server.RouteGetOnlineFriendRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // map<uint32, uint32> online_firends = 2;
  if (!this->online_firends().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->online_firends().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->online_firends().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->online_firends().begin();
          it != this->online_firends().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(online_firends_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->online_firends().begin();
          it != this->online_firends().end(); ++it) {
        entry.reset(online_firends_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.server.RouteGetOnlineFriendRespone)
}

::google::protobuf::uint8* RouteGetOnlineFriendRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.server.RouteGetOnlineFriendRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // map<uint32, uint32> online_firends = 2;
  if (!this->online_firends().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->online_firends().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->online_firends().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->online_firends().begin();
          it != this->online_firends().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(online_firends_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->online_firends().begin();
          it != this->online_firends().end(); ++it) {
        entry.reset(online_firends_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.server.RouteGetOnlineFriendRespone)
  return target;
}

size_t RouteGetOnlineFriendRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.server.RouteGetOnlineFriendRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> online_firends = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->online_firends_size());
  {
    ::google::protobuf::scoped_ptr<RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->online_firends().begin();
        it != this->online_firends().end(); ++it) {
      entry.reset(online_firends_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RouteGetOnlineFriendRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.server.RouteGetOnlineFriendRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const RouteGetOnlineFriendRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RouteGetOnlineFriendRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.server.RouteGetOnlineFriendRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.server.RouteGetOnlineFriendRespone)
    MergeFrom(*source);
  }
}

void RouteGetOnlineFriendRespone::MergeFrom(const RouteGetOnlineFriendRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.server.RouteGetOnlineFriendRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  online_firends_.MergeFrom(from.online_firends_);
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void RouteGetOnlineFriendRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.server.RouteGetOnlineFriendRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouteGetOnlineFriendRespone::CopyFrom(const RouteGetOnlineFriendRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.server.RouteGetOnlineFriendRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouteGetOnlineFriendRespone::IsInitialized() const {
  return true;
}

void RouteGetOnlineFriendRespone::Swap(RouteGetOnlineFriendRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RouteGetOnlineFriendRespone::InternalSwap(RouteGetOnlineFriendRespone* other) {
  using std::swap;
  online_firends_.Swap(&other->online_firends_);
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RouteGetOnlineFriendRespone::GetMetadata() const {
  protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RouteBroadcase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RouteBroadcase::kUserIdFieldNumber;
const int RouteBroadcase::kFriendsFieldNumber;
const int RouteBroadcase::kRouteDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RouteBroadcase::RouteBroadcase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eserver_2eproto::InitDefaultsRouteBroadcase();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.server.RouteBroadcase)
}
RouteBroadcase::RouteBroadcase(const RouteBroadcase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friends_(from.friends_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  route_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.route_data().size() > 0) {
    route_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.server.RouteBroadcase)
}

void RouteBroadcase::SharedCtor() {
  route_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

RouteBroadcase::~RouteBroadcase() {
  // @@protoc_insertion_point(destructor:youliao.pdu.server.RouteBroadcase)
  SharedDtor();
}

void RouteBroadcase::SharedDtor() {
  route_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RouteBroadcase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RouteBroadcase::descriptor() {
  ::protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RouteBroadcase& RouteBroadcase::default_instance() {
  ::protobuf_youliao_2eserver_2eproto::InitDefaultsRouteBroadcase();
  return *internal_default_instance();
}


void RouteBroadcase::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.server.RouteBroadcase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_.Clear();
  route_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool RouteBroadcase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.server.RouteBroadcase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 friends = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_friends())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_friends())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes route_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_route_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.server.RouteBroadcase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.server.RouteBroadcase)
  return false;
#undef DO_
}

void RouteBroadcase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.server.RouteBroadcase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // repeated uint32 friends = 2;
  if (this->friends_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _friends_cached_byte_size_));
  }
  for (int i = 0, n = this->friends_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->friends(i), output);
  }

  // bytes route_data = 20;
  if (this->route_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->route_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.server.RouteBroadcase)
}

::google::protobuf::uint8* RouteBroadcase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.server.RouteBroadcase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // repeated uint32 friends = 2;
  if (this->friends_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _friends_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->friends_, target);
  }

  // bytes route_data = 20;
  if (this->route_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->route_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.server.RouteBroadcase)
  return target;
}

size_t RouteBroadcase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.server.RouteBroadcase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 friends = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->friends_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _friends_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes route_data = 20;
  if (this->route_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->route_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RouteBroadcase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.server.RouteBroadcase)
  GOOGLE_DCHECK_NE(&from, this);
  const RouteBroadcase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RouteBroadcase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.server.RouteBroadcase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.server.RouteBroadcase)
    MergeFrom(*source);
  }
}

void RouteBroadcase::MergeFrom(const RouteBroadcase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.server.RouteBroadcase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
  if (from.route_data().size() > 0) {

    route_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.route_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void RouteBroadcase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.server.RouteBroadcase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouteBroadcase::CopyFrom(const RouteBroadcase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.server.RouteBroadcase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouteBroadcase::IsInitialized() const {
  return true;
}

void RouteBroadcase::Swap(RouteBroadcase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RouteBroadcase::InternalSwap(RouteBroadcase* other) {
  using std::swap;
  friends_.InternalSwap(&other->friends_);
  route_data_.Swap(&other->route_data_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RouteBroadcase::GetMetadata() const {
  protobuf_youliao_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace server
}  // namespace pdu
}  // namespace youliao
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::server::ValidateRequest* Arena::Create< ::youliao::pdu::server::ValidateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::server::ValidateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::server::ValidateRespone* Arena::Create< ::youliao::pdu::server::ValidateRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::server::ValidateRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::server::UserOffline* Arena::Create< ::youliao::pdu::server::UserOffline >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::server::UserOffline >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::server::MsgServerInfo* Arena::Create< ::youliao::pdu::server::MsgServerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::server::MsgServerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::server::RouteStatusChange* Arena::Create< ::youliao::pdu::server::RouteStatusChange >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::server::RouteStatusChange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::server::RouteGetOnlineFirendRequest* Arena::Create< ::youliao::pdu::server::RouteGetOnlineFirendRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::server::RouteGetOnlineFirendRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::server::RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse* Arena::Create< ::youliao::pdu::server::RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::server::RouteGetOnlineFriendRespone_OnlineFirendsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::server::RouteGetOnlineFriendRespone* Arena::Create< ::youliao::pdu::server::RouteGetOnlineFriendRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::server::RouteGetOnlineFriendRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::server::RouteBroadcase* Arena::Create< ::youliao::pdu::server::RouteBroadcase >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::server::RouteBroadcase >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

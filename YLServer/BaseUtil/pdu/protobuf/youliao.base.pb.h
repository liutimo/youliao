// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youliao.base.proto

#ifndef PROTOBUF_youliao_2ebase_2eproto__INCLUDED
#define PROTOBUF_youliao_2ebase_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace protobuf_youliao_2ebase_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
inline void InitDefaults() {
}
}  // namespace protobuf_youliao_2ebase_2eproto
namespace youliao {
namespace pdu {
namespace base {
}  // namespace base
}  // namespace pdu
}  // namespace youliao
namespace youliao {
namespace pdu {
namespace base {

enum ServiceID {
  SID_ZERO = 0,
  SID_LOGIN = 1,
  SID_FRIEND_LIST = 2,
  SID_SERVER = 3,
  ServiceID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServiceID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServiceID_IsValid(int value);
const ServiceID ServiceID_MIN = SID_ZERO;
const ServiceID ServiceID_MAX = SID_SERVER;
const int ServiceID_ARRAYSIZE = ServiceID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServiceID_descriptor();
inline const ::std::string& ServiceID_Name(ServiceID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServiceID_descriptor(), value);
}
inline bool ServiceID_Parse(
    const ::std::string& name, ServiceID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServiceID>(
    ServiceID_descriptor(), name, value);
}
enum LoginCID {
  CID_LOGIN_ZERO = 0,
  CID_LOGIN_REQUSET_MSGSERVER = 257,
  CID_LOGIN_RESPONE_MSGSERVER = 258,
  LoginCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LoginCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LoginCID_IsValid(int value);
const LoginCID LoginCID_MIN = CID_LOGIN_ZERO;
const LoginCID LoginCID_MAX = CID_LOGIN_RESPONE_MSGSERVER;
const int LoginCID_ARRAYSIZE = LoginCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginCID_descriptor();
inline const ::std::string& LoginCID_Name(LoginCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginCID_descriptor(), value);
}
inline bool LoginCID_Parse(
    const ::std::string& name, LoginCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginCID>(
    LoginCID_descriptor(), name, value);
}
enum ServerCID {
  CID_SERVER_ZERO = 0,
  CID_SERVER_MSGSERVER_INFO = 513,
  ServerCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServerCID_IsValid(int value);
const ServerCID ServerCID_MIN = CID_SERVER_ZERO;
const ServerCID ServerCID_MAX = CID_SERVER_MSGSERVER_INFO;
const int ServerCID_ARRAYSIZE = ServerCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerCID_descriptor();
inline const ::std::string& ServerCID_Name(ServerCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerCID_descriptor(), value);
}
inline bool ServerCID_Parse(
    const ::std::string& name, ServerCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerCID>(
    ServerCID_descriptor(), name, value);
}
enum ResultType {
  NONE = 0,
  NO_MSG_SERVER = 1,
  MSG_SERVER_FULL = 2,
  ResultType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResultType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResultType_IsValid(int value);
const ResultType ResultType_MIN = NONE;
const ResultType ResultType_MAX = MSG_SERVER_FULL;
const int ResultType_ARRAYSIZE = ResultType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResultType_descriptor();
inline const ::std::string& ResultType_Name(ResultType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResultType_descriptor(), value);
}
inline bool ResultType_Parse(
    const ::std::string& name, ResultType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResultType>(
    ResultType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace base
}  // namespace pdu
}  // namespace youliao

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::youliao::pdu::base::ServiceID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::ServiceID>() {
  return ::youliao::pdu::base::ServiceID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::LoginCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::LoginCID>() {
  return ::youliao::pdu::base::LoginCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::ServerCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::ServerCID>() {
  return ::youliao::pdu::base::ServerCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::ResultType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::ResultType>() {
  return ::youliao::pdu::base::ResultType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youliao_2ebase_2eproto__INCLUDED

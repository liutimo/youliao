// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youliao.base.proto

#ifndef PROTOBUF_youliao_2ebase_2eproto_INCLUDED
#define PROTOBUF_youliao_2ebase_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_youliao_2ebase_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsUserInfoImpl();
void InitDefaultsUserInfo();
void InitDefaultsFriendInfoImpl();
void InitDefaultsFriendInfo();
void InitDefaultsSessionInfoImpl();
void InitDefaultsSessionInfo();
void InitDefaultsMemberInfoImpl();
void InitDefaultsMemberInfo();
void InitDefaultsAddRequestInfoImpl();
void InitDefaultsAddRequestInfo();
void InitDefaultsGroupInfoImpl();
void InitDefaultsGroupInfo();
void InitDefaultsIpAddressImpl();
void InitDefaultsIpAddress();
void InitDefaultsHeartBeatImpl();
void InitDefaultsHeartBeat();
inline void InitDefaults() {
  InitDefaultsUserInfo();
  InitDefaultsFriendInfo();
  InitDefaultsSessionInfo();
  InitDefaultsMemberInfo();
  InitDefaultsAddRequestInfo();
  InitDefaultsGroupInfo();
  InitDefaultsIpAddress();
  InitDefaultsHeartBeat();
}
}  // namespace protobuf_youliao_2ebase_2eproto
namespace youliao {
namespace pdu {
namespace base {
class AddRequestInfo;
class AddRequestInfoDefaultTypeInternal;
extern AddRequestInfoDefaultTypeInternal _AddRequestInfo_default_instance_;
class FriendInfo;
class FriendInfoDefaultTypeInternal;
extern FriendInfoDefaultTypeInternal _FriendInfo_default_instance_;
class GroupInfo;
class GroupInfoDefaultTypeInternal;
extern GroupInfoDefaultTypeInternal _GroupInfo_default_instance_;
class HeartBeat;
class HeartBeatDefaultTypeInternal;
extern HeartBeatDefaultTypeInternal _HeartBeat_default_instance_;
class IpAddress;
class IpAddressDefaultTypeInternal;
extern IpAddressDefaultTypeInternal _IpAddress_default_instance_;
class MemberInfo;
class MemberInfoDefaultTypeInternal;
extern MemberInfoDefaultTypeInternal _MemberInfo_default_instance_;
class SessionInfo;
class SessionInfoDefaultTypeInternal;
extern SessionInfoDefaultTypeInternal _SessionInfo_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
}  // namespace base
}  // namespace pdu
}  // namespace youliao
namespace google {
namespace protobuf {
template<> ::youliao::pdu::base::AddRequestInfo* Arena::Create< ::youliao::pdu::base::AddRequestInfo>(Arena*);
template<> ::youliao::pdu::base::FriendInfo* Arena::Create< ::youliao::pdu::base::FriendInfo>(Arena*);
template<> ::youliao::pdu::base::GroupInfo* Arena::Create< ::youliao::pdu::base::GroupInfo>(Arena*);
template<> ::youliao::pdu::base::HeartBeat* Arena::Create< ::youliao::pdu::base::HeartBeat>(Arena*);
template<> ::youliao::pdu::base::IpAddress* Arena::Create< ::youliao::pdu::base::IpAddress>(Arena*);
template<> ::youliao::pdu::base::MemberInfo* Arena::Create< ::youliao::pdu::base::MemberInfo>(Arena*);
template<> ::youliao::pdu::base::SessionInfo* Arena::Create< ::youliao::pdu::base::SessionInfo>(Arena*);
template<> ::youliao::pdu::base::UserInfo* Arena::Create< ::youliao::pdu::base::UserInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace youliao {
namespace pdu {
namespace base {

enum ServiceID {
  SID_ZERO = 0,
  SID_LOGIN = 1,
  SID_FRIEND_LIST = 2,
  SID_SERVER = 3,
  SID_OTHER = 4,
  SID_SESSION = 5,
  SID_MESSAGE = 6,
  SID_GROUP = 7,
  SID_FILE = 8,
  ServiceID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServiceID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServiceID_IsValid(int value);
const ServiceID ServiceID_MIN = SID_ZERO;
const ServiceID ServiceID_MAX = SID_FILE;
const int ServiceID_ARRAYSIZE = ServiceID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServiceID_descriptor();
inline const ::std::string& ServiceID_Name(ServiceID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServiceID_descriptor(), value);
}
inline bool ServiceID_Parse(
    const ::std::string& name, ServiceID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServiceID>(
    ServiceID_descriptor(), name, value);
}
enum LoginCID {
  CID_LOGIN_ZERO = 0,
  CID_LOGIN_REQUSET_MSGSERVER = 257,
  CID_LOGIN_RESPONE_MSGSERVER = 258,
  CID_LOGIN_REQUEST_USERLOGIN = 259,
  CID_LOGIN_RESPONE_USERLOGIN = 260,
  CID_LOGIN_REQUEST_USERLOGINOUT = 261,
  LoginCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LoginCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LoginCID_IsValid(int value);
const LoginCID LoginCID_MIN = CID_LOGIN_ZERO;
const LoginCID LoginCID_MAX = CID_LOGIN_REQUEST_USERLOGINOUT;
const int LoginCID_ARRAYSIZE = LoginCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginCID_descriptor();
inline const ::std::string& LoginCID_Name(LoginCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginCID_descriptor(), value);
}
inline bool LoginCID_Parse(
    const ::std::string& name, LoginCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginCID>(
    LoginCID_descriptor(), name, value);
}
enum ServerCID {
  CID_SERVER_ZERO = 0,
  CID_SERVER_MSGSERVER_INFO = 513,
  CID_SERVER_VALIDATE_REQUEST = 514,
  CID_SERVER_VALIDATE_RESPONE = 515,
  CID_SERVER_ROUTE_MSG = 516,
  CID_SERVER_ROUTE_BROADCAST = 517,
  CID_SERVER_GET_SERVER_INDEX_REQUEST = 518,
  CID_SERVER_GET_SERVER_INDEX_RESPONE = 519,
  CID_SERVER_ROUTE_MESSAGE = 520,
  CID_SERVER_FILE_SERVER_IP_REQUEST = 521,
  CID_SERVER_FILE_SERVER_IP_RESPONE = 522,
  CID_SERVER_FILE_TRANSFER_REQUEST = 523,
  CID_SERVER_FILE_TRANSFER_RESPONE = 524,
  CID_SERVER_USER_GO_ONLINE = 525,
  CID_SERVER_USER_GO_OFFLINE = 526,
  CID_SERVER_GET_FRIENDS_STATUS_REQUEST = 527,
  CID_SERVER_GET_FRIENDS_STATUS_RESPONE = 528,
  CID_SERVER_GET_ONLINE_GROUP_MEMBER = 530,
  CID_SERVER_FORWARD_GROUP_MESSAGE = 529,
  ServerCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServerCID_IsValid(int value);
const ServerCID ServerCID_MIN = CID_SERVER_ZERO;
const ServerCID ServerCID_MAX = CID_SERVER_GET_ONLINE_GROUP_MEMBER;
const int ServerCID_ARRAYSIZE = ServerCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerCID_descriptor();
inline const ::std::string& ServerCID_Name(ServerCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerCID_descriptor(), value);
}
inline bool ServerCID_Parse(
    const ::std::string& name, ServerCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerCID>(
    ServerCID_descriptor(), name, value);
}
enum OtherCID {
  CID_OTHER_ZERO = 0,
  CID_OTHER_HEARTBEAT = 769,
  OtherCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OtherCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OtherCID_IsValid(int value);
const OtherCID OtherCID_MIN = CID_OTHER_ZERO;
const OtherCID OtherCID_MAX = CID_OTHER_HEARTBEAT;
const int OtherCID_ARRAYSIZE = OtherCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* OtherCID_descriptor();
inline const ::std::string& OtherCID_Name(OtherCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    OtherCID_descriptor(), value);
}
inline bool OtherCID_Parse(
    const ::std::string& name, OtherCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OtherCID>(
    OtherCID_descriptor(), name, value);
}
enum FriendListCID {
  CID_FRIENDLIST_ZERO = 0,
  CID_FRIENDLIST_GET_REQUEST = 1025,
  CID_FRIENDLIST_GET_RESPONE = 1026,
  CID_FRIENDLIST_FRIEND_STATUS_CHANGE = 1027,
  CID_FRIENDLIST_SIGNATURE_CHANGED_REQUEST = 1028,
  CID_FRIENDLIST_SIGNATURE_CHANGED_RESPONE = 1029,
  CID_FRIENDLIST_FRIEND_SIGNATURE_CHANGED = 1030,
  CID_FRIENDLIST_MODEFY_FRIEND_GROUP_NAME = 1031,
  CID_FRIENDLIST_ADD_FRIEND_GROUP_REQUEST = 1032,
  CID_FRIENDLIST_ADD_FRIEND_GROUP_RESPONE = 1033,
  CID_FRIENDLIST_GET_GROUPS_REQUEST = 1034,
  CID_FRIENDLIST_GET_GROUPS_REPSONE = 1035,
  CID_FRIENDLIST_RENAME_FRIEND_GROUP_REQUEST = 1036,
  CID_FRIENDLIST_DELETE_FRIEND_GROUP_REQUEST = 1037,
  CID_FRIENDLIST_MOVE_FRIEND_TO_GROUP_REQUEST = 1038,
  CID_FRIENDLIST_DELETE_FRIEND_REQUEST = 1039,
  CID_FRIENDLIST_MODIFY_FRIEND_REMARK_RQUEST = 1040,
  CID_FRIENDLIST_SEARCH_FRIEND_REQUEST = 1041,
  CID_FRIENDLIST_SEARCH_FRIEND_RESPONE = 1042,
  CID_FRIENDLIST_ADD_FRIEND_REQUEST = 1043,
  CID_FRIENDLIST_ADD_FRIEND_RESPONE = 1044,
  CID_FRIENDLIST_GET_REQUEST_HISTORY_REQUEST = 1045,
  CID_FRIENDLIST_GET_REQUEST_HISTORY_RESPONE = 1046,
  FriendListCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FriendListCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FriendListCID_IsValid(int value);
const FriendListCID FriendListCID_MIN = CID_FRIENDLIST_ZERO;
const FriendListCID FriendListCID_MAX = CID_FRIENDLIST_GET_REQUEST_HISTORY_RESPONE;
const int FriendListCID_ARRAYSIZE = FriendListCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FriendListCID_descriptor();
inline const ::std::string& FriendListCID_Name(FriendListCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FriendListCID_descriptor(), value);
}
inline bool FriendListCID_Parse(
    const ::std::string& name, FriendListCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FriendListCID>(
    FriendListCID_descriptor(), name, value);
}
enum SessionListCID {
  CID_SESSIONLIST_ZERO = 0,
  CID_SESSIONLIST_ADD_SESSION = 1281,
  CID_SESSIONLIST_DEL_SESSION = 1282,
  CID_SESSIONLIST_UPD_SESSION = 1283,
  CID_SESSIONLIST_TOP_SESSION = 1284,
  CID_SESSIONLIST_GET_SESSIONS_REQUEST = 1285,
  CID_SESSIONLIST_GET_SESSIONS_RESPONE = 1286,
  SessionListCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SessionListCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SessionListCID_IsValid(int value);
const SessionListCID SessionListCID_MIN = CID_SESSIONLIST_ZERO;
const SessionListCID SessionListCID_MAX = CID_SESSIONLIST_GET_SESSIONS_RESPONE;
const int SessionListCID_ARRAYSIZE = SessionListCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SessionListCID_descriptor();
inline const ::std::string& SessionListCID_Name(SessionListCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SessionListCID_descriptor(), value);
}
inline bool SessionListCID_Parse(
    const ::std::string& name, SessionListCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SessionListCID>(
    SessionListCID_descriptor(), name, value);
}
enum MessageCID {
  CID_MESSAGE_ZERO = 0,
  CID_MESSAGE_DATA = 1537,
  CID_MESSAGE_SAVE = 1538,
  CID_MESSAGE_UPDATE = 1539,
  CID_MESSAGE_GET_LATEST_MSG_ID_REQUEST = 1540,
  CID_MESSAGE_GET_LATEST_MSG_ID_RESPONE = 1541,
  MessageCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageCID_IsValid(int value);
const MessageCID MessageCID_MIN = CID_MESSAGE_ZERO;
const MessageCID MessageCID_MAX = CID_MESSAGE_GET_LATEST_MSG_ID_RESPONE;
const int MessageCID_ARRAYSIZE = MessageCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageCID_descriptor();
inline const ::std::string& MessageCID_Name(MessageCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageCID_descriptor(), value);
}
inline bool MessageCID_Parse(
    const ::std::string& name, MessageCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageCID>(
    MessageCID_descriptor(), name, value);
}
enum GroupCID {
  CID_GROUP_ZERO = 0,
  CID_GROUP_CREATE_REQUEST = 1793,
  CID_GROUP_CREATE_RESPONE = 1794,
  CID_GROUP_GET_LIST_REQUEST = 1795,
  CID_GROUP_GET_LIST_RESPONE = 1796,
  CID_GROUP_ADD_GROUP_REQUEST = 1797,
  CID_GROUP_ADD_GROUP_RESPONE = 1798,
  CID_GROUP_GET_MEMBER_REQUEST = 1799,
  CID_GROUP_GET_MEMBER_RESPONE = 1800,
  CID_GROUP_MODIFY_CARD_RESQUEST = 1801,
  CID_GROUP_SEARCH_GROUP_REQUEST = 1802,
  CID_GROUP_SEARCH_GROUP_RESPONE = 1803,
  CID_GROUP_VERIFY_NOTIFY = 1804,
  GroupCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GroupCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GroupCID_IsValid(int value);
const GroupCID GroupCID_MIN = CID_GROUP_ZERO;
const GroupCID GroupCID_MAX = CID_GROUP_VERIFY_NOTIFY;
const int GroupCID_ARRAYSIZE = GroupCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* GroupCID_descriptor();
inline const ::std::string& GroupCID_Name(GroupCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    GroupCID_descriptor(), value);
}
inline bool GroupCID_Parse(
    const ::std::string& name, GroupCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GroupCID>(
    GroupCID_descriptor(), name, value);
}
enum FileCID {
  CID_FILE_ZERO = 0,
  CID_FILE_REQUEST = 2049,
  CID_FILE_RESPONE = 2050,
  CID_FILE_NOTIFY = 2051,
  CID_FILE_GET_BLOCK_REQUEST = 2052,
  CID_FILE_GET_BLOCK_RESPONE = 2053,
  CID_FILE_STATE = 2054,
  CID_FILE_LOGIN_REQUEST = 2055,
  CID_FILE_LOGIN_RESPONE = 2056,
  FileCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FileCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FileCID_IsValid(int value);
const FileCID FileCID_MIN = CID_FILE_ZERO;
const FileCID FileCID_MAX = CID_FILE_LOGIN_RESPONE;
const int FileCID_ARRAYSIZE = FileCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FileCID_descriptor();
inline const ::std::string& FileCID_Name(FileCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FileCID_descriptor(), value);
}
inline bool FileCID_Parse(
    const ::std::string& name, FileCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FileCID>(
    FileCID_descriptor(), name, value);
}
enum ResultType {
  NONE = 0,
  NO_MSG_SERVER = 1,
  MSG_SERVER_FULL = 2,
  SIGNATURE_MODIFY_FAILED = 3,
  ResultType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResultType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResultType_IsValid(int value);
const ResultType ResultType_MIN = NONE;
const ResultType ResultType_MAX = SIGNATURE_MODIFY_FAILED;
const int ResultType_ARRAYSIZE = ResultType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResultType_descriptor();
inline const ::std::string& ResultType_Name(ResultType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResultType_descriptor(), value);
}
inline bool ResultType_Parse(
    const ::std::string& name, ResultType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResultType>(
    ResultType_descriptor(), name, value);
}
enum UserStatusType {
  USER_STATUS_ZERO = 0,
  USER_STATUS_ONLINE = 1,
  USER_STATUS_OFFLINE = 2,
  USER_STATUS_HIDE = 3,
  UserStatusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UserStatusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UserStatusType_IsValid(int value);
const UserStatusType UserStatusType_MIN = USER_STATUS_ZERO;
const UserStatusType UserStatusType_MAX = USER_STATUS_HIDE;
const int UserStatusType_ARRAYSIZE = UserStatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserStatusType_descriptor();
inline const ::std::string& UserStatusType_Name(UserStatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserStatusType_descriptor(), value);
}
inline bool UserStatusType_Parse(
    const ::std::string& name, UserStatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserStatusType>(
    UserStatusType_descriptor(), name, value);
}
enum SessionType {
  SESSION_TYPE_ZERO = 0,
  SESSION_TYPE_SINGLE = 1,
  SESSION_TYPE_GROUP = 2,
  SESSION_TYPE_VALIDATE_MSG = 3,
  SessionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SessionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SessionType_IsValid(int value);
const SessionType SessionType_MIN = SESSION_TYPE_ZERO;
const SessionType SessionType_MAX = SESSION_TYPE_VALIDATE_MSG;
const int SessionType_ARRAYSIZE = SessionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SessionType_descriptor();
inline const ::std::string& SessionType_Name(SessionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SessionType_descriptor(), value);
}
inline bool SessionType_Parse(
    const ::std::string& name, SessionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SessionType>(
    SessionType_descriptor(), name, value);
}
enum SessionFlag {
  SESSION_FLAG_ZERO = 0,
  SESSION_FLAG_NORMAL = 1,
  SESSION_FLAG_ONTOP = 2,
  SessionFlag_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SessionFlag_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SessionFlag_IsValid(int value);
const SessionFlag SessionFlag_MIN = SESSION_FLAG_ZERO;
const SessionFlag SessionFlag_MAX = SESSION_FLAG_ONTOP;
const int SessionFlag_ARRAYSIZE = SessionFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* SessionFlag_descriptor();
inline const ::std::string& SessionFlag_Name(SessionFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    SessionFlag_descriptor(), value);
}
inline bool SessionFlag_Parse(
    const ::std::string& name, SessionFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SessionFlag>(
    SessionFlag_descriptor(), name, value);
}
enum MessageType {
  MESSAGE_ZERO = 0,
  MESSAGE_TYPE_SINGLE_TEXT = 1,
  MESSAGE_TYPE_SINGLE_AUDIO = 2,
  MESSAGE_TYPE_GROUP_TEXT = 3,
  MESSAGE_TYPE_GROUP_AUDIO = 4,
  MESSAGE_TYPE_VALIDATE_MSG = 5,
  MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = MESSAGE_ZERO;
const MessageType MessageType_MAX = MESSAGE_TYPE_VALIDATE_MSG;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
enum RouteMessageType {
  ROUTE_MESSAGE_ZERO = 0,
  ROUTE_MESSAGE_FRIEND_STATUS_CHANGE = 1,
  ROUTE_MESSAGE_FRIEND_SIGNATURE_CHANGE = 2,
  RouteMessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RouteMessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RouteMessageType_IsValid(int value);
const RouteMessageType RouteMessageType_MIN = ROUTE_MESSAGE_ZERO;
const RouteMessageType RouteMessageType_MAX = ROUTE_MESSAGE_FRIEND_SIGNATURE_CHANGE;
const int RouteMessageType_ARRAYSIZE = RouteMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RouteMessageType_descriptor();
inline const ::std::string& RouteMessageType_Name(RouteMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RouteMessageType_descriptor(), value);
}
inline bool RouteMessageType_Parse(
    const ::std::string& name, RouteMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RouteMessageType>(
    RouteMessageType_descriptor(), name, value);
}
enum SearchType {
  SEARCH_TYPE_ZERO = 0,
  SEARCH_TYPE_ACCOUNT = 1,
  SEARCH_TYPE_NICKNAME = 2,
  SearchType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SearchType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SearchType_IsValid(int value);
const SearchType SearchType_MIN = SEARCH_TYPE_ZERO;
const SearchType SearchType_MAX = SEARCH_TYPE_NICKNAME;
const int SearchType_ARRAYSIZE = SearchType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SearchType_descriptor();
inline const ::std::string& SearchType_Name(SearchType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SearchType_descriptor(), value);
}
inline bool SearchType_Parse(
    const ::std::string& name, SearchType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SearchType>(
    SearchType_descriptor(), name, value);
}
enum GroupType {
  GROUP_TYPE_ZERO = 0,
  GROUP_TYPE_NORMAL = 1,
  GROUP_TYPE_TMP = 2,
  GroupType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GroupType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GroupType_IsValid(int value);
const GroupType GroupType_MIN = GROUP_TYPE_ZERO;
const GroupType GroupType_MAX = GROUP_TYPE_TMP;
const int GroupType_ARRAYSIZE = GroupType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GroupType_descriptor();
inline const ::std::string& GroupType_Name(GroupType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GroupType_descriptor(), value);
}
inline bool GroupType_Parse(
    const ::std::string& name, GroupType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GroupType>(
    GroupType_descriptor(), name, value);
}
enum GroupVerifyType {
  GROUP_VERIFY_ZERO = 0,
  GROUP_VERIFY_NEED = 1,
  GROUP_VERIFY_ALL = 2,
  GROUP_VERIFY_NONE = 3,
  GroupVerifyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GroupVerifyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GroupVerifyType_IsValid(int value);
const GroupVerifyType GroupVerifyType_MIN = GROUP_VERIFY_ZERO;
const GroupVerifyType GroupVerifyType_MAX = GROUP_VERIFY_NONE;
const int GroupVerifyType_ARRAYSIZE = GroupVerifyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GroupVerifyType_descriptor();
inline const ::std::string& GroupVerifyType_Name(GroupVerifyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GroupVerifyType_descriptor(), value);
}
inline bool GroupVerifyType_Parse(
    const ::std::string& name, GroupVerifyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GroupVerifyType>(
    GroupVerifyType_descriptor(), name, value);
}
enum TransferFileType {
  FILE_TYPE_ZERO = 0,
  FILE_TYPE_ONLINE = 1,
  FILE_TYPE_OFFLINE = 2,
  TransferFileType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TransferFileType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TransferFileType_IsValid(int value);
const TransferFileType TransferFileType_MIN = FILE_TYPE_ZERO;
const TransferFileType TransferFileType_MAX = FILE_TYPE_OFFLINE;
const int TransferFileType_ARRAYSIZE = TransferFileType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TransferFileType_descriptor();
inline const ::std::string& TransferFileType_Name(TransferFileType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TransferFileType_descriptor(), value);
}
inline bool TransferFileType_Parse(
    const ::std::string& name, TransferFileType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TransferFileType>(
    TransferFileType_descriptor(), name, value);
}
enum ClientFileRole {
  CLIENT_ZERO = 0,
  CLIENT_REALTIME_SENDER = 1,
  CLIENT_REALTIME_RECVER = 2,
  CLIENT_OFFLINE_UPLOAD = 3,
  CLIENT_OFFLINE_DOWNLOAD = 4,
  ClientFileRole_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientFileRole_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientFileRole_IsValid(int value);
const ClientFileRole ClientFileRole_MIN = CLIENT_ZERO;
const ClientFileRole ClientFileRole_MAX = CLIENT_OFFLINE_DOWNLOAD;
const int ClientFileRole_ARRAYSIZE = ClientFileRole_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientFileRole_descriptor();
inline const ::std::string& ClientFileRole_Name(ClientFileRole value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientFileRole_descriptor(), value);
}
inline bool ClientFileRole_Parse(
    const ::std::string& name, ClientFileRole* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientFileRole>(
    ClientFileRole_descriptor(), name, value);
}
enum ClientFileState {
  CLIENT_FILE_ZERO = 0,
  CLIENT_FILE_PEER_READY = 1,
  CLIENT_FILE_CANCEL = 2,
  CLIENT_FILE_REFUSE = 3,
  CLIENT_FILE_DONE = 4,
  ClientFileState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientFileState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientFileState_IsValid(int value);
const ClientFileState ClientFileState_MIN = CLIENT_FILE_ZERO;
const ClientFileState ClientFileState_MAX = CLIENT_FILE_DONE;
const int ClientFileState_ARRAYSIZE = ClientFileState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientFileState_descriptor();
inline const ::std::string& ClientFileState_Name(ClientFileState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientFileState_descriptor(), value);
}
inline bool ClientFileState_Parse(
    const ::std::string& name, ClientFileState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientFileState>(
    ClientFileState_descriptor(), name, value);
}
// ===================================================================

class UserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.base.UserInfo) */ {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserInfo(UserInfo&& from) noexcept
    : UserInfo() {
    *this = ::std::move(from);
  }

  inline UserInfo& operator=(UserInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UserInfo* other);
  friend void swap(UserInfo& a, UserInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserInfo* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UserInfo>(NULL);
  }

  UserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UserInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_nick = 4;
  void clear_user_nick();
  static const int kUserNickFieldNumber = 4;
  const ::std::string& user_nick() const;
  void set_user_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_user_nick(::std::string&& value);
  #endif
  void set_user_nick(const char* value);
  void set_user_nick(const char* value, size_t size);
  ::std::string* mutable_user_nick();
  ::std::string* release_user_nick();
  void set_allocated_user_nick(::std::string* user_nick);

  // string user_header_url = 5;
  void clear_user_header_url();
  static const int kUserHeaderUrlFieldNumber = 5;
  const ::std::string& user_header_url() const;
  void set_user_header_url(const ::std::string& value);
  #if LANG_CXX11
  void set_user_header_url(::std::string&& value);
  #endif
  void set_user_header_url(const char* value);
  void set_user_header_url(const char* value, size_t size);
  ::std::string* mutable_user_header_url();
  ::std::string* release_user_header_url();
  void set_allocated_user_header_url(::std::string* user_header_url);

  // string user_email = 6;
  void clear_user_email();
  static const int kUserEmailFieldNumber = 6;
  const ::std::string& user_email() const;
  void set_user_email(const ::std::string& value);
  #if LANG_CXX11
  void set_user_email(::std::string&& value);
  #endif
  void set_user_email(const char* value);
  void set_user_email(const char* value, size_t size);
  ::std::string* mutable_user_email();
  ::std::string* release_user_email();
  void set_allocated_user_email(::std::string* user_email);

  // string user_phone = 7;
  void clear_user_phone();
  static const int kUserPhoneFieldNumber = 7;
  const ::std::string& user_phone() const;
  void set_user_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_user_phone(::std::string&& value);
  #endif
  void set_user_phone(const char* value);
  void set_user_phone(const char* value, size_t size);
  ::std::string* mutable_user_phone();
  ::std::string* release_user_phone();
  void set_allocated_user_phone(::std::string* user_phone);

  // string user_sign_info = 8;
  void clear_user_sign_info();
  static const int kUserSignInfoFieldNumber = 8;
  const ::std::string& user_sign_info() const;
  void set_user_sign_info(const ::std::string& value);
  #if LANG_CXX11
  void set_user_sign_info(::std::string&& value);
  #endif
  void set_user_sign_info(const char* value);
  void set_user_sign_info(const char* value, size_t size);
  ::std::string* mutable_user_sign_info();
  ::std::string* release_user_sign_info();
  void set_allocated_user_sign_info(::std::string* user_sign_info);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // uint32 user_account = 2;
  void clear_user_account();
  static const int kUserAccountFieldNumber = 2;
  ::google::protobuf::uint32 user_account() const;
  void set_user_account(::google::protobuf::uint32 value);

  // uint32 user_sex = 3;
  void clear_user_sex();
  static const int kUserSexFieldNumber = 3;
  ::google::protobuf::uint32 user_sex() const;
  void set_user_sex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.base.UserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_nick_;
  ::google::protobuf::internal::ArenaStringPtr user_header_url_;
  ::google::protobuf::internal::ArenaStringPtr user_email_;
  ::google::protobuf::internal::ArenaStringPtr user_phone_;
  ::google::protobuf::internal::ArenaStringPtr user_sign_info_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 user_account_;
  ::google::protobuf::uint32 user_sex_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2ebase_2eproto::TableStruct;
  friend void ::protobuf_youliao_2ebase_2eproto::InitDefaultsUserInfoImpl();
};
// -------------------------------------------------------------------

class FriendInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.base.FriendInfo) */ {
 public:
  FriendInfo();
  virtual ~FriendInfo();

  FriendInfo(const FriendInfo& from);

  inline FriendInfo& operator=(const FriendInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FriendInfo(FriendInfo&& from) noexcept
    : FriendInfo() {
    *this = ::std::move(from);
  }

  inline FriendInfo& operator=(FriendInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FriendInfo* internal_default_instance() {
    return reinterpret_cast<const FriendInfo*>(
               &_FriendInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FriendInfo* other);
  friend void swap(FriendInfo& a, FriendInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FriendInfo* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<FriendInfo>(NULL);
  }

  FriendInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<FriendInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FriendInfo& from);
  void MergeFrom(const FriendInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FriendInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string friend_nick = 5;
  void clear_friend_nick();
  static const int kFriendNickFieldNumber = 5;
  const ::std::string& friend_nick() const;
  void set_friend_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_friend_nick(::std::string&& value);
  #endif
  void set_friend_nick(const char* value);
  void set_friend_nick(const char* value, size_t size);
  ::std::string* mutable_friend_nick();
  ::std::string* release_friend_nick();
  void set_allocated_friend_nick(::std::string* friend_nick);

  // string friend_header_url = 6;
  void clear_friend_header_url();
  static const int kFriendHeaderUrlFieldNumber = 6;
  const ::std::string& friend_header_url() const;
  void set_friend_header_url(const ::std::string& value);
  #if LANG_CXX11
  void set_friend_header_url(::std::string&& value);
  #endif
  void set_friend_header_url(const char* value);
  void set_friend_header_url(const char* value, size_t size);
  ::std::string* mutable_friend_header_url();
  ::std::string* release_friend_header_url();
  void set_allocated_friend_header_url(::std::string* friend_header_url);

  // string friend_email = 7;
  void clear_friend_email();
  static const int kFriendEmailFieldNumber = 7;
  const ::std::string& friend_email() const;
  void set_friend_email(const ::std::string& value);
  #if LANG_CXX11
  void set_friend_email(::std::string&& value);
  #endif
  void set_friend_email(const char* value);
  void set_friend_email(const char* value, size_t size);
  ::std::string* mutable_friend_email();
  ::std::string* release_friend_email();
  void set_allocated_friend_email(::std::string* friend_email);

  // string friend_phone = 8;
  void clear_friend_phone();
  static const int kFriendPhoneFieldNumber = 8;
  const ::std::string& friend_phone() const;
  void set_friend_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_friend_phone(::std::string&& value);
  #endif
  void set_friend_phone(const char* value);
  void set_friend_phone(const char* value, size_t size);
  ::std::string* mutable_friend_phone();
  ::std::string* release_friend_phone();
  void set_allocated_friend_phone(::std::string* friend_phone);

  // string friend_sign_info = 9;
  void clear_friend_sign_info();
  static const int kFriendSignInfoFieldNumber = 9;
  const ::std::string& friend_sign_info() const;
  void set_friend_sign_info(const ::std::string& value);
  #if LANG_CXX11
  void set_friend_sign_info(::std::string&& value);
  #endif
  void set_friend_sign_info(const char* value);
  void set_friend_sign_info(const char* value, size_t size);
  ::std::string* mutable_friend_sign_info();
  ::std::string* release_friend_sign_info();
  void set_allocated_friend_sign_info(::std::string* friend_sign_info);

  // string friend_remark = 10;
  void clear_friend_remark();
  static const int kFriendRemarkFieldNumber = 10;
  const ::std::string& friend_remark() const;
  void set_friend_remark(const ::std::string& value);
  #if LANG_CXX11
  void set_friend_remark(::std::string&& value);
  #endif
  void set_friend_remark(const char* value);
  void set_friend_remark(const char* value, size_t size);
  ::std::string* mutable_friend_remark();
  ::std::string* release_friend_remark();
  void set_allocated_friend_remark(::std::string* friend_remark);

  // uint32 related_id = 1;
  void clear_related_id();
  static const int kRelatedIdFieldNumber = 1;
  ::google::protobuf::uint32 related_id() const;
  void set_related_id(::google::protobuf::uint32 value);

  // uint32 friend_id = 2;
  void clear_friend_id();
  static const int kFriendIdFieldNumber = 2;
  ::google::protobuf::uint32 friend_id() const;
  void set_friend_id(::google::protobuf::uint32 value);

  // uint32 friend_account = 3;
  void clear_friend_account();
  static const int kFriendAccountFieldNumber = 3;
  ::google::protobuf::uint32 friend_account() const;
  void set_friend_account(::google::protobuf::uint32 value);

  // uint32 friend_sex = 4;
  void clear_friend_sex();
  static const int kFriendSexFieldNumber = 4;
  ::google::protobuf::uint32 friend_sex() const;
  void set_friend_sex(::google::protobuf::uint32 value);

  // bool friend_is_online = 11;
  void clear_friend_is_online();
  static const int kFriendIsOnlineFieldNumber = 11;
  bool friend_is_online() const;
  void set_friend_is_online(bool value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.base.FriendInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr friend_nick_;
  ::google::protobuf::internal::ArenaStringPtr friend_header_url_;
  ::google::protobuf::internal::ArenaStringPtr friend_email_;
  ::google::protobuf::internal::ArenaStringPtr friend_phone_;
  ::google::protobuf::internal::ArenaStringPtr friend_sign_info_;
  ::google::protobuf::internal::ArenaStringPtr friend_remark_;
  ::google::protobuf::uint32 related_id_;
  ::google::protobuf::uint32 friend_id_;
  ::google::protobuf::uint32 friend_account_;
  ::google::protobuf::uint32 friend_sex_;
  bool friend_is_online_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2ebase_2eproto::TableStruct;
  friend void ::protobuf_youliao_2ebase_2eproto::InitDefaultsFriendInfoImpl();
};
// -------------------------------------------------------------------

class SessionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.base.SessionInfo) */ {
 public:
  SessionInfo();
  virtual ~SessionInfo();

  SessionInfo(const SessionInfo& from);

  inline SessionInfo& operator=(const SessionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SessionInfo(SessionInfo&& from) noexcept
    : SessionInfo() {
    *this = ::std::move(from);
  }

  inline SessionInfo& operator=(SessionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SessionInfo* internal_default_instance() {
    return reinterpret_cast<const SessionInfo*>(
               &_SessionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SessionInfo* other);
  friend void swap(SessionInfo& a, SessionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SessionInfo* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SessionInfo>(NULL);
  }

  SessionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SessionInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SessionInfo& from);
  void MergeFrom(const SessionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SessionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes last_message_data = 7;
  void clear_last_message_data();
  static const int kLastMessageDataFieldNumber = 7;
  const ::std::string& last_message_data() const;
  void set_last_message_data(const ::std::string& value);
  #if LANG_CXX11
  void set_last_message_data(::std::string&& value);
  #endif
  void set_last_message_data(const char* value);
  void set_last_message_data(const void* value, size_t size);
  ::std::string* mutable_last_message_data();
  ::std::string* release_last_message_data();
  void set_allocated_last_message_data(::std::string* last_message_data);

  // uint32 session_id = 1;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // uint32 other_id = 2;
  void clear_other_id();
  static const int kOtherIdFieldNumber = 2;
  ::google::protobuf::uint32 other_id() const;
  void set_other_id(::google::protobuf::uint32 value);

  // uint32 session_type = 3;
  void clear_session_type();
  static const int kSessionTypeFieldNumber = 3;
  ::google::protobuf::uint32 session_type() const;
  void set_session_type(::google::protobuf::uint32 value);

  // uint32 session_top = 4;
  void clear_session_top();
  static const int kSessionTopFieldNumber = 4;
  ::google::protobuf::uint32 session_top() const;
  void set_session_top(::google::protobuf::uint32 value);

  // uint32 session_update = 5;
  void clear_session_update();
  static const int kSessionUpdateFieldNumber = 5;
  ::google::protobuf::uint32 session_update() const;
  void set_session_update(::google::protobuf::uint32 value);

  // uint32 latest_msg_id = 6;
  void clear_latest_msg_id();
  static const int kLatestMsgIdFieldNumber = 6;
  ::google::protobuf::uint32 latest_msg_id() const;
  void set_latest_msg_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.base.SessionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr last_message_data_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 other_id_;
  ::google::protobuf::uint32 session_type_;
  ::google::protobuf::uint32 session_top_;
  ::google::protobuf::uint32 session_update_;
  ::google::protobuf::uint32 latest_msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2ebase_2eproto::TableStruct;
  friend void ::protobuf_youliao_2ebase_2eproto::InitDefaultsSessionInfoImpl();
};
// -------------------------------------------------------------------

class MemberInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.base.MemberInfo) */ {
 public:
  MemberInfo();
  virtual ~MemberInfo();

  MemberInfo(const MemberInfo& from);

  inline MemberInfo& operator=(const MemberInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MemberInfo(MemberInfo&& from) noexcept
    : MemberInfo() {
    *this = ::std::move(from);
  }

  inline MemberInfo& operator=(MemberInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MemberInfo* internal_default_instance() {
    return reinterpret_cast<const MemberInfo*>(
               &_MemberInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MemberInfo* other);
  friend void swap(MemberInfo& a, MemberInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MemberInfo* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MemberInfo>(NULL);
  }

  MemberInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MemberInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MemberInfo& from);
  void MergeFrom(const MemberInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MemberInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string group_card = 2;
  void clear_group_card();
  static const int kGroupCardFieldNumber = 2;
  const ::std::string& group_card() const;
  void set_group_card(const ::std::string& value);
  #if LANG_CXX11
  void set_group_card(::std::string&& value);
  #endif
  void set_group_card(const char* value);
  void set_group_card(const char* value, size_t size);
  ::std::string* mutable_group_card();
  ::std::string* release_group_card();
  void set_allocated_group_card(::std::string* group_card);

  // .youliao.pdu.base.UserInfo user_info = 4;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 4;
  const ::youliao::pdu::base::UserInfo& user_info() const;
  ::youliao::pdu::base::UserInfo* release_user_info();
  ::youliao::pdu::base::UserInfo* mutable_user_info();
  void set_allocated_user_info(::youliao::pdu::base::UserInfo* user_info);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // uint32 last_chat_time = 3;
  void clear_last_chat_time();
  static const int kLastChatTimeFieldNumber = 3;
  ::google::protobuf::uint32 last_chat_time() const;
  void set_last_chat_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.base.MemberInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr group_card_;
  ::youliao::pdu::base::UserInfo* user_info_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 last_chat_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2ebase_2eproto::TableStruct;
  friend void ::protobuf_youliao_2ebase_2eproto::InitDefaultsMemberInfoImpl();
};
// -------------------------------------------------------------------

class AddRequestInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.base.AddRequestInfo) */ {
 public:
  AddRequestInfo();
  virtual ~AddRequestInfo();

  AddRequestInfo(const AddRequestInfo& from);

  inline AddRequestInfo& operator=(const AddRequestInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddRequestInfo(AddRequestInfo&& from) noexcept
    : AddRequestInfo() {
    *this = ::std::move(from);
  }

  inline AddRequestInfo& operator=(AddRequestInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRequestInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddRequestInfo* internal_default_instance() {
    return reinterpret_cast<const AddRequestInfo*>(
               &_AddRequestInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(AddRequestInfo* other);
  friend void swap(AddRequestInfo& a, AddRequestInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddRequestInfo* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<AddRequestInfo>(NULL);
  }

  AddRequestInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<AddRequestInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRequestInfo& from);
  void MergeFrom(const AddRequestInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRequestInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string validate_data = 5;
  void clear_validate_data();
  static const int kValidateDataFieldNumber = 5;
  const ::std::string& validate_data() const;
  void set_validate_data(const ::std::string& value);
  #if LANG_CXX11
  void set_validate_data(::std::string&& value);
  #endif
  void set_validate_data(const char* value);
  void set_validate_data(const char* value, size_t size);
  ::std::string* mutable_validate_data();
  ::std::string* release_validate_data();
  void set_allocated_validate_data(::std::string* validate_data);

  // string other_head_url = 6;
  void clear_other_head_url();
  static const int kOtherHeadUrlFieldNumber = 6;
  const ::std::string& other_head_url() const;
  void set_other_head_url(const ::std::string& value);
  #if LANG_CXX11
  void set_other_head_url(::std::string&& value);
  #endif
  void set_other_head_url(const char* value);
  void set_other_head_url(const char* value, size_t size);
  ::std::string* mutable_other_head_url();
  ::std::string* release_other_head_url();
  void set_allocated_other_head_url(::std::string* other_head_url);

  // string other_nick = 7;
  void clear_other_nick();
  static const int kOtherNickFieldNumber = 7;
  const ::std::string& other_nick() const;
  void set_other_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_other_nick(::std::string&& value);
  #endif
  void set_other_nick(const char* value);
  void set_other_nick(const char* value, size_t size);
  ::std::string* mutable_other_nick();
  ::std::string* release_other_nick();
  void set_allocated_other_nick(::std::string* other_nick);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 other_id = 2;
  void clear_other_id();
  static const int kOtherIdFieldNumber = 2;
  ::google::protobuf::uint32 other_id() const;
  void set_other_id(::google::protobuf::uint32 value);

  // uint32 result_id = 3;
  void clear_result_id();
  static const int kResultIdFieldNumber = 3;
  ::google::protobuf::uint32 result_id() const;
  void set_result_id(::google::protobuf::uint32 value);

  // uint32 handle_time = 4;
  void clear_handle_time();
  static const int kHandleTimeFieldNumber = 4;
  ::google::protobuf::uint32 handle_time() const;
  void set_handle_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.base.AddRequestInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr validate_data_;
  ::google::protobuf::internal::ArenaStringPtr other_head_url_;
  ::google::protobuf::internal::ArenaStringPtr other_nick_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 other_id_;
  ::google::protobuf::uint32 result_id_;
  ::google::protobuf::uint32 handle_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2ebase_2eproto::TableStruct;
  friend void ::protobuf_youliao_2ebase_2eproto::InitDefaultsAddRequestInfoImpl();
};
// -------------------------------------------------------------------

class GroupInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.base.GroupInfo) */ {
 public:
  GroupInfo();
  virtual ~GroupInfo();

  GroupInfo(const GroupInfo& from);

  inline GroupInfo& operator=(const GroupInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupInfo(GroupInfo&& from) noexcept
    : GroupInfo() {
    *this = ::std::move(from);
  }

  inline GroupInfo& operator=(GroupInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroupInfo* internal_default_instance() {
    return reinterpret_cast<const GroupInfo*>(
               &_GroupInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GroupInfo* other);
  friend void swap(GroupInfo& a, GroupInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupInfo* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GroupInfo>(NULL);
  }

  GroupInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GroupInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupInfo& from);
  void MergeFrom(const GroupInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 managers = 7;
  int managers_size() const;
  void clear_managers();
  static const int kManagersFieldNumber = 7;
  ::google::protobuf::uint32 managers(int index) const;
  void set_managers(int index, ::google::protobuf::uint32 value);
  void add_managers(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      managers() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_managers();

  // repeated uint32 members = 8;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 8;
  ::google::protobuf::uint32 members(int index) const;
  void set_members(int index, ::google::protobuf::uint32 value);
  void add_members(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_members();

  // string group_name = 2;
  void clear_group_name();
  static const int kGroupNameFieldNumber = 2;
  const ::std::string& group_name() const;
  void set_group_name(const ::std::string& value);
  #if LANG_CXX11
  void set_group_name(::std::string&& value);
  #endif
  void set_group_name(const char* value);
  void set_group_name(const char* value, size_t size);
  ::std::string* mutable_group_name();
  ::std::string* release_group_name();
  void set_allocated_group_name(::std::string* group_name);

  // string group_head = 3;
  void clear_group_head();
  static const int kGroupHeadFieldNumber = 3;
  const ::std::string& group_head() const;
  void set_group_head(const ::std::string& value);
  #if LANG_CXX11
  void set_group_head(::std::string&& value);
  #endif
  void set_group_head(const char* value);
  void set_group_head(const char* value, size_t size);
  ::std::string* mutable_group_head();
  ::std::string* release_group_head();
  void set_allocated_group_head(::std::string* group_head);

  // uint32 group_id = 1;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 group_creator = 4;
  void clear_group_creator();
  static const int kGroupCreatorFieldNumber = 4;
  ::google::protobuf::uint32 group_creator() const;
  void set_group_creator(::google::protobuf::uint32 value);

  // uint32 group_capacity = 5;
  void clear_group_capacity();
  static const int kGroupCapacityFieldNumber = 5;
  ::google::protobuf::uint32 group_capacity() const;
  void set_group_capacity(::google::protobuf::uint32 value);

  // uint32 group_created = 6;
  void clear_group_created();
  static const int kGroupCreatedFieldNumber = 6;
  ::google::protobuf::uint32 group_created() const;
  void set_group_created(::google::protobuf::uint32 value);

  // uint32 group_verify_type = 9;
  void clear_group_verify_type();
  static const int kGroupVerifyTypeFieldNumber = 9;
  ::google::protobuf::uint32 group_verify_type() const;
  void set_group_verify_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.base.GroupInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > managers_;
  mutable int _managers_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > members_;
  mutable int _members_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr group_name_;
  ::google::protobuf::internal::ArenaStringPtr group_head_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 group_creator_;
  ::google::protobuf::uint32 group_capacity_;
  ::google::protobuf::uint32 group_created_;
  ::google::protobuf::uint32 group_verify_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2ebase_2eproto::TableStruct;
  friend void ::protobuf_youliao_2ebase_2eproto::InitDefaultsGroupInfoImpl();
};
// -------------------------------------------------------------------

class IpAddress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.base.IpAddress) */ {
 public:
  IpAddress();
  virtual ~IpAddress();

  IpAddress(const IpAddress& from);

  inline IpAddress& operator=(const IpAddress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IpAddress(IpAddress&& from) noexcept
    : IpAddress() {
    *this = ::std::move(from);
  }

  inline IpAddress& operator=(IpAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IpAddress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IpAddress* internal_default_instance() {
    return reinterpret_cast<const IpAddress*>(
               &_IpAddress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(IpAddress* other);
  friend void swap(IpAddress& a, IpAddress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IpAddress* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<IpAddress>(NULL);
  }

  IpAddress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<IpAddress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IpAddress& from);
  void MergeFrom(const IpAddress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IpAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.base.IpAddress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 port_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2ebase_2eproto::TableStruct;
  friend void ::protobuf_youliao_2ebase_2eproto::InitDefaultsIpAddressImpl();
};
// -------------------------------------------------------------------

class HeartBeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.base.HeartBeat) */ {
 public:
  HeartBeat();
  virtual ~HeartBeat();

  HeartBeat(const HeartBeat& from);

  inline HeartBeat& operator=(const HeartBeat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartBeat(HeartBeat&& from) noexcept
    : HeartBeat() {
    *this = ::std::move(from);
  }

  inline HeartBeat& operator=(HeartBeat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartBeat* internal_default_instance() {
    return reinterpret_cast<const HeartBeat*>(
               &_HeartBeat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(HeartBeat* other);
  friend void swap(HeartBeat& a, HeartBeat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartBeat* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<HeartBeat>(NULL);
  }

  HeartBeat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<HeartBeat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartBeat& from);
  void MergeFrom(const HeartBeat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartBeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:youliao.pdu.base.HeartBeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2ebase_2eproto::TableStruct;
  friend void ::protobuf_youliao_2ebase_2eproto::InitDefaultsHeartBeatImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserInfo

// uint32 user_id = 1;
inline void UserInfo::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 UserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_id)
  return user_id_;
}
inline void UserInfo::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_id)
}

// uint32 user_account = 2;
inline void UserInfo::clear_user_account() {
  user_account_ = 0u;
}
inline ::google::protobuf::uint32 UserInfo::user_account() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_account)
  return user_account_;
}
inline void UserInfo::set_user_account(::google::protobuf::uint32 value) {
  
  user_account_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_account)
}

// uint32 user_sex = 3;
inline void UserInfo::clear_user_sex() {
  user_sex_ = 0u;
}
inline ::google::protobuf::uint32 UserInfo::user_sex() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_sex)
  return user_sex_;
}
inline void UserInfo::set_user_sex(::google::protobuf::uint32 value) {
  
  user_sex_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_sex)
}

// string user_nick = 4;
inline void UserInfo::clear_user_nick() {
  user_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::user_nick() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_nick)
  return user_nick_.GetNoArena();
}
inline void UserInfo::set_user_nick(const ::std::string& value) {
  
  user_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_nick)
}
#if LANG_CXX11
inline void UserInfo::set_user_nick(::std::string&& value) {
  
  user_nick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.UserInfo.user_nick)
}
#endif
inline void UserInfo::set_user_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.UserInfo.user_nick)
}
inline void UserInfo::set_user_nick(const char* value, size_t size) {
  
  user_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.UserInfo.user_nick)
}
inline ::std::string* UserInfo::mutable_user_nick() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.UserInfo.user_nick)
  return user_nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_user_nick() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.UserInfo.user_nick)
  
  return user_nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_user_nick(::std::string* user_nick) {
  if (user_nick != NULL) {
    
  } else {
    
  }
  user_nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_nick);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.UserInfo.user_nick)
}

// string user_header_url = 5;
inline void UserInfo::clear_user_header_url() {
  user_header_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::user_header_url() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_header_url)
  return user_header_url_.GetNoArena();
}
inline void UserInfo::set_user_header_url(const ::std::string& value) {
  
  user_header_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_header_url)
}
#if LANG_CXX11
inline void UserInfo::set_user_header_url(::std::string&& value) {
  
  user_header_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.UserInfo.user_header_url)
}
#endif
inline void UserInfo::set_user_header_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_header_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.UserInfo.user_header_url)
}
inline void UserInfo::set_user_header_url(const char* value, size_t size) {
  
  user_header_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.UserInfo.user_header_url)
}
inline ::std::string* UserInfo::mutable_user_header_url() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.UserInfo.user_header_url)
  return user_header_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_user_header_url() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.UserInfo.user_header_url)
  
  return user_header_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_user_header_url(::std::string* user_header_url) {
  if (user_header_url != NULL) {
    
  } else {
    
  }
  user_header_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_header_url);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.UserInfo.user_header_url)
}

// string user_email = 6;
inline void UserInfo::clear_user_email() {
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::user_email() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_email)
  return user_email_.GetNoArena();
}
inline void UserInfo::set_user_email(const ::std::string& value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_email)
}
#if LANG_CXX11
inline void UserInfo::set_user_email(::std::string&& value) {
  
  user_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.UserInfo.user_email)
}
#endif
inline void UserInfo::set_user_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.UserInfo.user_email)
}
inline void UserInfo::set_user_email(const char* value, size_t size) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.UserInfo.user_email)
}
inline ::std::string* UserInfo::mutable_user_email() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.UserInfo.user_email)
  return user_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_user_email() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.UserInfo.user_email)
  
  return user_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_user_email(::std::string* user_email) {
  if (user_email != NULL) {
    
  } else {
    
  }
  user_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_email);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.UserInfo.user_email)
}

// string user_phone = 7;
inline void UserInfo::clear_user_phone() {
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::user_phone() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_phone)
  return user_phone_.GetNoArena();
}
inline void UserInfo::set_user_phone(const ::std::string& value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_phone)
}
#if LANG_CXX11
inline void UserInfo::set_user_phone(::std::string&& value) {
  
  user_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.UserInfo.user_phone)
}
#endif
inline void UserInfo::set_user_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.UserInfo.user_phone)
}
inline void UserInfo::set_user_phone(const char* value, size_t size) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.UserInfo.user_phone)
}
inline ::std::string* UserInfo::mutable_user_phone() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.UserInfo.user_phone)
  return user_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_user_phone() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.UserInfo.user_phone)
  
  return user_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_user_phone(::std::string* user_phone) {
  if (user_phone != NULL) {
    
  } else {
    
  }
  user_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_phone);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.UserInfo.user_phone)
}

// string user_sign_info = 8;
inline void UserInfo::clear_user_sign_info() {
  user_sign_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::user_sign_info() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_sign_info)
  return user_sign_info_.GetNoArena();
}
inline void UserInfo::set_user_sign_info(const ::std::string& value) {
  
  user_sign_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_sign_info)
}
#if LANG_CXX11
inline void UserInfo::set_user_sign_info(::std::string&& value) {
  
  user_sign_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.UserInfo.user_sign_info)
}
#endif
inline void UserInfo::set_user_sign_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_sign_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.UserInfo.user_sign_info)
}
inline void UserInfo::set_user_sign_info(const char* value, size_t size) {
  
  user_sign_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.UserInfo.user_sign_info)
}
inline ::std::string* UserInfo::mutable_user_sign_info() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.UserInfo.user_sign_info)
  return user_sign_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_user_sign_info() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.UserInfo.user_sign_info)
  
  return user_sign_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_user_sign_info(::std::string* user_sign_info) {
  if (user_sign_info != NULL) {
    
  } else {
    
  }
  user_sign_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_sign_info);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.UserInfo.user_sign_info)
}

// -------------------------------------------------------------------

// FriendInfo

// uint32 related_id = 1;
inline void FriendInfo::clear_related_id() {
  related_id_ = 0u;
}
inline ::google::protobuf::uint32 FriendInfo::related_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.FriendInfo.related_id)
  return related_id_;
}
inline void FriendInfo::set_related_id(::google::protobuf::uint32 value) {
  
  related_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.FriendInfo.related_id)
}

// uint32 friend_id = 2;
inline void FriendInfo::clear_friend_id() {
  friend_id_ = 0u;
}
inline ::google::protobuf::uint32 FriendInfo::friend_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.FriendInfo.friend_id)
  return friend_id_;
}
inline void FriendInfo::set_friend_id(::google::protobuf::uint32 value) {
  
  friend_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.FriendInfo.friend_id)
}

// uint32 friend_account = 3;
inline void FriendInfo::clear_friend_account() {
  friend_account_ = 0u;
}
inline ::google::protobuf::uint32 FriendInfo::friend_account() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.FriendInfo.friend_account)
  return friend_account_;
}
inline void FriendInfo::set_friend_account(::google::protobuf::uint32 value) {
  
  friend_account_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.FriendInfo.friend_account)
}

// uint32 friend_sex = 4;
inline void FriendInfo::clear_friend_sex() {
  friend_sex_ = 0u;
}
inline ::google::protobuf::uint32 FriendInfo::friend_sex() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.FriendInfo.friend_sex)
  return friend_sex_;
}
inline void FriendInfo::set_friend_sex(::google::protobuf::uint32 value) {
  
  friend_sex_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.FriendInfo.friend_sex)
}

// string friend_nick = 5;
inline void FriendInfo::clear_friend_nick() {
  friend_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendInfo::friend_nick() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.FriendInfo.friend_nick)
  return friend_nick_.GetNoArena();
}
inline void FriendInfo::set_friend_nick(const ::std::string& value) {
  
  friend_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.FriendInfo.friend_nick)
}
#if LANG_CXX11
inline void FriendInfo::set_friend_nick(::std::string&& value) {
  
  friend_nick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.FriendInfo.friend_nick)
}
#endif
inline void FriendInfo::set_friend_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  friend_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.FriendInfo.friend_nick)
}
inline void FriendInfo::set_friend_nick(const char* value, size_t size) {
  
  friend_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.FriendInfo.friend_nick)
}
inline ::std::string* FriendInfo::mutable_friend_nick() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.FriendInfo.friend_nick)
  return friend_nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendInfo::release_friend_nick() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.FriendInfo.friend_nick)
  
  return friend_nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendInfo::set_allocated_friend_nick(::std::string* friend_nick) {
  if (friend_nick != NULL) {
    
  } else {
    
  }
  friend_nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friend_nick);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.FriendInfo.friend_nick)
}

// string friend_header_url = 6;
inline void FriendInfo::clear_friend_header_url() {
  friend_header_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendInfo::friend_header_url() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.FriendInfo.friend_header_url)
  return friend_header_url_.GetNoArena();
}
inline void FriendInfo::set_friend_header_url(const ::std::string& value) {
  
  friend_header_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.FriendInfo.friend_header_url)
}
#if LANG_CXX11
inline void FriendInfo::set_friend_header_url(::std::string&& value) {
  
  friend_header_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.FriendInfo.friend_header_url)
}
#endif
inline void FriendInfo::set_friend_header_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  friend_header_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.FriendInfo.friend_header_url)
}
inline void FriendInfo::set_friend_header_url(const char* value, size_t size) {
  
  friend_header_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.FriendInfo.friend_header_url)
}
inline ::std::string* FriendInfo::mutable_friend_header_url() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.FriendInfo.friend_header_url)
  return friend_header_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendInfo::release_friend_header_url() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.FriendInfo.friend_header_url)
  
  return friend_header_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendInfo::set_allocated_friend_header_url(::std::string* friend_header_url) {
  if (friend_header_url != NULL) {
    
  } else {
    
  }
  friend_header_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friend_header_url);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.FriendInfo.friend_header_url)
}

// string friend_email = 7;
inline void FriendInfo::clear_friend_email() {
  friend_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendInfo::friend_email() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.FriendInfo.friend_email)
  return friend_email_.GetNoArena();
}
inline void FriendInfo::set_friend_email(const ::std::string& value) {
  
  friend_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.FriendInfo.friend_email)
}
#if LANG_CXX11
inline void FriendInfo::set_friend_email(::std::string&& value) {
  
  friend_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.FriendInfo.friend_email)
}
#endif
inline void FriendInfo::set_friend_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  friend_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.FriendInfo.friend_email)
}
inline void FriendInfo::set_friend_email(const char* value, size_t size) {
  
  friend_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.FriendInfo.friend_email)
}
inline ::std::string* FriendInfo::mutable_friend_email() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.FriendInfo.friend_email)
  return friend_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendInfo::release_friend_email() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.FriendInfo.friend_email)
  
  return friend_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendInfo::set_allocated_friend_email(::std::string* friend_email) {
  if (friend_email != NULL) {
    
  } else {
    
  }
  friend_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friend_email);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.FriendInfo.friend_email)
}

// string friend_phone = 8;
inline void FriendInfo::clear_friend_phone() {
  friend_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendInfo::friend_phone() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.FriendInfo.friend_phone)
  return friend_phone_.GetNoArena();
}
inline void FriendInfo::set_friend_phone(const ::std::string& value) {
  
  friend_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.FriendInfo.friend_phone)
}
#if LANG_CXX11
inline void FriendInfo::set_friend_phone(::std::string&& value) {
  
  friend_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.FriendInfo.friend_phone)
}
#endif
inline void FriendInfo::set_friend_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  friend_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.FriendInfo.friend_phone)
}
inline void FriendInfo::set_friend_phone(const char* value, size_t size) {
  
  friend_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.FriendInfo.friend_phone)
}
inline ::std::string* FriendInfo::mutable_friend_phone() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.FriendInfo.friend_phone)
  return friend_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendInfo::release_friend_phone() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.FriendInfo.friend_phone)
  
  return friend_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendInfo::set_allocated_friend_phone(::std::string* friend_phone) {
  if (friend_phone != NULL) {
    
  } else {
    
  }
  friend_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friend_phone);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.FriendInfo.friend_phone)
}

// string friend_sign_info = 9;
inline void FriendInfo::clear_friend_sign_info() {
  friend_sign_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendInfo::friend_sign_info() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.FriendInfo.friend_sign_info)
  return friend_sign_info_.GetNoArena();
}
inline void FriendInfo::set_friend_sign_info(const ::std::string& value) {
  
  friend_sign_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.FriendInfo.friend_sign_info)
}
#if LANG_CXX11
inline void FriendInfo::set_friend_sign_info(::std::string&& value) {
  
  friend_sign_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.FriendInfo.friend_sign_info)
}
#endif
inline void FriendInfo::set_friend_sign_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  friend_sign_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.FriendInfo.friend_sign_info)
}
inline void FriendInfo::set_friend_sign_info(const char* value, size_t size) {
  
  friend_sign_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.FriendInfo.friend_sign_info)
}
inline ::std::string* FriendInfo::mutable_friend_sign_info() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.FriendInfo.friend_sign_info)
  return friend_sign_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendInfo::release_friend_sign_info() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.FriendInfo.friend_sign_info)
  
  return friend_sign_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendInfo::set_allocated_friend_sign_info(::std::string* friend_sign_info) {
  if (friend_sign_info != NULL) {
    
  } else {
    
  }
  friend_sign_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friend_sign_info);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.FriendInfo.friend_sign_info)
}

// string friend_remark = 10;
inline void FriendInfo::clear_friend_remark() {
  friend_remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendInfo::friend_remark() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.FriendInfo.friend_remark)
  return friend_remark_.GetNoArena();
}
inline void FriendInfo::set_friend_remark(const ::std::string& value) {
  
  friend_remark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.FriendInfo.friend_remark)
}
#if LANG_CXX11
inline void FriendInfo::set_friend_remark(::std::string&& value) {
  
  friend_remark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.FriendInfo.friend_remark)
}
#endif
inline void FriendInfo::set_friend_remark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  friend_remark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.FriendInfo.friend_remark)
}
inline void FriendInfo::set_friend_remark(const char* value, size_t size) {
  
  friend_remark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.FriendInfo.friend_remark)
}
inline ::std::string* FriendInfo::mutable_friend_remark() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.FriendInfo.friend_remark)
  return friend_remark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendInfo::release_friend_remark() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.FriendInfo.friend_remark)
  
  return friend_remark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendInfo::set_allocated_friend_remark(::std::string* friend_remark) {
  if (friend_remark != NULL) {
    
  } else {
    
  }
  friend_remark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friend_remark);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.FriendInfo.friend_remark)
}

// bool friend_is_online = 11;
inline void FriendInfo::clear_friend_is_online() {
  friend_is_online_ = false;
}
inline bool FriendInfo::friend_is_online() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.FriendInfo.friend_is_online)
  return friend_is_online_;
}
inline void FriendInfo::set_friend_is_online(bool value) {
  
  friend_is_online_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.FriendInfo.friend_is_online)
}

// -------------------------------------------------------------------

// SessionInfo

// uint32 session_id = 1;
inline void SessionInfo::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 SessionInfo::session_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.SessionInfo.session_id)
  return session_id_;
}
inline void SessionInfo::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.SessionInfo.session_id)
}

// uint32 other_id = 2;
inline void SessionInfo::clear_other_id() {
  other_id_ = 0u;
}
inline ::google::protobuf::uint32 SessionInfo::other_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.SessionInfo.other_id)
  return other_id_;
}
inline void SessionInfo::set_other_id(::google::protobuf::uint32 value) {
  
  other_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.SessionInfo.other_id)
}

// uint32 session_type = 3;
inline void SessionInfo::clear_session_type() {
  session_type_ = 0u;
}
inline ::google::protobuf::uint32 SessionInfo::session_type() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.SessionInfo.session_type)
  return session_type_;
}
inline void SessionInfo::set_session_type(::google::protobuf::uint32 value) {
  
  session_type_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.SessionInfo.session_type)
}

// uint32 session_top = 4;
inline void SessionInfo::clear_session_top() {
  session_top_ = 0u;
}
inline ::google::protobuf::uint32 SessionInfo::session_top() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.SessionInfo.session_top)
  return session_top_;
}
inline void SessionInfo::set_session_top(::google::protobuf::uint32 value) {
  
  session_top_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.SessionInfo.session_top)
}

// uint32 session_update = 5;
inline void SessionInfo::clear_session_update() {
  session_update_ = 0u;
}
inline ::google::protobuf::uint32 SessionInfo::session_update() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.SessionInfo.session_update)
  return session_update_;
}
inline void SessionInfo::set_session_update(::google::protobuf::uint32 value) {
  
  session_update_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.SessionInfo.session_update)
}

// uint32 latest_msg_id = 6;
inline void SessionInfo::clear_latest_msg_id() {
  latest_msg_id_ = 0u;
}
inline ::google::protobuf::uint32 SessionInfo::latest_msg_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.SessionInfo.latest_msg_id)
  return latest_msg_id_;
}
inline void SessionInfo::set_latest_msg_id(::google::protobuf::uint32 value) {
  
  latest_msg_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.SessionInfo.latest_msg_id)
}

// bytes last_message_data = 7;
inline void SessionInfo::clear_last_message_data() {
  last_message_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SessionInfo::last_message_data() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.SessionInfo.last_message_data)
  return last_message_data_.GetNoArena();
}
inline void SessionInfo::set_last_message_data(const ::std::string& value) {
  
  last_message_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.SessionInfo.last_message_data)
}
#if LANG_CXX11
inline void SessionInfo::set_last_message_data(::std::string&& value) {
  
  last_message_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.SessionInfo.last_message_data)
}
#endif
inline void SessionInfo::set_last_message_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  last_message_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.SessionInfo.last_message_data)
}
inline void SessionInfo::set_last_message_data(const void* value, size_t size) {
  
  last_message_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.SessionInfo.last_message_data)
}
inline ::std::string* SessionInfo::mutable_last_message_data() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.SessionInfo.last_message_data)
  return last_message_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionInfo::release_last_message_data() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.SessionInfo.last_message_data)
  
  return last_message_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionInfo::set_allocated_last_message_data(::std::string* last_message_data) {
  if (last_message_data != NULL) {
    
  } else {
    
  }
  last_message_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_message_data);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.SessionInfo.last_message_data)
}

// -------------------------------------------------------------------

// MemberInfo

// uint32 user_id = 1;
inline void MemberInfo::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 MemberInfo::user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.MemberInfo.user_id)
  return user_id_;
}
inline void MemberInfo::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.MemberInfo.user_id)
}

// string group_card = 2;
inline void MemberInfo::clear_group_card() {
  group_card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MemberInfo::group_card() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.MemberInfo.group_card)
  return group_card_.GetNoArena();
}
inline void MemberInfo::set_group_card(const ::std::string& value) {
  
  group_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.MemberInfo.group_card)
}
#if LANG_CXX11
inline void MemberInfo::set_group_card(::std::string&& value) {
  
  group_card_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.MemberInfo.group_card)
}
#endif
inline void MemberInfo::set_group_card(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.MemberInfo.group_card)
}
inline void MemberInfo::set_group_card(const char* value, size_t size) {
  
  group_card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.MemberInfo.group_card)
}
inline ::std::string* MemberInfo::mutable_group_card() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.MemberInfo.group_card)
  return group_card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MemberInfo::release_group_card() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.MemberInfo.group_card)
  
  return group_card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MemberInfo::set_allocated_group_card(::std::string* group_card) {
  if (group_card != NULL) {
    
  } else {
    
  }
  group_card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_card);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.MemberInfo.group_card)
}

// uint32 last_chat_time = 3;
inline void MemberInfo::clear_last_chat_time() {
  last_chat_time_ = 0u;
}
inline ::google::protobuf::uint32 MemberInfo::last_chat_time() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.MemberInfo.last_chat_time)
  return last_chat_time_;
}
inline void MemberInfo::set_last_chat_time(::google::protobuf::uint32 value) {
  
  last_chat_time_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.MemberInfo.last_chat_time)
}

// .youliao.pdu.base.UserInfo user_info = 4;
inline bool MemberInfo::has_user_info() const {
  return this != internal_default_instance() && user_info_ != NULL;
}
inline void MemberInfo::clear_user_info() {
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) {
    delete user_info_;
  }
  user_info_ = NULL;
}
inline const ::youliao::pdu::base::UserInfo& MemberInfo::user_info() const {
  const ::youliao::pdu::base::UserInfo* p = user_info_;
  // @@protoc_insertion_point(field_get:youliao.pdu.base.MemberInfo.user_info)
  return p != NULL ? *p : *reinterpret_cast<const ::youliao::pdu::base::UserInfo*>(
      &::youliao::pdu::base::_UserInfo_default_instance_);
}
inline ::youliao::pdu::base::UserInfo* MemberInfo::release_user_info() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.MemberInfo.user_info)
  
  ::youliao::pdu::base::UserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline ::youliao::pdu::base::UserInfo* MemberInfo::mutable_user_info() {
  
  if (user_info_ == NULL) {
    user_info_ = ::google::protobuf::Arena::Create< ::youliao::pdu::base::UserInfo >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.MemberInfo.user_info)
  return user_info_;
}
inline void MemberInfo::set_allocated_user_info(::youliao::pdu::base::UserInfo* user_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_info_;
  }
  if (user_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_info, submessage_arena);
    }
    
  } else {
    
  }
  user_info_ = user_info;
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.MemberInfo.user_info)
}

// -------------------------------------------------------------------

// AddRequestInfo

// uint32 id = 1;
inline void AddRequestInfo::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 AddRequestInfo::id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.AddRequestInfo.id)
  return id_;
}
inline void AddRequestInfo::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.AddRequestInfo.id)
}

// uint32 other_id = 2;
inline void AddRequestInfo::clear_other_id() {
  other_id_ = 0u;
}
inline ::google::protobuf::uint32 AddRequestInfo::other_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.AddRequestInfo.other_id)
  return other_id_;
}
inline void AddRequestInfo::set_other_id(::google::protobuf::uint32 value) {
  
  other_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.AddRequestInfo.other_id)
}

// uint32 result_id = 3;
inline void AddRequestInfo::clear_result_id() {
  result_id_ = 0u;
}
inline ::google::protobuf::uint32 AddRequestInfo::result_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.AddRequestInfo.result_id)
  return result_id_;
}
inline void AddRequestInfo::set_result_id(::google::protobuf::uint32 value) {
  
  result_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.AddRequestInfo.result_id)
}

// uint32 handle_time = 4;
inline void AddRequestInfo::clear_handle_time() {
  handle_time_ = 0u;
}
inline ::google::protobuf::uint32 AddRequestInfo::handle_time() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.AddRequestInfo.handle_time)
  return handle_time_;
}
inline void AddRequestInfo::set_handle_time(::google::protobuf::uint32 value) {
  
  handle_time_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.AddRequestInfo.handle_time)
}

// string validate_data = 5;
inline void AddRequestInfo::clear_validate_data() {
  validate_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRequestInfo::validate_data() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.AddRequestInfo.validate_data)
  return validate_data_.GetNoArena();
}
inline void AddRequestInfo::set_validate_data(const ::std::string& value) {
  
  validate_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.AddRequestInfo.validate_data)
}
#if LANG_CXX11
inline void AddRequestInfo::set_validate_data(::std::string&& value) {
  
  validate_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.AddRequestInfo.validate_data)
}
#endif
inline void AddRequestInfo::set_validate_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  validate_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.AddRequestInfo.validate_data)
}
inline void AddRequestInfo::set_validate_data(const char* value, size_t size) {
  
  validate_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.AddRequestInfo.validate_data)
}
inline ::std::string* AddRequestInfo::mutable_validate_data() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.AddRequestInfo.validate_data)
  return validate_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRequestInfo::release_validate_data() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.AddRequestInfo.validate_data)
  
  return validate_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRequestInfo::set_allocated_validate_data(::std::string* validate_data) {
  if (validate_data != NULL) {
    
  } else {
    
  }
  validate_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), validate_data);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.AddRequestInfo.validate_data)
}

// string other_head_url = 6;
inline void AddRequestInfo::clear_other_head_url() {
  other_head_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRequestInfo::other_head_url() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.AddRequestInfo.other_head_url)
  return other_head_url_.GetNoArena();
}
inline void AddRequestInfo::set_other_head_url(const ::std::string& value) {
  
  other_head_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.AddRequestInfo.other_head_url)
}
#if LANG_CXX11
inline void AddRequestInfo::set_other_head_url(::std::string&& value) {
  
  other_head_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.AddRequestInfo.other_head_url)
}
#endif
inline void AddRequestInfo::set_other_head_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  other_head_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.AddRequestInfo.other_head_url)
}
inline void AddRequestInfo::set_other_head_url(const char* value, size_t size) {
  
  other_head_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.AddRequestInfo.other_head_url)
}
inline ::std::string* AddRequestInfo::mutable_other_head_url() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.AddRequestInfo.other_head_url)
  return other_head_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRequestInfo::release_other_head_url() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.AddRequestInfo.other_head_url)
  
  return other_head_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRequestInfo::set_allocated_other_head_url(::std::string* other_head_url) {
  if (other_head_url != NULL) {
    
  } else {
    
  }
  other_head_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), other_head_url);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.AddRequestInfo.other_head_url)
}

// string other_nick = 7;
inline void AddRequestInfo::clear_other_nick() {
  other_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRequestInfo::other_nick() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.AddRequestInfo.other_nick)
  return other_nick_.GetNoArena();
}
inline void AddRequestInfo::set_other_nick(const ::std::string& value) {
  
  other_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.AddRequestInfo.other_nick)
}
#if LANG_CXX11
inline void AddRequestInfo::set_other_nick(::std::string&& value) {
  
  other_nick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.AddRequestInfo.other_nick)
}
#endif
inline void AddRequestInfo::set_other_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  other_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.AddRequestInfo.other_nick)
}
inline void AddRequestInfo::set_other_nick(const char* value, size_t size) {
  
  other_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.AddRequestInfo.other_nick)
}
inline ::std::string* AddRequestInfo::mutable_other_nick() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.AddRequestInfo.other_nick)
  return other_nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRequestInfo::release_other_nick() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.AddRequestInfo.other_nick)
  
  return other_nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRequestInfo::set_allocated_other_nick(::std::string* other_nick) {
  if (other_nick != NULL) {
    
  } else {
    
  }
  other_nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), other_nick);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.AddRequestInfo.other_nick)
}

// -------------------------------------------------------------------

// GroupInfo

// uint32 group_id = 1;
inline void GroupInfo::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 GroupInfo::group_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.GroupInfo.group_id)
  return group_id_;
}
inline void GroupInfo::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.GroupInfo.group_id)
}

// string group_name = 2;
inline void GroupInfo::clear_group_name() {
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupInfo::group_name() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.GroupInfo.group_name)
  return group_name_.GetNoArena();
}
inline void GroupInfo::set_group_name(const ::std::string& value) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.GroupInfo.group_name)
}
#if LANG_CXX11
inline void GroupInfo::set_group_name(::std::string&& value) {
  
  group_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.GroupInfo.group_name)
}
#endif
inline void GroupInfo::set_group_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.GroupInfo.group_name)
}
inline void GroupInfo::set_group_name(const char* value, size_t size) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.GroupInfo.group_name)
}
inline ::std::string* GroupInfo::mutable_group_name() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.GroupInfo.group_name)
  return group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupInfo::release_group_name() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.GroupInfo.group_name)
  
  return group_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupInfo::set_allocated_group_name(::std::string* group_name) {
  if (group_name != NULL) {
    
  } else {
    
  }
  group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_name);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.GroupInfo.group_name)
}

// string group_head = 3;
inline void GroupInfo::clear_group_head() {
  group_head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupInfo::group_head() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.GroupInfo.group_head)
  return group_head_.GetNoArena();
}
inline void GroupInfo::set_group_head(const ::std::string& value) {
  
  group_head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.GroupInfo.group_head)
}
#if LANG_CXX11
inline void GroupInfo::set_group_head(::std::string&& value) {
  
  group_head_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.GroupInfo.group_head)
}
#endif
inline void GroupInfo::set_group_head(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.GroupInfo.group_head)
}
inline void GroupInfo::set_group_head(const char* value, size_t size) {
  
  group_head_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.GroupInfo.group_head)
}
inline ::std::string* GroupInfo::mutable_group_head() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.GroupInfo.group_head)
  return group_head_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupInfo::release_group_head() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.GroupInfo.group_head)
  
  return group_head_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupInfo::set_allocated_group_head(::std::string* group_head) {
  if (group_head != NULL) {
    
  } else {
    
  }
  group_head_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_head);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.GroupInfo.group_head)
}

// uint32 group_creator = 4;
inline void GroupInfo::clear_group_creator() {
  group_creator_ = 0u;
}
inline ::google::protobuf::uint32 GroupInfo::group_creator() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.GroupInfo.group_creator)
  return group_creator_;
}
inline void GroupInfo::set_group_creator(::google::protobuf::uint32 value) {
  
  group_creator_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.GroupInfo.group_creator)
}

// uint32 group_capacity = 5;
inline void GroupInfo::clear_group_capacity() {
  group_capacity_ = 0u;
}
inline ::google::protobuf::uint32 GroupInfo::group_capacity() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.GroupInfo.group_capacity)
  return group_capacity_;
}
inline void GroupInfo::set_group_capacity(::google::protobuf::uint32 value) {
  
  group_capacity_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.GroupInfo.group_capacity)
}

// uint32 group_created = 6;
inline void GroupInfo::clear_group_created() {
  group_created_ = 0u;
}
inline ::google::protobuf::uint32 GroupInfo::group_created() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.GroupInfo.group_created)
  return group_created_;
}
inline void GroupInfo::set_group_created(::google::protobuf::uint32 value) {
  
  group_created_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.GroupInfo.group_created)
}

// repeated uint32 managers = 7;
inline int GroupInfo::managers_size() const {
  return managers_.size();
}
inline void GroupInfo::clear_managers() {
  managers_.Clear();
}
inline ::google::protobuf::uint32 GroupInfo::managers(int index) const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.GroupInfo.managers)
  return managers_.Get(index);
}
inline void GroupInfo::set_managers(int index, ::google::protobuf::uint32 value) {
  managers_.Set(index, value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.GroupInfo.managers)
}
inline void GroupInfo::add_managers(::google::protobuf::uint32 value) {
  managers_.Add(value);
  // @@protoc_insertion_point(field_add:youliao.pdu.base.GroupInfo.managers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupInfo::managers() const {
  // @@protoc_insertion_point(field_list:youliao.pdu.base.GroupInfo.managers)
  return managers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupInfo::mutable_managers() {
  // @@protoc_insertion_point(field_mutable_list:youliao.pdu.base.GroupInfo.managers)
  return &managers_;
}

// repeated uint32 members = 8;
inline int GroupInfo::members_size() const {
  return members_.size();
}
inline void GroupInfo::clear_members() {
  members_.Clear();
}
inline ::google::protobuf::uint32 GroupInfo::members(int index) const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.GroupInfo.members)
  return members_.Get(index);
}
inline void GroupInfo::set_members(int index, ::google::protobuf::uint32 value) {
  members_.Set(index, value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.GroupInfo.members)
}
inline void GroupInfo::add_members(::google::protobuf::uint32 value) {
  members_.Add(value);
  // @@protoc_insertion_point(field_add:youliao.pdu.base.GroupInfo.members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupInfo::members() const {
  // @@protoc_insertion_point(field_list:youliao.pdu.base.GroupInfo.members)
  return members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupInfo::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:youliao.pdu.base.GroupInfo.members)
  return &members_;
}

// uint32 group_verify_type = 9;
inline void GroupInfo::clear_group_verify_type() {
  group_verify_type_ = 0u;
}
inline ::google::protobuf::uint32 GroupInfo::group_verify_type() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.GroupInfo.group_verify_type)
  return group_verify_type_;
}
inline void GroupInfo::set_group_verify_type(::google::protobuf::uint32 value) {
  
  group_verify_type_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.GroupInfo.group_verify_type)
}

// -------------------------------------------------------------------

// IpAddress

// string ip = 1;
inline void IpAddress::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IpAddress::ip() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.IpAddress.ip)
  return ip_.GetNoArena();
}
inline void IpAddress::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.IpAddress.ip)
}
#if LANG_CXX11
inline void IpAddress::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.IpAddress.ip)
}
#endif
inline void IpAddress::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.IpAddress.ip)
}
inline void IpAddress::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.IpAddress.ip)
}
inline ::std::string* IpAddress::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.IpAddress.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IpAddress::release_ip() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.IpAddress.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IpAddress::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.IpAddress.ip)
}

// uint32 port = 2;
inline void IpAddress::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 IpAddress::port() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.IpAddress.port)
  return port_;
}
inline void IpAddress::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.IpAddress.port)
}

// -------------------------------------------------------------------

// HeartBeat

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace base
}  // namespace pdu
}  // namespace youliao

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::youliao::pdu::base::ServiceID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::ServiceID>() {
  return ::youliao::pdu::base::ServiceID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::LoginCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::LoginCID>() {
  return ::youliao::pdu::base::LoginCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::ServerCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::ServerCID>() {
  return ::youliao::pdu::base::ServerCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::OtherCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::OtherCID>() {
  return ::youliao::pdu::base::OtherCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::FriendListCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::FriendListCID>() {
  return ::youliao::pdu::base::FriendListCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::SessionListCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::SessionListCID>() {
  return ::youliao::pdu::base::SessionListCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::MessageCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::MessageCID>() {
  return ::youliao::pdu::base::MessageCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::GroupCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::GroupCID>() {
  return ::youliao::pdu::base::GroupCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::FileCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::FileCID>() {
  return ::youliao::pdu::base::FileCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::ResultType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::ResultType>() {
  return ::youliao::pdu::base::ResultType_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::UserStatusType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::UserStatusType>() {
  return ::youliao::pdu::base::UserStatusType_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::SessionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::SessionType>() {
  return ::youliao::pdu::base::SessionType_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::SessionFlag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::SessionFlag>() {
  return ::youliao::pdu::base::SessionFlag_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::MessageType>() {
  return ::youliao::pdu::base::MessageType_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::RouteMessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::RouteMessageType>() {
  return ::youliao::pdu::base::RouteMessageType_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::SearchType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::SearchType>() {
  return ::youliao::pdu::base::SearchType_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::GroupType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::GroupType>() {
  return ::youliao::pdu::base::GroupType_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::GroupVerifyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::GroupVerifyType>() {
  return ::youliao::pdu::base::GroupVerifyType_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::TransferFileType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::TransferFileType>() {
  return ::youliao::pdu::base::TransferFileType_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::ClientFileRole> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::ClientFileRole>() {
  return ::youliao::pdu::base::ClientFileRole_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::ClientFileState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::ClientFileState>() {
  return ::youliao::pdu::base::ClientFileState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youliao_2ebase_2eproto_INCLUDED

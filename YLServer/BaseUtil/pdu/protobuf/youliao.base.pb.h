// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youliao.base.proto

#ifndef PROTOBUF_youliao_2ebase_2eproto_INCLUDED
#define PROTOBUF_youliao_2ebase_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_youliao_2ebase_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsUserInfoImpl();
void InitDefaultsUserInfo();
void InitDefaultsHeartBeatImpl();
void InitDefaultsHeartBeat();
inline void InitDefaults() {
  InitDefaultsUserInfo();
  InitDefaultsHeartBeat();
}
}  // namespace protobuf_youliao_2ebase_2eproto
namespace youliao {
namespace pdu {
namespace base {
class HeartBeat;
class HeartBeatDefaultTypeInternal;
extern HeartBeatDefaultTypeInternal _HeartBeat_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
}  // namespace base
}  // namespace pdu
}  // namespace youliao
namespace google {
namespace protobuf {
template<> ::youliao::pdu::base::HeartBeat* Arena::Create< ::youliao::pdu::base::HeartBeat>(Arena*);
template<> ::youliao::pdu::base::UserInfo* Arena::Create< ::youliao::pdu::base::UserInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace youliao {
namespace pdu {
namespace base {

enum ServiceID {
  SID_ZERO = 0,
  SID_LOGIN = 1,
  SID_FRIEND_LIST = 2,
  SID_SERVER = 3,
  SID_OTHER = 4,
  SID_MESSAGE = 5,
  ServiceID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServiceID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServiceID_IsValid(int value);
const ServiceID ServiceID_MIN = SID_ZERO;
const ServiceID ServiceID_MAX = SID_MESSAGE;
const int ServiceID_ARRAYSIZE = ServiceID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServiceID_descriptor();
inline const ::std::string& ServiceID_Name(ServiceID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServiceID_descriptor(), value);
}
inline bool ServiceID_Parse(
    const ::std::string& name, ServiceID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServiceID>(
    ServiceID_descriptor(), name, value);
}
enum LoginCID {
  CID_LOGIN_ZERO = 0,
  CID_LOGIN_REQUSET_MSGSERVER = 257,
  CID_LOGIN_RESPONE_MSGSERVER = 258,
  CID_LOGIN_REQUEST_USERLOGIN = 259,
  CID_LOGIN_RESPONE_USERLOGIN = 260,
  CID_LOGIN_REQUEST_USERLOGINOUT = 261,
  LoginCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LoginCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LoginCID_IsValid(int value);
const LoginCID LoginCID_MIN = CID_LOGIN_ZERO;
const LoginCID LoginCID_MAX = CID_LOGIN_REQUEST_USERLOGINOUT;
const int LoginCID_ARRAYSIZE = LoginCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginCID_descriptor();
inline const ::std::string& LoginCID_Name(LoginCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginCID_descriptor(), value);
}
inline bool LoginCID_Parse(
    const ::std::string& name, LoginCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginCID>(
    LoginCID_descriptor(), name, value);
}
enum ServerCID {
  CID_SERVER_ZERO = 0,
  CID_SERVER_MSGSERVER_INFO = 513,
  ServerCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServerCID_IsValid(int value);
const ServerCID ServerCID_MIN = CID_SERVER_ZERO;
const ServerCID ServerCID_MAX = CID_SERVER_MSGSERVER_INFO;
const int ServerCID_ARRAYSIZE = ServerCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerCID_descriptor();
inline const ::std::string& ServerCID_Name(ServerCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerCID_descriptor(), value);
}
inline bool ServerCID_Parse(
    const ::std::string& name, ServerCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerCID>(
    ServerCID_descriptor(), name, value);
}
enum OtherCID {
  CID_OTHER_ZERO = 0,
  CID_OTHER_HEARTBEAT = 769,
  CID_SERVER_VALIDATE_REQUEST = 514,
  CID_SERVER_VALIDATE_RESPONE = 515,
  OtherCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OtherCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OtherCID_IsValid(int value);
const OtherCID OtherCID_MIN = CID_OTHER_ZERO;
const OtherCID OtherCID_MAX = CID_OTHER_HEARTBEAT;
const int OtherCID_ARRAYSIZE = OtherCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* OtherCID_descriptor();
inline const ::std::string& OtherCID_Name(OtherCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    OtherCID_descriptor(), value);
}
inline bool OtherCID_Parse(
    const ::std::string& name, OtherCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OtherCID>(
    OtherCID_descriptor(), name, value);
}
enum FriendListCID {
  CID_FRIENDLIST_ZERO = 0,
  CID_FRIENDLIST_GET_REQUEST = 1025,
  CID_FRIENDLIST_GET_RESPONE = 1026,
  FriendListCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FriendListCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FriendListCID_IsValid(int value);
const FriendListCID FriendListCID_MIN = CID_FRIENDLIST_ZERO;
const FriendListCID FriendListCID_MAX = CID_FRIENDLIST_GET_RESPONE;
const int FriendListCID_ARRAYSIZE = FriendListCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* FriendListCID_descriptor();
inline const ::std::string& FriendListCID_Name(FriendListCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    FriendListCID_descriptor(), value);
}
inline bool FriendListCID_Parse(
    const ::std::string& name, FriendListCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FriendListCID>(
    FriendListCID_descriptor(), name, value);
}
enum MessageCID {
  CID_MESSAGE_ZERO = 0,
  CID_MESSAGE_DATA = 1281,
  MessageCID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageCID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageCID_IsValid(int value);
const MessageCID MessageCID_MIN = CID_MESSAGE_ZERO;
const MessageCID MessageCID_MAX = CID_MESSAGE_DATA;
const int MessageCID_ARRAYSIZE = MessageCID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageCID_descriptor();
inline const ::std::string& MessageCID_Name(MessageCID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageCID_descriptor(), value);
}
inline bool MessageCID_Parse(
    const ::std::string& name, MessageCID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageCID>(
    MessageCID_descriptor(), name, value);
}
enum ResultType {
  NONE = 0,
  NO_MSG_SERVER = 1,
  MSG_SERVER_FULL = 2,
  ResultType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResultType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResultType_IsValid(int value);
const ResultType ResultType_MIN = NONE;
const ResultType ResultType_MAX = MSG_SERVER_FULL;
const int ResultType_ARRAYSIZE = ResultType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResultType_descriptor();
inline const ::std::string& ResultType_Name(ResultType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResultType_descriptor(), value);
}
inline bool ResultType_Parse(
    const ::std::string& name, ResultType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResultType>(
    ResultType_descriptor(), name, value);
}
enum UserStatusType {
  USER_STATUS_ZERO = 0,
  USER_STATUS_ONLINE = 1,
  USER_STATUS_OFFLINE = 2,
  USER_STATUS_HIDE = 3,
  UserStatusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UserStatusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UserStatusType_IsValid(int value);
const UserStatusType UserStatusType_MIN = USER_STATUS_ZERO;
const UserStatusType UserStatusType_MAX = USER_STATUS_HIDE;
const int UserStatusType_ARRAYSIZE = UserStatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserStatusType_descriptor();
inline const ::std::string& UserStatusType_Name(UserStatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserStatusType_descriptor(), value);
}
inline bool UserStatusType_Parse(
    const ::std::string& name, UserStatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserStatusType>(
    UserStatusType_descriptor(), name, value);
}
enum MessageType {
  MESSAGE_ZERO = 0,
  MESSAGE_TYPE_SINGLE_TEXT = 1,
  MESSAGE_TYPE_SINGLE_AUDIO = 2,
  MESSAGE_TYPE_GROUP_TEXT = 3,
  MESSAGE_TYPE_GROUP_AUDIO = 4,
  MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = MESSAGE_ZERO;
const MessageType MessageType_MAX = MESSAGE_TYPE_GROUP_AUDIO;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class UserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.base.UserInfo) */ {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserInfo(UserInfo&& from) noexcept
    : UserInfo() {
    *this = ::std::move(from);
  }

  inline UserInfo& operator=(UserInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UserInfo* other);
  friend void swap(UserInfo& a, UserInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserInfo* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UserInfo>(NULL);
  }

  UserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<UserInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_nick = 4;
  void clear_user_nick();
  static const int kUserNickFieldNumber = 4;
  const ::std::string& user_nick() const;
  void set_user_nick(const ::std::string& value);
  #if LANG_CXX11
  void set_user_nick(::std::string&& value);
  #endif
  void set_user_nick(const char* value);
  void set_user_nick(const char* value, size_t size);
  ::std::string* mutable_user_nick();
  ::std::string* release_user_nick();
  void set_allocated_user_nick(::std::string* user_nick);

  // string user_header_url = 5;
  void clear_user_header_url();
  static const int kUserHeaderUrlFieldNumber = 5;
  const ::std::string& user_header_url() const;
  void set_user_header_url(const ::std::string& value);
  #if LANG_CXX11
  void set_user_header_url(::std::string&& value);
  #endif
  void set_user_header_url(const char* value);
  void set_user_header_url(const char* value, size_t size);
  ::std::string* mutable_user_header_url();
  ::std::string* release_user_header_url();
  void set_allocated_user_header_url(::std::string* user_header_url);

  // string user_email = 6;
  void clear_user_email();
  static const int kUserEmailFieldNumber = 6;
  const ::std::string& user_email() const;
  void set_user_email(const ::std::string& value);
  #if LANG_CXX11
  void set_user_email(::std::string&& value);
  #endif
  void set_user_email(const char* value);
  void set_user_email(const char* value, size_t size);
  ::std::string* mutable_user_email();
  ::std::string* release_user_email();
  void set_allocated_user_email(::std::string* user_email);

  // string user_phone = 7;
  void clear_user_phone();
  static const int kUserPhoneFieldNumber = 7;
  const ::std::string& user_phone() const;
  void set_user_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_user_phone(::std::string&& value);
  #endif
  void set_user_phone(const char* value);
  void set_user_phone(const char* value, size_t size);
  ::std::string* mutable_user_phone();
  ::std::string* release_user_phone();
  void set_allocated_user_phone(::std::string* user_phone);

  // string user_sign_info = 8;
  void clear_user_sign_info();
  static const int kUserSignInfoFieldNumber = 8;
  const ::std::string& user_sign_info() const;
  void set_user_sign_info(const ::std::string& value);
  #if LANG_CXX11
  void set_user_sign_info(::std::string&& value);
  #endif
  void set_user_sign_info(const char* value);
  void set_user_sign_info(const char* value, size_t size);
  ::std::string* mutable_user_sign_info();
  ::std::string* release_user_sign_info();
  void set_allocated_user_sign_info(::std::string* user_sign_info);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // uint32 user_account = 2;
  void clear_user_account();
  static const int kUserAccountFieldNumber = 2;
  ::google::protobuf::uint32 user_account() const;
  void set_user_account(::google::protobuf::uint32 value);

  // uint32 user_sex = 3;
  void clear_user_sex();
  static const int kUserSexFieldNumber = 3;
  ::google::protobuf::uint32 user_sex() const;
  void set_user_sex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.base.UserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_nick_;
  ::google::protobuf::internal::ArenaStringPtr user_header_url_;
  ::google::protobuf::internal::ArenaStringPtr user_email_;
  ::google::protobuf::internal::ArenaStringPtr user_phone_;
  ::google::protobuf::internal::ArenaStringPtr user_sign_info_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 user_account_;
  ::google::protobuf::uint32 user_sex_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2ebase_2eproto::TableStruct;
  friend void ::protobuf_youliao_2ebase_2eproto::InitDefaultsUserInfoImpl();
};
// -------------------------------------------------------------------

class HeartBeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.base.HeartBeat) */ {
 public:
  HeartBeat();
  virtual ~HeartBeat();

  HeartBeat(const HeartBeat& from);

  inline HeartBeat& operator=(const HeartBeat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartBeat(HeartBeat&& from) noexcept
    : HeartBeat() {
    *this = ::std::move(from);
  }

  inline HeartBeat& operator=(HeartBeat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartBeat* internal_default_instance() {
    return reinterpret_cast<const HeartBeat*>(
               &_HeartBeat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(HeartBeat* other);
  friend void swap(HeartBeat& a, HeartBeat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartBeat* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<HeartBeat>(NULL);
  }

  HeartBeat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<HeartBeat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartBeat& from);
  void MergeFrom(const HeartBeat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartBeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:youliao.pdu.base.HeartBeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2ebase_2eproto::TableStruct;
  friend void ::protobuf_youliao_2ebase_2eproto::InitDefaultsHeartBeatImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserInfo

// uint32 user_id = 1;
inline void UserInfo::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 UserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_id)
  return user_id_;
}
inline void UserInfo::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_id)
}

// uint32 user_account = 2;
inline void UserInfo::clear_user_account() {
  user_account_ = 0u;
}
inline ::google::protobuf::uint32 UserInfo::user_account() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_account)
  return user_account_;
}
inline void UserInfo::set_user_account(::google::protobuf::uint32 value) {
  
  user_account_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_account)
}

// uint32 user_sex = 3;
inline void UserInfo::clear_user_sex() {
  user_sex_ = 0u;
}
inline ::google::protobuf::uint32 UserInfo::user_sex() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_sex)
  return user_sex_;
}
inline void UserInfo::set_user_sex(::google::protobuf::uint32 value) {
  
  user_sex_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_sex)
}

// string user_nick = 4;
inline void UserInfo::clear_user_nick() {
  user_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::user_nick() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_nick)
  return user_nick_.GetNoArena();
}
inline void UserInfo::set_user_nick(const ::std::string& value) {
  
  user_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_nick)
}
#if LANG_CXX11
inline void UserInfo::set_user_nick(::std::string&& value) {
  
  user_nick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.UserInfo.user_nick)
}
#endif
inline void UserInfo::set_user_nick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.UserInfo.user_nick)
}
inline void UserInfo::set_user_nick(const char* value, size_t size) {
  
  user_nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.UserInfo.user_nick)
}
inline ::std::string* UserInfo::mutable_user_nick() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.UserInfo.user_nick)
  return user_nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_user_nick() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.UserInfo.user_nick)
  
  return user_nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_user_nick(::std::string* user_nick) {
  if (user_nick != NULL) {
    
  } else {
    
  }
  user_nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_nick);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.UserInfo.user_nick)
}

// string user_header_url = 5;
inline void UserInfo::clear_user_header_url() {
  user_header_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::user_header_url() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_header_url)
  return user_header_url_.GetNoArena();
}
inline void UserInfo::set_user_header_url(const ::std::string& value) {
  
  user_header_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_header_url)
}
#if LANG_CXX11
inline void UserInfo::set_user_header_url(::std::string&& value) {
  
  user_header_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.UserInfo.user_header_url)
}
#endif
inline void UserInfo::set_user_header_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_header_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.UserInfo.user_header_url)
}
inline void UserInfo::set_user_header_url(const char* value, size_t size) {
  
  user_header_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.UserInfo.user_header_url)
}
inline ::std::string* UserInfo::mutable_user_header_url() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.UserInfo.user_header_url)
  return user_header_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_user_header_url() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.UserInfo.user_header_url)
  
  return user_header_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_user_header_url(::std::string* user_header_url) {
  if (user_header_url != NULL) {
    
  } else {
    
  }
  user_header_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_header_url);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.UserInfo.user_header_url)
}

// string user_email = 6;
inline void UserInfo::clear_user_email() {
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::user_email() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_email)
  return user_email_.GetNoArena();
}
inline void UserInfo::set_user_email(const ::std::string& value) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_email)
}
#if LANG_CXX11
inline void UserInfo::set_user_email(::std::string&& value) {
  
  user_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.UserInfo.user_email)
}
#endif
inline void UserInfo::set_user_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.UserInfo.user_email)
}
inline void UserInfo::set_user_email(const char* value, size_t size) {
  
  user_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.UserInfo.user_email)
}
inline ::std::string* UserInfo::mutable_user_email() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.UserInfo.user_email)
  return user_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_user_email() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.UserInfo.user_email)
  
  return user_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_user_email(::std::string* user_email) {
  if (user_email != NULL) {
    
  } else {
    
  }
  user_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_email);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.UserInfo.user_email)
}

// string user_phone = 7;
inline void UserInfo::clear_user_phone() {
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::user_phone() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_phone)
  return user_phone_.GetNoArena();
}
inline void UserInfo::set_user_phone(const ::std::string& value) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_phone)
}
#if LANG_CXX11
inline void UserInfo::set_user_phone(::std::string&& value) {
  
  user_phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.UserInfo.user_phone)
}
#endif
inline void UserInfo::set_user_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.UserInfo.user_phone)
}
inline void UserInfo::set_user_phone(const char* value, size_t size) {
  
  user_phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.UserInfo.user_phone)
}
inline ::std::string* UserInfo::mutable_user_phone() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.UserInfo.user_phone)
  return user_phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_user_phone() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.UserInfo.user_phone)
  
  return user_phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_user_phone(::std::string* user_phone) {
  if (user_phone != NULL) {
    
  } else {
    
  }
  user_phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_phone);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.UserInfo.user_phone)
}

// string user_sign_info = 8;
inline void UserInfo::clear_user_sign_info() {
  user_sign_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::user_sign_info() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.base.UserInfo.user_sign_info)
  return user_sign_info_.GetNoArena();
}
inline void UserInfo::set_user_sign_info(const ::std::string& value) {
  
  user_sign_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.base.UserInfo.user_sign_info)
}
#if LANG_CXX11
inline void UserInfo::set_user_sign_info(::std::string&& value) {
  
  user_sign_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.base.UserInfo.user_sign_info)
}
#endif
inline void UserInfo::set_user_sign_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_sign_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.base.UserInfo.user_sign_info)
}
inline void UserInfo::set_user_sign_info(const char* value, size_t size) {
  
  user_sign_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.base.UserInfo.user_sign_info)
}
inline ::std::string* UserInfo::mutable_user_sign_info() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.base.UserInfo.user_sign_info)
  return user_sign_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_user_sign_info() {
  // @@protoc_insertion_point(field_release:youliao.pdu.base.UserInfo.user_sign_info)
  
  return user_sign_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_user_sign_info(::std::string* user_sign_info) {
  if (user_sign_info != NULL) {
    
  } else {
    
  }
  user_sign_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_sign_info);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.base.UserInfo.user_sign_info)
}

// -------------------------------------------------------------------

// HeartBeat

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace base
}  // namespace pdu
}  // namespace youliao

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::youliao::pdu::base::ServiceID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::ServiceID>() {
  return ::youliao::pdu::base::ServiceID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::LoginCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::LoginCID>() {
  return ::youliao::pdu::base::LoginCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::ServerCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::ServerCID>() {
  return ::youliao::pdu::base::ServerCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::OtherCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::OtherCID>() {
  return ::youliao::pdu::base::OtherCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::FriendListCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::FriendListCID>() {
  return ::youliao::pdu::base::FriendListCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::MessageCID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::MessageCID>() {
  return ::youliao::pdu::base::MessageCID_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::ResultType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::ResultType>() {
  return ::youliao::pdu::base::ResultType_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::UserStatusType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::UserStatusType>() {
  return ::youliao::pdu::base::UserStatusType_descriptor();
}
template <> struct is_proto_enum< ::youliao::pdu::base::MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::youliao::pdu::base::MessageType>() {
  return ::youliao::pdu::base::MessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youliao_2ebase_2eproto_INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youliao.base.proto

#include "youliao.base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace youliao {
namespace pdu {
namespace base {
class UserInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserInfo>
      _instance;
} _UserInfo_default_instance_;
class FriendInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendInfo>
      _instance;
} _FriendInfo_default_instance_;
class SessionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionInfo>
      _instance;
} _SessionInfo_default_instance_;
class MemberInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemberInfo>
      _instance;
} _MemberInfo_default_instance_;
class AddRequestInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddRequestInfo>
      _instance;
} _AddRequestInfo_default_instance_;
class GroupInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupInfo>
      _instance;
} _GroupInfo_default_instance_;
class IpAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IpAddress>
      _instance;
} _IpAddress_default_instance_;
class HeartBeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartBeat>
      _instance;
} _HeartBeat_default_instance_;
}  // namespace base
}  // namespace pdu
}  // namespace youliao
namespace protobuf_youliao_2ebase_2eproto {
void InitDefaultsUserInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::base::_UserInfo_default_instance_;
    new (ptr) ::youliao::pdu::base::UserInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::base::UserInfo::InitAsDefaultInstance();
}

void InitDefaultsUserInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserInfoImpl);
}

void InitDefaultsFriendInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::base::_FriendInfo_default_instance_;
    new (ptr) ::youliao::pdu::base::FriendInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::base::FriendInfo::InitAsDefaultInstance();
}

void InitDefaultsFriendInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendInfoImpl);
}

void InitDefaultsSessionInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::base::_SessionInfo_default_instance_;
    new (ptr) ::youliao::pdu::base::SessionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::base::SessionInfo::InitAsDefaultInstance();
}

void InitDefaultsSessionInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSessionInfoImpl);
}

void InitDefaultsMemberInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2ebase_2eproto::InitDefaultsUserInfo();
  {
    void* ptr = &::youliao::pdu::base::_MemberInfo_default_instance_;
    new (ptr) ::youliao::pdu::base::MemberInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::base::MemberInfo::InitAsDefaultInstance();
}

void InitDefaultsMemberInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemberInfoImpl);
}

void InitDefaultsAddRequestInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::base::_AddRequestInfo_default_instance_;
    new (ptr) ::youliao::pdu::base::AddRequestInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::base::AddRequestInfo::InitAsDefaultInstance();
}

void InitDefaultsAddRequestInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddRequestInfoImpl);
}

void InitDefaultsGroupInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::base::_GroupInfo_default_instance_;
    new (ptr) ::youliao::pdu::base::GroupInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::base::GroupInfo::InitAsDefaultInstance();
}

void InitDefaultsGroupInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGroupInfoImpl);
}

void InitDefaultsIpAddressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::base::_IpAddress_default_instance_;
    new (ptr) ::youliao::pdu::base::IpAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::base::IpAddress::InitAsDefaultInstance();
}

void InitDefaultsIpAddress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIpAddressImpl);
}

void InitDefaultsHeartBeatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::base::_HeartBeat_default_instance_;
    new (ptr) ::youliao::pdu::base::HeartBeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::base::HeartBeat::InitAsDefaultInstance();
}

void InitDefaultsHeartBeat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHeartBeatImpl);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[21];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_header_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_sign_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, related_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_header_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_sign_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_is_online_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::SessionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::SessionInfo, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::SessionInfo, other_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::SessionInfo, session_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::SessionInfo, session_top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::SessionInfo, session_update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::SessionInfo, latest_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::SessionInfo, last_message_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::MemberInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::MemberInfo, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::MemberInfo, group_card_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::MemberInfo, last_chat_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::MemberInfo, user_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::AddRequestInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::AddRequestInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::AddRequestInfo, other_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::AddRequestInfo, result_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::AddRequestInfo, handle_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::AddRequestInfo, validate_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::AddRequestInfo, other_head_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::AddRequestInfo, other_nick_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::GroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::GroupInfo, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::GroupInfo, group_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::GroupInfo, group_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::GroupInfo, group_creator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::GroupInfo, group_capacity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::GroupInfo, group_created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::GroupInfo, managers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::GroupInfo, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::GroupInfo, group_verify_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::IpAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::IpAddress, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::IpAddress, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::HeartBeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::youliao::pdu::base::UserInfo)},
  { 13, -1, sizeof(::youliao::pdu::base::FriendInfo)},
  { 29, -1, sizeof(::youliao::pdu::base::SessionInfo)},
  { 41, -1, sizeof(::youliao::pdu::base::MemberInfo)},
  { 50, -1, sizeof(::youliao::pdu::base::AddRequestInfo)},
  { 62, -1, sizeof(::youliao::pdu::base::GroupInfo)},
  { 76, -1, sizeof(::youliao::pdu::base::IpAddress)},
  { 83, -1, sizeof(::youliao::pdu::base::HeartBeat)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::base::_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::base::_FriendInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::base::_SessionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::base::_MemberInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::base::_AddRequestInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::base::_GroupInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::base::_IpAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::base::_HeartBeat_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "youliao.base.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022youliao.base.proto\022\020youliao.pdu.base\"\257"
      "\001\n\010UserInfo\022\017\n\007user_id\030\001 \001(\r\022\024\n\014user_acc"
      "ount\030\002 \001(\r\022\020\n\010user_sex\030\003 \001(\r\022\021\n\tuser_nic"
      "k\030\004 \001(\t\022\027\n\017user_header_url\030\005 \001(\t\022\022\n\nuser"
      "_email\030\006 \001(\t\022\022\n\nuser_phone\030\007 \001(\t\022\026\n\016user"
      "_sign_info\030\010 \001(\t\"\206\002\n\nFriendInfo\022\022\n\nrelat"
      "ed_id\030\001 \001(\r\022\021\n\tfriend_id\030\002 \001(\r\022\026\n\016friend"
      "_account\030\003 \001(\r\022\022\n\nfriend_sex\030\004 \001(\r\022\023\n\013fr"
      "iend_nick\030\005 \001(\t\022\031\n\021friend_header_url\030\006 \001"
      "(\t\022\024\n\014friend_email\030\007 \001(\t\022\024\n\014friend_phone"
      "\030\010 \001(\t\022\030\n\020friend_sign_info\030\t \001(\t\022\025\n\rfrie"
      "nd_remark\030\n \001(\t\022\030\n\020friend_is_online\030\013 \001("
      "\010\"\250\001\n\013SessionInfo\022\022\n\nsession_id\030\001 \001(\r\022\020\n"
      "\010other_id\030\002 \001(\r\022\024\n\014session_type\030\003 \001(\r\022\023\n"
      "\013session_top\030\004 \001(\r\022\026\n\016session_update\030\005 \001"
      "(\r\022\025\n\rlatest_msg_id\030\006 \001(\r\022\031\n\021last_messag"
      "e_data\030\007 \001(\014\"x\n\nMemberInfo\022\017\n\007user_id\030\001 "
      "\001(\r\022\022\n\ngroup_card\030\002 \001(\t\022\026\n\016last_chat_tim"
      "e\030\003 \001(\r\022-\n\tuser_info\030\004 \001(\0132\032.youliao.pdu"
      ".base.UserInfo\"\231\001\n\016AddRequestInfo\022\n\n\002id\030"
      "\001 \001(\r\022\020\n\010other_id\030\002 \001(\r\022\021\n\tresult_id\030\003 \001"
      "(\r\022\023\n\013handle_time\030\004 \001(\r\022\025\n\rvalidate_data"
      "\030\005 \001(\t\022\026\n\016other_head_url\030\006 \001(\t\022\022\n\nother_"
      "nick\030\007 \001(\t\"\311\001\n\tGroupInfo\022\020\n\010group_id\030\001 \001"
      "(\r\022\022\n\ngroup_name\030\002 \001(\t\022\022\n\ngroup_head\030\003 \001"
      "(\t\022\025\n\rgroup_creator\030\004 \001(\r\022\026\n\016group_capac"
      "ity\030\005 \001(\r\022\025\n\rgroup_created\030\006 \001(\r\022\020\n\010mana"
      "gers\030\007 \003(\r\022\017\n\007members\030\010 \003(\r\022\031\n\021group_ver"
      "ify_type\030\t \001(\r\"%\n\tIpAddress\022\n\n\002ip\030\001 \001(\t\022"
      "\014\n\004port\030\002 \001(\r\"\013\n\tHeartBeat*\233\001\n\tServiceID"
      "\022\014\n\010SID_ZERO\020\000\022\r\n\tSID_LOGIN\020\001\022\023\n\017SID_FRI"
      "END_LIST\020\002\022\016\n\nSID_SERVER\020\003\022\r\n\tSID_OTHER\020"
      "\004\022\017\n\013SID_SESSION\020\005\022\017\n\013SID_MESSAGE\020\006\022\r\n\tS"
      "ID_GROUP\020\007\022\014\n\010SID_FILE\020\010*\215\002\n\010LoginCID\022\022\n"
      "\016CID_LOGIN_ZERO\020\000\022 \n\033CID_LOGIN_REQUSET_M"
      "SGSERVER\020\201\002\022 \n\033CID_LOGIN_RESPONE_MSGSERV"
      "ER\020\202\002\022 \n\033CID_LOGIN_REQUEST_USERLOGIN\020\203\002\022"
      " \n\033CID_LOGIN_RESPONE_USERLOGIN\020\204\002\022#\n\036CID"
      "_LOGIN_REQUEST_USERLOGINOUT\020\205\002\022\037\n\032CID_LO"
      "GIN_REGISTER_REQUEST\020\206\002\022\037\n\032CID_LOGIN_REG"
      "ISTER_RESPONE\020\207\002*\272\005\n\tServerCID\022\023\n\017CID_SE"
      "RVER_ZERO\020\000\022\036\n\031CID_SERVER_MSGSERVER_INFO"
      "\020\201\004\022 \n\033CID_SERVER_VALIDATE_REQUEST\020\202\004\022 \n"
      "\033CID_SERVER_VALIDATE_RESPONE\020\203\004\022\031\n\024CID_S"
      "ERVER_ROUTE_MSG\020\204\004\022\037\n\032CID_SERVER_ROUTE_B"
      "ROADCAST\020\205\004\022(\n#CID_SERVER_GET_SERVER_IND"
      "EX_REQUEST\020\206\004\022(\n#CID_SERVER_GET_SERVER_I"
      "NDEX_RESPONE\020\207\004\022\035\n\030CID_SERVER_ROUTE_MESS"
      "AGE\020\210\004\022&\n!CID_SERVER_FILE_SERVER_IP_REQU"
      "EST\020\211\004\022&\n!CID_SERVER_FILE_SERVER_IP_RESP"
      "ONE\020\212\004\022%\n CID_SERVER_FILE_TRANSFER_REQUE"
      "ST\020\213\004\022%\n CID_SERVER_FILE_TRANSFER_RESPON"
      "E\020\214\004\022\036\n\031CID_SERVER_USER_GO_ONLINE\020\215\004\022\037\n\032"
      "CID_SERVER_USER_GO_OFFLINE\020\216\004\022*\n%CID_SER"
      "VER_GET_FRIENDS_STATUS_REQUEST\020\217\004\022*\n%CID"
      "_SERVER_GET_FRIENDS_STATUS_RESPONE\020\220\004\022\'\n"
      "\"CID_SERVER_GET_ONLINE_GROUP_MEMBER\020\222\004\022%"
      "\n CID_SERVER_FORWARD_GROUP_MESSAGE\020\221\004*8\n"
      "\010OtherCID\022\022\n\016CID_OTHER_ZERO\020\000\022\030\n\023CID_OTH"
      "ER_HEARTBEAT\020\201\006*\362\007\n\rFriendListCID\022\027\n\023CID"
      "_FRIENDLIST_ZERO\020\000\022\037\n\032CID_FRIENDLIST_GET"
      "_REQUEST\020\201\010\022\037\n\032CID_FRIENDLIST_GET_RESPON"
      "E\020\202\010\022(\n#CID_FRIENDLIST_FRIEND_STATUS_CHA"
      "NGE\020\203\010\022-\n(CID_FRIENDLIST_SIGNATURE_CHANG"
      "ED_REQUEST\020\204\010\022-\n(CID_FRIENDLIST_SIGNATUR"
      "E_CHANGED_RESPONE\020\205\010\022,\n\'CID_FRIENDLIST_F"
      "RIEND_SIGNATURE_CHANGED\020\206\010\022,\n\'CID_FRIEND"
      "LIST_MODEFY_FRIEND_GROUP_NAME\020\207\010\022,\n\'CID_"
      "FRIENDLIST_ADD_FRIEND_GROUP_REQUEST\020\210\010\022,"
      "\n\'CID_FRIENDLIST_ADD_FRIEND_GROUP_RESPON"
      "E\020\211\010\022&\n!CID_FRIENDLIST_GET_GROUPS_REQUES"
      "T\020\212\010\022&\n!CID_FRIENDLIST_GET_GROUPS_REPSON"
      "E\020\213\010\022/\n*CID_FRIENDLIST_RENAME_FRIEND_GRO"
      "UP_REQUEST\020\214\010\022/\n*CID_FRIENDLIST_DELETE_F"
      "RIEND_GROUP_REQUEST\020\215\010\0220\n+CID_FRIENDLIST"
      "_MOVE_FRIEND_TO_GROUP_REQUEST\020\216\010\022)\n$CID_"
      "FRIENDLIST_DELETE_FRIEND_REQUEST\020\217\010\022/\n*C"
      "ID_FRIENDLIST_MODIFY_FRIEND_REMARK_RQUES"
      "T\020\220\010\022)\n$CID_FRIENDLIST_SEARCH_FRIEND_REQ"
      "UEST\020\221\010\022)\n$CID_FRIENDLIST_SEARCH_FRIEND_"
      "RESPONE\020\222\010\022&\n!CID_FRIENDLIST_ADD_FRIEND_"
      "REQUEST\020\223\010\022&\n!CID_FRIENDLIST_ADD_FRIEND_"
      "RESPONE\020\224\010\022/\n*CID_FRIENDLIST_GET_REQUEST"
      "_HISTORY_REQUEST\020\225\010\022/\n*CID_FRIENDLIST_GE"
      "T_REQUEST_HISTORY_RESPONE\020\226\010*\210\002\n\016Session"
      "ListCID\022\030\n\024CID_SESSIONLIST_ZERO\020\000\022 \n\033CID"
      "_SESSIONLIST_ADD_SESSION\020\201\n\022 \n\033CID_SESSI"
      "ONLIST_DEL_SESSION\020\202\n\022 \n\033CID_SESSIONLIST"
      "_UPD_SESSION\020\203\n\022 \n\033CID_SESSIONLIST_TOP_S"
      "ESSION\020\204\n\022)\n$CID_SESSIONLIST_GET_SESSION"
      "S_REQUEST\020\205\n\022)\n$CID_SESSIONLIST_GET_SESS"
      "IONS_RESPONE\020\206\n*\301\001\n\nMessageCID\022\024\n\020CID_ME"
      "SSAGE_ZERO\020\000\022\025\n\020CID_MESSAGE_DATA\020\201\014\022\025\n\020C"
      "ID_MESSAGE_SAVE\020\202\014\022\027\n\022CID_MESSAGE_UPDATE"
      "\020\203\014\022*\n%CID_MESSAGE_GET_LATEST_MSG_ID_REQ"
      "UEST\020\204\014\022*\n%CID_MESSAGE_GET_LATEST_MSG_ID"
      "_RESPONE\020\205\014*\265\003\n\010GroupCID\022\022\n\016CID_GROUP_ZE"
      "RO\020\000\022\035\n\030CID_GROUP_CREATE_REQUEST\020\201\016\022\035\n\030C"
      "ID_GROUP_CREATE_RESPONE\020\202\016\022\037\n\032CID_GROUP_"
      "GET_LIST_REQUEST\020\203\016\022\037\n\032CID_GROUP_GET_LIS"
      "T_RESPONE\020\204\016\022 \n\033CID_GROUP_ADD_GROUP_REQU"
      "EST\020\205\016\022 \n\033CID_GROUP_ADD_GROUP_RESPONE\020\206\016"
      "\022!\n\034CID_GROUP_GET_MEMBER_REQUEST\020\207\016\022!\n\034C"
      "ID_GROUP_GET_MEMBER_RESPONE\020\210\016\022#\n\036CID_GR"
      "OUP_MODIFY_CARD_RESQUEST\020\211\016\022#\n\036CID_GROUP"
      "_SEARCH_GROUP_REQUEST\020\212\016\022#\n\036CID_GROUP_SE"
      "ARCH_GROUP_RESPONE\020\213\016\022\034\n\027CID_GROUP_VERIF"
      "Y_NOTIFY\020\214\016*\361\001\n\007FileCID\022\021\n\rCID_FILE_ZERO"
      "\020\000\022\025\n\020CID_FILE_REQUEST\020\201\020\022\025\n\020CID_FILE_RE"
      "SPONE\020\202\020\022\024\n\017CID_FILE_NOTIFY\020\203\020\022\037\n\032CID_FI"
      "LE_GET_BLOCK_REQUEST\020\204\020\022\037\n\032CID_FILE_GET_"
      "BLOCK_RESPONE\020\205\020\022\023\n\016CID_FILE_STATE\020\206\020\022\033\n"
      "\026CID_FILE_LOGIN_REQUEST\020\207\020\022\033\n\026CID_FILE_L"
      "OGIN_RESPONE\020\210\020*[\n\nResultType\022\010\n\004NONE\020\000\022"
      "\021\n\rNO_MSG_SERVER\020\001\022\023\n\017MSG_SERVER_FULL\020\002\022"
      "\033\n\027SIGNATURE_MODIFY_FAILED\020\003*m\n\016UserStat"
      "usType\022\024\n\020USER_STATUS_ZERO\020\000\022\026\n\022USER_STA"
      "TUS_ONLINE\020\001\022\027\n\023USER_STATUS_OFFLINE\020\002\022\024\n"
      "\020USER_STATUS_HIDE\020\003*t\n\013SessionType\022\025\n\021SE"
      "SSION_TYPE_ZERO\020\000\022\027\n\023SESSION_TYPE_SINGLE"
      "\020\001\022\026\n\022SESSION_TYPE_GROUP\020\002\022\035\n\031SESSION_TY"
      "PE_VALIDATE_MSG\020\003*U\n\013SessionFlag\022\025\n\021SESS"
      "ION_FLAG_ZERO\020\000\022\027\n\023SESSION_FLAG_NORMAL\020\001"
      "\022\026\n\022SESSION_FLAG_ONTOP\020\002*\266\001\n\013MessageType"
      "\022\020\n\014MESSAGE_ZERO\020\000\022\034\n\030MESSAGE_TYPE_SINGL"
      "E_TEXT\020\001\022\035\n\031MESSAGE_TYPE_SINGLE_AUDIO\020\002\022"
      "\033\n\027MESSAGE_TYPE_GROUP_TEXT\020\003\022\034\n\030MESSAGE_"
      "TYPE_GROUP_AUDIO\020\004\022\035\n\031MESSAGE_TYPE_VALID"
      "ATE_MSG\020\005*}\n\020RouteMessageType\022\026\n\022ROUTE_M"
      "ESSAGE_ZERO\020\000\022&\n\"ROUTE_MESSAGE_FRIEND_ST"
      "ATUS_CHANGE\020\001\022)\n%ROUTE_MESSAGE_FRIEND_SI"
      "GNATURE_CHANGE\020\002*U\n\nSearchType\022\024\n\020SEARCH"
      "_TYPE_ZERO\020\000\022\027\n\023SEARCH_TYPE_ACCOUNT\020\001\022\030\n"
      "\024SEARCH_TYPE_NICKNAME\020\002*K\n\tGroupType\022\023\n\017"
      "GROUP_TYPE_ZERO\020\000\022\025\n\021GROUP_TYPE_NORMAL\020\001"
      "\022\022\n\016GROUP_TYPE_TMP\020\002*l\n\017GroupVerifyType\022"
      "\025\n\021GROUP_VERIFY_ZERO\020\000\022\025\n\021GROUP_VERIFY_N"
      "EED\020\001\022\024\n\020GROUP_VERIFY_ALL\020\002\022\025\n\021GROUP_VER"
      "IFY_NONE\020\003*S\n\020TransferFileType\022\022\n\016FILE_T"
      "YPE_ZERO\020\000\022\024\n\020FILE_TYPE_ONLINE\020\001\022\025\n\021FILE"
      "_TYPE_OFFLINE\020\002*\221\001\n\016ClientFileRole\022\017\n\013CL"
      "IENT_ZERO\020\000\022\032\n\026CLIENT_REALTIME_SENDER\020\001\022"
      "\032\n\026CLIENT_REALTIME_RECVER\020\002\022\031\n\025CLIENT_OF"
      "FLINE_UPLOAD\020\003\022\033\n\027CLIENT_OFFLINE_DOWNLOA"
      "D\020\004*\211\001\n\017ClientFileState\022\024\n\020CLIENT_FILE_Z"
      "ERO\020\000\022\032\n\026CLIENT_FILE_PEER_READY\020\001\022\026\n\022CLI"
      "ENT_FILE_CANCEL\020\002\022\026\n\022CLIENT_FILE_REFUSE\020"
      "\003\022\024\n\020CLIENT_FILE_DONE\020\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5911);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "youliao.base.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_youliao_2ebase_2eproto
namespace youliao {
namespace pdu {
namespace base {
const ::google::protobuf::EnumDescriptor* ServiceID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[0];
}
bool ServiceID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoginCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[1];
}
bool LoginCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 257:
    case 258:
    case 259:
    case 260:
    case 261:
    case 262:
    case 263:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServerCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[2];
}
bool ServerCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 513:
    case 514:
    case 515:
    case 516:
    case 517:
    case 518:
    case 519:
    case 520:
    case 521:
    case 522:
    case 523:
    case 524:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OtherCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[3];
}
bool OtherCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 769:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FriendListCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[4];
}
bool FriendListCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1029:
    case 1030:
    case 1031:
    case 1032:
    case 1033:
    case 1034:
    case 1035:
    case 1036:
    case 1037:
    case 1038:
    case 1039:
    case 1040:
    case 1041:
    case 1042:
    case 1043:
    case 1044:
    case 1045:
    case 1046:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SessionListCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[5];
}
bool SessionListCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1281:
    case 1282:
    case 1283:
    case 1284:
    case 1285:
    case 1286:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[6];
}
bool MessageCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1537:
    case 1538:
    case 1539:
    case 1540:
    case 1541:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GroupCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[7];
}
bool GroupCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1793:
    case 1794:
    case 1795:
    case 1796:
    case 1797:
    case 1798:
    case 1799:
    case 1800:
    case 1801:
    case 1802:
    case 1803:
    case 1804:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FileCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[8];
}
bool FileCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 2049:
    case 2050:
    case 2051:
    case 2052:
    case 2053:
    case 2054:
    case 2055:
    case 2056:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ResultType_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[9];
}
bool ResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UserStatusType_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[10];
}
bool UserStatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SessionType_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[11];
}
bool SessionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SessionFlag_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[12];
}
bool SessionFlag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[13];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RouteMessageType_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[14];
}
bool RouteMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SearchType_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[15];
}
bool SearchType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GroupType_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[16];
}
bool GroupType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GroupVerifyType_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[17];
}
bool GroupVerifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TransferFileType_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[18];
}
bool TransferFileType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClientFileRole_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[19];
}
bool ClientFileRole_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClientFileState_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[20];
}
bool ClientFileState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void UserInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kUserIdFieldNumber;
const int UserInfo::kUserAccountFieldNumber;
const int UserInfo::kUserSexFieldNumber;
const int UserInfo::kUserNickFieldNumber;
const int UserInfo::kUserHeaderUrlFieldNumber;
const int UserInfo::kUserEmailFieldNumber;
const int UserInfo::kUserPhoneFieldNumber;
const int UserInfo::kUserSignInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2ebase_2eproto::InitDefaultsUserInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.base.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_nick().size() > 0) {
    user_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_nick_);
  }
  user_header_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_header_url().size() > 0) {
    user_header_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_header_url_);
  }
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_email().size() > 0) {
    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  user_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_phone().size() > 0) {
    user_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_phone_);
  }
  user_sign_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_sign_info().size() > 0) {
    user_sign_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_sign_info_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_sex_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(user_sex_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.base.UserInfo)
}

void UserInfo::SharedCtor() {
  user_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_header_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_sign_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_sex_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(user_sex_));
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:youliao.pdu.base.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  user_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_header_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_sign_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  ::protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  ::protobuf_youliao_2ebase_2eproto::InitDefaultsUserInfo();
  return *internal_default_instance();
}


void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.base.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_header_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_sign_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_sex_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(user_sex_));
  _internal_metadata_.Clear();
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.base.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 user_account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 user_sex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_nick = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_nick().data(), static_cast<int>(this->user_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.UserInfo.user_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_header_url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_header_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_header_url().data(), static_cast<int>(this->user_header_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.UserInfo.user_header_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_email = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_email().data(), static_cast<int>(this->user_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.UserInfo.user_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_phone = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_phone().data(), static_cast<int>(this->user_phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.UserInfo.user_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_sign_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_sign_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_sign_info().data(), static_cast<int>(this->user_sign_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.UserInfo.user_sign_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.base.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.base.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.base.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 user_account = 2;
  if (this->user_account() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->user_account(), output);
  }

  // uint32 user_sex = 3;
  if (this->user_sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->user_sex(), output);
  }

  // string user_nick = 4;
  if (this->user_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_nick().data(), static_cast<int>(this->user_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_nick(), output);
  }

  // string user_header_url = 5;
  if (this->user_header_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_header_url().data(), static_cast<int>(this->user_header_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_header_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->user_header_url(), output);
  }

  // string user_email = 6;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), static_cast<int>(this->user_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->user_email(), output);
  }

  // string user_phone = 7;
  if (this->user_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_phone().data(), static_cast<int>(this->user_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->user_phone(), output);
  }

  // string user_sign_info = 8;
  if (this->user_sign_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_sign_info().data(), static_cast<int>(this->user_sign_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_sign_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->user_sign_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.base.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.base.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 user_account = 2;
  if (this->user_account() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->user_account(), target);
  }

  // uint32 user_sex = 3;
  if (this->user_sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->user_sex(), target);
  }

  // string user_nick = 4;
  if (this->user_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_nick().data(), static_cast<int>(this->user_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_nick(), target);
  }

  // string user_header_url = 5;
  if (this->user_header_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_header_url().data(), static_cast<int>(this->user_header_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_header_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->user_header_url(), target);
  }

  // string user_email = 6;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), static_cast<int>(this->user_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->user_email(), target);
  }

  // string user_phone = 7;
  if (this->user_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_phone().data(), static_cast<int>(this->user_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->user_phone(), target);
  }

  // string user_sign_info = 8;
  if (this->user_sign_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_sign_info().data(), static_cast<int>(this->user_sign_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_sign_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->user_sign_info(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.base.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.base.UserInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_nick = 4;
  if (this->user_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_nick());
  }

  // string user_header_url = 5;
  if (this->user_header_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_header_url());
  }

  // string user_email = 6;
  if (this->user_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_email());
  }

  // string user_phone = 7;
  if (this->user_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_phone());
  }

  // string user_sign_info = 8;
  if (this->user_sign_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_sign_info());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 user_account = 2;
  if (this->user_account() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_account());
  }

  // uint32 user_sex = 3;
  if (this->user_sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_sex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.base.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.base.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.base.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.base.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_nick().size() > 0) {

    user_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_nick_);
  }
  if (from.user_header_url().size() > 0) {

    user_header_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_header_url_);
  }
  if (from.user_email().size() > 0) {

    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  if (from.user_phone().size() > 0) {

    user_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_phone_);
  }
  if (from.user_sign_info().size() > 0) {

    user_sign_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_sign_info_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.user_account() != 0) {
    set_user_account(from.user_account());
  }
  if (from.user_sex() != 0) {
    set_user_sex(from.user_sex());
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.base.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.base.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  user_nick_.Swap(&other->user_nick_);
  user_header_url_.Swap(&other->user_header_url_);
  user_email_.Swap(&other->user_email_);
  user_phone_.Swap(&other->user_phone_);
  user_sign_info_.Swap(&other->user_sign_info_);
  swap(user_id_, other->user_id_);
  swap(user_account_, other->user_account_);
  swap(user_sex_, other->user_sex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendInfo::kRelatedIdFieldNumber;
const int FriendInfo::kFriendIdFieldNumber;
const int FriendInfo::kFriendAccountFieldNumber;
const int FriendInfo::kFriendSexFieldNumber;
const int FriendInfo::kFriendNickFieldNumber;
const int FriendInfo::kFriendHeaderUrlFieldNumber;
const int FriendInfo::kFriendEmailFieldNumber;
const int FriendInfo::kFriendPhoneFieldNumber;
const int FriendInfo::kFriendSignInfoFieldNumber;
const int FriendInfo::kFriendRemarkFieldNumber;
const int FriendInfo::kFriendIsOnlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendInfo::FriendInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2ebase_2eproto::InitDefaultsFriendInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.base.FriendInfo)
}
FriendInfo::FriendInfo(const FriendInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friend_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_nick().size() > 0) {
    friend_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_nick_);
  }
  friend_header_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_header_url().size() > 0) {
    friend_header_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_header_url_);
  }
  friend_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_email().size() > 0) {
    friend_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_email_);
  }
  friend_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_phone().size() > 0) {
    friend_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_phone_);
  }
  friend_sign_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_sign_info().size() > 0) {
    friend_sign_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_sign_info_);
  }
  friend_remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_remark().size() > 0) {
    friend_remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_remark_);
  }
  ::memcpy(&related_id_, &from.related_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_is_online_) -
    reinterpret_cast<char*>(&related_id_)) + sizeof(friend_is_online_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.base.FriendInfo)
}

void FriendInfo::SharedCtor() {
  friend_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_header_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_sign_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&related_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_is_online_) -
      reinterpret_cast<char*>(&related_id_)) + sizeof(friend_is_online_));
  _cached_size_ = 0;
}

FriendInfo::~FriendInfo() {
  // @@protoc_insertion_point(destructor:youliao.pdu.base.FriendInfo)
  SharedDtor();
}

void FriendInfo::SharedDtor() {
  friend_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_header_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_sign_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendInfo::descriptor() {
  ::protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendInfo& FriendInfo::default_instance() {
  ::protobuf_youliao_2ebase_2eproto::InitDefaultsFriendInfo();
  return *internal_default_instance();
}


void FriendInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.base.FriendInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_header_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_sign_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&related_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_is_online_) -
      reinterpret_cast<char*>(&related_id_)) + sizeof(friend_is_online_));
  _internal_metadata_.Clear();
}

bool FriendInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.base.FriendInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 related_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &related_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_sex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_nick = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_nick().data(), static_cast<int>(this->friend_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.FriendInfo.friend_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_header_url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_header_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_header_url().data(), static_cast<int>(this->friend_header_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.FriendInfo.friend_header_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_email = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_email().data(), static_cast<int>(this->friend_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.FriendInfo.friend_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_phone = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_phone().data(), static_cast<int>(this->friend_phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.FriendInfo.friend_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_sign_info = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_sign_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_sign_info().data(), static_cast<int>(this->friend_sign_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.FriendInfo.friend_sign_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_remark = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_remark().data(), static_cast<int>(this->friend_remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.FriendInfo.friend_remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool friend_is_online = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &friend_is_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.base.FriendInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.base.FriendInfo)
  return false;
#undef DO_
}

void FriendInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.base.FriendInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 related_id = 1;
  if (this->related_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->related_id(), output);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->friend_id(), output);
  }

  // uint32 friend_account = 3;
  if (this->friend_account() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->friend_account(), output);
  }

  // uint32 friend_sex = 4;
  if (this->friend_sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->friend_sex(), output);
  }

  // string friend_nick = 5;
  if (this->friend_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_nick().data(), static_cast<int>(this->friend_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->friend_nick(), output);
  }

  // string friend_header_url = 6;
  if (this->friend_header_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_header_url().data(), static_cast<int>(this->friend_header_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_header_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->friend_header_url(), output);
  }

  // string friend_email = 7;
  if (this->friend_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_email().data(), static_cast<int>(this->friend_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->friend_email(), output);
  }

  // string friend_phone = 8;
  if (this->friend_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_phone().data(), static_cast<int>(this->friend_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->friend_phone(), output);
  }

  // string friend_sign_info = 9;
  if (this->friend_sign_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_sign_info().data(), static_cast<int>(this->friend_sign_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_sign_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->friend_sign_info(), output);
  }

  // string friend_remark = 10;
  if (this->friend_remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_remark().data(), static_cast<int>(this->friend_remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->friend_remark(), output);
  }

  // bool friend_is_online = 11;
  if (this->friend_is_online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->friend_is_online(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.base.FriendInfo)
}

::google::protobuf::uint8* FriendInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.base.FriendInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 related_id = 1;
  if (this->related_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->related_id(), target);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->friend_id(), target);
  }

  // uint32 friend_account = 3;
  if (this->friend_account() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->friend_account(), target);
  }

  // uint32 friend_sex = 4;
  if (this->friend_sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->friend_sex(), target);
  }

  // string friend_nick = 5;
  if (this->friend_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_nick().data(), static_cast<int>(this->friend_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->friend_nick(), target);
  }

  // string friend_header_url = 6;
  if (this->friend_header_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_header_url().data(), static_cast<int>(this->friend_header_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_header_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->friend_header_url(), target);
  }

  // string friend_email = 7;
  if (this->friend_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_email().data(), static_cast<int>(this->friend_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->friend_email(), target);
  }

  // string friend_phone = 8;
  if (this->friend_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_phone().data(), static_cast<int>(this->friend_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->friend_phone(), target);
  }

  // string friend_sign_info = 9;
  if (this->friend_sign_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_sign_info().data(), static_cast<int>(this->friend_sign_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_sign_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->friend_sign_info(), target);
  }

  // string friend_remark = 10;
  if (this->friend_remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_remark().data(), static_cast<int>(this->friend_remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->friend_remark(), target);
  }

  // bool friend_is_online = 11;
  if (this->friend_is_online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->friend_is_online(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.base.FriendInfo)
  return target;
}

size_t FriendInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.base.FriendInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string friend_nick = 5;
  if (this->friend_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_nick());
  }

  // string friend_header_url = 6;
  if (this->friend_header_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_header_url());
  }

  // string friend_email = 7;
  if (this->friend_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_email());
  }

  // string friend_phone = 8;
  if (this->friend_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_phone());
  }

  // string friend_sign_info = 9;
  if (this->friend_sign_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_sign_info());
  }

  // string friend_remark = 10;
  if (this->friend_remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_remark());
  }

  // uint32 related_id = 1;
  if (this->related_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->related_id());
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_id());
  }

  // uint32 friend_account = 3;
  if (this->friend_account() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_account());
  }

  // uint32 friend_sex = 4;
  if (this->friend_sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_sex());
  }

  // bool friend_is_online = 11;
  if (this->friend_is_online() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.base.FriendInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.base.FriendInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.base.FriendInfo)
    MergeFrom(*source);
  }
}

void FriendInfo::MergeFrom(const FriendInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.base.FriendInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.friend_nick().size() > 0) {

    friend_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_nick_);
  }
  if (from.friend_header_url().size() > 0) {

    friend_header_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_header_url_);
  }
  if (from.friend_email().size() > 0) {

    friend_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_email_);
  }
  if (from.friend_phone().size() > 0) {

    friend_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_phone_);
  }
  if (from.friend_sign_info().size() > 0) {

    friend_sign_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_sign_info_);
  }
  if (from.friend_remark().size() > 0) {

    friend_remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_remark_);
  }
  if (from.related_id() != 0) {
    set_related_id(from.related_id());
  }
  if (from.friend_id() != 0) {
    set_friend_id(from.friend_id());
  }
  if (from.friend_account() != 0) {
    set_friend_account(from.friend_account());
  }
  if (from.friend_sex() != 0) {
    set_friend_sex(from.friend_sex());
  }
  if (from.friend_is_online() != 0) {
    set_friend_is_online(from.friend_is_online());
  }
}

void FriendInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.base.FriendInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendInfo::CopyFrom(const FriendInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.base.FriendInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendInfo::IsInitialized() const {
  return true;
}

void FriendInfo::Swap(FriendInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendInfo::InternalSwap(FriendInfo* other) {
  using std::swap;
  friend_nick_.Swap(&other->friend_nick_);
  friend_header_url_.Swap(&other->friend_header_url_);
  friend_email_.Swap(&other->friend_email_);
  friend_phone_.Swap(&other->friend_phone_);
  friend_sign_info_.Swap(&other->friend_sign_info_);
  friend_remark_.Swap(&other->friend_remark_);
  swap(related_id_, other->related_id_);
  swap(friend_id_, other->friend_id_);
  swap(friend_account_, other->friend_account_);
  swap(friend_sex_, other->friend_sex_);
  swap(friend_is_online_, other->friend_is_online_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendInfo::GetMetadata() const {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SessionInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionInfo::kSessionIdFieldNumber;
const int SessionInfo::kOtherIdFieldNumber;
const int SessionInfo::kSessionTypeFieldNumber;
const int SessionInfo::kSessionTopFieldNumber;
const int SessionInfo::kSessionUpdateFieldNumber;
const int SessionInfo::kLatestMsgIdFieldNumber;
const int SessionInfo::kLastMessageDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionInfo::SessionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2ebase_2eproto::InitDefaultsSessionInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.base.SessionInfo)
}
SessionInfo::SessionInfo(const SessionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  last_message_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_message_data().size() > 0) {
    last_message_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_message_data_);
  }
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&latest_msg_id_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(latest_msg_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.base.SessionInfo)
}

void SessionInfo::SharedCtor() {
  last_message_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latest_msg_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(latest_msg_id_));
  _cached_size_ = 0;
}

SessionInfo::~SessionInfo() {
  // @@protoc_insertion_point(destructor:youliao.pdu.base.SessionInfo)
  SharedDtor();
}

void SessionInfo::SharedDtor() {
  last_message_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SessionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SessionInfo::descriptor() {
  ::protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SessionInfo& SessionInfo::default_instance() {
  ::protobuf_youliao_2ebase_2eproto::InitDefaultsSessionInfo();
  return *internal_default_instance();
}


void SessionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.base.SessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  last_message_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latest_msg_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(latest_msg_id_));
  _internal_metadata_.Clear();
}

bool SessionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.base.SessionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 other_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &other_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 session_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 session_top = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 session_update = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_update_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 latest_msg_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &latest_msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes last_message_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_last_message_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.base.SessionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.base.SessionInfo)
  return false;
#undef DO_
}

void SessionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.base.SessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  // uint32 other_id = 2;
  if (this->other_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->other_id(), output);
  }

  // uint32 session_type = 3;
  if (this->session_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->session_type(), output);
  }

  // uint32 session_top = 4;
  if (this->session_top() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->session_top(), output);
  }

  // uint32 session_update = 5;
  if (this->session_update() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->session_update(), output);
  }

  // uint32 latest_msg_id = 6;
  if (this->latest_msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->latest_msg_id(), output);
  }

  // bytes last_message_data = 7;
  if (this->last_message_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->last_message_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.base.SessionInfo)
}

::google::protobuf::uint8* SessionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.base.SessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  // uint32 other_id = 2;
  if (this->other_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->other_id(), target);
  }

  // uint32 session_type = 3;
  if (this->session_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->session_type(), target);
  }

  // uint32 session_top = 4;
  if (this->session_top() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->session_top(), target);
  }

  // uint32 session_update = 5;
  if (this->session_update() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->session_update(), target);
  }

  // uint32 latest_msg_id = 6;
  if (this->latest_msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->latest_msg_id(), target);
  }

  // bytes last_message_data = 7;
  if (this->last_message_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->last_message_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.base.SessionInfo)
  return target;
}

size_t SessionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.base.SessionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes last_message_data = 7;
  if (this->last_message_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->last_message_data());
  }

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }

  // uint32 other_id = 2;
  if (this->other_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->other_id());
  }

  // uint32 session_type = 3;
  if (this->session_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_type());
  }

  // uint32 session_top = 4;
  if (this->session_top() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_top());
  }

  // uint32 session_update = 5;
  if (this->session_update() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_update());
  }

  // uint32 latest_msg_id = 6;
  if (this->latest_msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->latest_msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SessionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.base.SessionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SessionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.base.SessionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.base.SessionInfo)
    MergeFrom(*source);
  }
}

void SessionInfo::MergeFrom(const SessionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.base.SessionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.last_message_data().size() > 0) {

    last_message_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_message_data_);
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
  if (from.other_id() != 0) {
    set_other_id(from.other_id());
  }
  if (from.session_type() != 0) {
    set_session_type(from.session_type());
  }
  if (from.session_top() != 0) {
    set_session_top(from.session_top());
  }
  if (from.session_update() != 0) {
    set_session_update(from.session_update());
  }
  if (from.latest_msg_id() != 0) {
    set_latest_msg_id(from.latest_msg_id());
  }
}

void SessionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.base.SessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionInfo::CopyFrom(const SessionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.base.SessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionInfo::IsInitialized() const {
  return true;
}

void SessionInfo::Swap(SessionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionInfo::InternalSwap(SessionInfo* other) {
  using std::swap;
  last_message_data_.Swap(&other->last_message_data_);
  swap(session_id_, other->session_id_);
  swap(other_id_, other->other_id_);
  swap(session_type_, other->session_type_);
  swap(session_top_, other->session_top_);
  swap(session_update_, other->session_update_);
  swap(latest_msg_id_, other->latest_msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SessionInfo::GetMetadata() const {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemberInfo::InitAsDefaultInstance() {
  ::youliao::pdu::base::_MemberInfo_default_instance_._instance.get_mutable()->user_info_ = const_cast< ::youliao::pdu::base::UserInfo*>(
      ::youliao::pdu::base::UserInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemberInfo::kUserIdFieldNumber;
const int MemberInfo::kGroupCardFieldNumber;
const int MemberInfo::kLastChatTimeFieldNumber;
const int MemberInfo::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemberInfo::MemberInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2ebase_2eproto::InitDefaultsMemberInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.base.MemberInfo)
}
MemberInfo::MemberInfo(const MemberInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_card_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_card().size() > 0) {
    group_card_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_card_);
  }
  if (from.has_user_info()) {
    user_info_ = new ::youliao::pdu::base::UserInfo(*from.user_info_);
  } else {
    user_info_ = NULL;
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_chat_time_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(last_chat_time_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.base.MemberInfo)
}

void MemberInfo::SharedCtor() {
  group_card_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_chat_time_) -
      reinterpret_cast<char*>(&user_info_)) + sizeof(last_chat_time_));
  _cached_size_ = 0;
}

MemberInfo::~MemberInfo() {
  // @@protoc_insertion_point(destructor:youliao.pdu.base.MemberInfo)
  SharedDtor();
}

void MemberInfo::SharedDtor() {
  group_card_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_info_;
}

void MemberInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemberInfo::descriptor() {
  ::protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemberInfo& MemberInfo::default_instance() {
  ::protobuf_youliao_2ebase_2eproto::InitDefaultsMemberInfo();
  return *internal_default_instance();
}


void MemberInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.base.MemberInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) {
    delete user_info_;
  }
  user_info_ = NULL;
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_chat_time_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(last_chat_time_));
  _internal_metadata_.Clear();
}

bool MemberInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.base.MemberInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_card = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_card()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_card().data(), static_cast<int>(this->group_card().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.MemberInfo.group_card"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_chat_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_chat_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .youliao.pdu.base.UserInfo user_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.base.MemberInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.base.MemberInfo)
  return false;
#undef DO_
}

void MemberInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.base.MemberInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // string group_card = 2;
  if (this->group_card().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_card().data(), static_cast<int>(this->group_card().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.MemberInfo.group_card");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_card(), output);
  }

  // uint32 last_chat_time = 3;
  if (this->last_chat_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->last_chat_time(), output);
  }

  // .youliao.pdu.base.UserInfo user_info = 4;
  if (this->has_user_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *user_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.base.MemberInfo)
}

::google::protobuf::uint8* MemberInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.base.MemberInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // string group_card = 2;
  if (this->group_card().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_card().data(), static_cast<int>(this->group_card().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.MemberInfo.group_card");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_card(), target);
  }

  // uint32 last_chat_time = 3;
  if (this->last_chat_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->last_chat_time(), target);
  }

  // .youliao.pdu.base.UserInfo user_info = 4;
  if (this->has_user_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *user_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.base.MemberInfo)
  return target;
}

size_t MemberInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.base.MemberInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string group_card = 2;
  if (this->group_card().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_card());
  }

  // .youliao.pdu.base.UserInfo user_info = 4;
  if (this->has_user_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_info_);
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 last_chat_time = 3;
  if (this->last_chat_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_chat_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemberInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.base.MemberInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MemberInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemberInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.base.MemberInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.base.MemberInfo)
    MergeFrom(*source);
  }
}

void MemberInfo::MergeFrom(const MemberInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.base.MemberInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_card().size() > 0) {

    group_card_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_card_);
  }
  if (from.has_user_info()) {
    mutable_user_info()->::youliao::pdu::base::UserInfo::MergeFrom(from.user_info());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.last_chat_time() != 0) {
    set_last_chat_time(from.last_chat_time());
  }
}

void MemberInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.base.MemberInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemberInfo::CopyFrom(const MemberInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.base.MemberInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemberInfo::IsInitialized() const {
  return true;
}

void MemberInfo::Swap(MemberInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemberInfo::InternalSwap(MemberInfo* other) {
  using std::swap;
  group_card_.Swap(&other->group_card_);
  swap(user_info_, other->user_info_);
  swap(user_id_, other->user_id_);
  swap(last_chat_time_, other->last_chat_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemberInfo::GetMetadata() const {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddRequestInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddRequestInfo::kIdFieldNumber;
const int AddRequestInfo::kOtherIdFieldNumber;
const int AddRequestInfo::kResultIdFieldNumber;
const int AddRequestInfo::kHandleTimeFieldNumber;
const int AddRequestInfo::kValidateDataFieldNumber;
const int AddRequestInfo::kOtherHeadUrlFieldNumber;
const int AddRequestInfo::kOtherNickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddRequestInfo::AddRequestInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2ebase_2eproto::InitDefaultsAddRequestInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.base.AddRequestInfo)
}
AddRequestInfo::AddRequestInfo(const AddRequestInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  validate_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.validate_data().size() > 0) {
    validate_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validate_data_);
  }
  other_head_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.other_head_url().size() > 0) {
    other_head_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_head_url_);
  }
  other_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.other_nick().size() > 0) {
    other_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_nick_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&handle_time_) -
    reinterpret_cast<char*>(&id_)) + sizeof(handle_time_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.base.AddRequestInfo)
}

void AddRequestInfo::SharedCtor() {
  validate_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_head_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&handle_time_) -
      reinterpret_cast<char*>(&id_)) + sizeof(handle_time_));
  _cached_size_ = 0;
}

AddRequestInfo::~AddRequestInfo() {
  // @@protoc_insertion_point(destructor:youliao.pdu.base.AddRequestInfo)
  SharedDtor();
}

void AddRequestInfo::SharedDtor() {
  validate_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_head_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddRequestInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddRequestInfo::descriptor() {
  ::protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddRequestInfo& AddRequestInfo::default_instance() {
  ::protobuf_youliao_2ebase_2eproto::InitDefaultsAddRequestInfo();
  return *internal_default_instance();
}


void AddRequestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.base.AddRequestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  validate_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_head_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&handle_time_) -
      reinterpret_cast<char*>(&id_)) + sizeof(handle_time_));
  _internal_metadata_.Clear();
}

bool AddRequestInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.base.AddRequestInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 other_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &other_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 handle_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &handle_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string validate_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validate_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->validate_data().data(), static_cast<int>(this->validate_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.AddRequestInfo.validate_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string other_head_url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other_head_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->other_head_url().data(), static_cast<int>(this->other_head_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.AddRequestInfo.other_head_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string other_nick = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->other_nick().data(), static_cast<int>(this->other_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.AddRequestInfo.other_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.base.AddRequestInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.base.AddRequestInfo)
  return false;
#undef DO_
}

void AddRequestInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.base.AddRequestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 other_id = 2;
  if (this->other_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->other_id(), output);
  }

  // uint32 result_id = 3;
  if (this->result_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->result_id(), output);
  }

  // uint32 handle_time = 4;
  if (this->handle_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->handle_time(), output);
  }

  // string validate_data = 5;
  if (this->validate_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validate_data().data(), static_cast<int>(this->validate_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.AddRequestInfo.validate_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->validate_data(), output);
  }

  // string other_head_url = 6;
  if (this->other_head_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other_head_url().data(), static_cast<int>(this->other_head_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.AddRequestInfo.other_head_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->other_head_url(), output);
  }

  // string other_nick = 7;
  if (this->other_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other_nick().data(), static_cast<int>(this->other_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.AddRequestInfo.other_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->other_nick(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.base.AddRequestInfo)
}

::google::protobuf::uint8* AddRequestInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.base.AddRequestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 other_id = 2;
  if (this->other_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->other_id(), target);
  }

  // uint32 result_id = 3;
  if (this->result_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->result_id(), target);
  }

  // uint32 handle_time = 4;
  if (this->handle_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->handle_time(), target);
  }

  // string validate_data = 5;
  if (this->validate_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validate_data().data(), static_cast<int>(this->validate_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.AddRequestInfo.validate_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->validate_data(), target);
  }

  // string other_head_url = 6;
  if (this->other_head_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other_head_url().data(), static_cast<int>(this->other_head_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.AddRequestInfo.other_head_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->other_head_url(), target);
  }

  // string other_nick = 7;
  if (this->other_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other_nick().data(), static_cast<int>(this->other_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.AddRequestInfo.other_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->other_nick(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.base.AddRequestInfo)
  return target;
}

size_t AddRequestInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.base.AddRequestInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string validate_data = 5;
  if (this->validate_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->validate_data());
  }

  // string other_head_url = 6;
  if (this->other_head_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->other_head_url());
  }

  // string other_nick = 7;
  if (this->other_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->other_nick());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 other_id = 2;
  if (this->other_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->other_id());
  }

  // uint32 result_id = 3;
  if (this->result_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_id());
  }

  // uint32 handle_time = 4;
  if (this->handle_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->handle_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddRequestInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.base.AddRequestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRequestInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddRequestInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.base.AddRequestInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.base.AddRequestInfo)
    MergeFrom(*source);
  }
}

void AddRequestInfo::MergeFrom(const AddRequestInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.base.AddRequestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.validate_data().size() > 0) {

    validate_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validate_data_);
  }
  if (from.other_head_url().size() > 0) {

    other_head_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_head_url_);
  }
  if (from.other_nick().size() > 0) {

    other_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_nick_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.other_id() != 0) {
    set_other_id(from.other_id());
  }
  if (from.result_id() != 0) {
    set_result_id(from.result_id());
  }
  if (from.handle_time() != 0) {
    set_handle_time(from.handle_time());
  }
}

void AddRequestInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.base.AddRequestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRequestInfo::CopyFrom(const AddRequestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.base.AddRequestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRequestInfo::IsInitialized() const {
  return true;
}

void AddRequestInfo::Swap(AddRequestInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddRequestInfo::InternalSwap(AddRequestInfo* other) {
  using std::swap;
  validate_data_.Swap(&other->validate_data_);
  other_head_url_.Swap(&other->other_head_url_);
  other_nick_.Swap(&other->other_nick_);
  swap(id_, other->id_);
  swap(other_id_, other->other_id_);
  swap(result_id_, other->result_id_);
  swap(handle_time_, other->handle_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddRequestInfo::GetMetadata() const {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GroupInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupInfo::kGroupIdFieldNumber;
const int GroupInfo::kGroupNameFieldNumber;
const int GroupInfo::kGroupHeadFieldNumber;
const int GroupInfo::kGroupCreatorFieldNumber;
const int GroupInfo::kGroupCapacityFieldNumber;
const int GroupInfo::kGroupCreatedFieldNumber;
const int GroupInfo::kManagersFieldNumber;
const int GroupInfo::kMembersFieldNumber;
const int GroupInfo::kGroupVerifyTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupInfo::GroupInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2ebase_2eproto::InitDefaultsGroupInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.base.GroupInfo)
}
GroupInfo::GroupInfo(const GroupInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      managers_(from.managers_),
      members_(from.members_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  group_head_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_head().size() > 0) {
    group_head_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_head_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_verify_type_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(group_verify_type_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.base.GroupInfo)
}

void GroupInfo::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_head_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_verify_type_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(group_verify_type_));
  _cached_size_ = 0;
}

GroupInfo::~GroupInfo() {
  // @@protoc_insertion_point(destructor:youliao.pdu.base.GroupInfo)
  SharedDtor();
}

void GroupInfo::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_head_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupInfo::descriptor() {
  ::protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupInfo& GroupInfo::default_instance() {
  ::protobuf_youliao_2ebase_2eproto::InitDefaultsGroupInfo();
  return *internal_default_instance();
}


void GroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.base.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  managers_.Clear();
  members_.Clear();
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_head_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_verify_type_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(group_verify_type_));
  _internal_metadata_.Clear();
}

bool GroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.base.GroupInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), static_cast<int>(this->group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.GroupInfo.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_head = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_head()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_head().data(), static_cast<int>(this->group_head().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.GroupInfo.group_head"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_creator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_creator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_capacity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_capacity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_created = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 managers = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_managers())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_managers())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 members = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_members())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_members())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_verify_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_verify_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.base.GroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.base.GroupInfo)
  return false;
#undef DO_
}

void GroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.base.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // string group_name = 2;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.GroupInfo.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group_name(), output);
  }

  // string group_head = 3;
  if (this->group_head().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_head().data(), static_cast<int>(this->group_head().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.GroupInfo.group_head");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->group_head(), output);
  }

  // uint32 group_creator = 4;
  if (this->group_creator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->group_creator(), output);
  }

  // uint32 group_capacity = 5;
  if (this->group_capacity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->group_capacity(), output);
  }

  // uint32 group_created = 6;
  if (this->group_created() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->group_created(), output);
  }

  // repeated uint32 managers = 7;
  if (this->managers_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _managers_cached_byte_size_));
  }
  for (int i = 0, n = this->managers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->managers(i), output);
  }

  // repeated uint32 members = 8;
  if (this->members_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _members_cached_byte_size_));
  }
  for (int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->members(i), output);
  }

  // uint32 group_verify_type = 9;
  if (this->group_verify_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->group_verify_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.base.GroupInfo)
}

::google::protobuf::uint8* GroupInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.base.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group_id(), target);
  }

  // string group_name = 2;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.GroupInfo.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group_name(), target);
  }

  // string group_head = 3;
  if (this->group_head().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_head().data(), static_cast<int>(this->group_head().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.GroupInfo.group_head");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->group_head(), target);
  }

  // uint32 group_creator = 4;
  if (this->group_creator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->group_creator(), target);
  }

  // uint32 group_capacity = 5;
  if (this->group_capacity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->group_capacity(), target);
  }

  // uint32 group_created = 6;
  if (this->group_created() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->group_created(), target);
  }

  // repeated uint32 managers = 7;
  if (this->managers_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _managers_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->managers_, target);
  }

  // repeated uint32 members = 8;
  if (this->members_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _members_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->members_, target);
  }

  // uint32 group_verify_type = 9;
  if (this->group_verify_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->group_verify_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.base.GroupInfo)
  return target;
}

size_t GroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.base.GroupInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 managers = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->managers_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _managers_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 members = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->members_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _members_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string group_name = 2;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  // string group_head = 3;
  if (this->group_head().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_head());
  }

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 group_creator = 4;
  if (this->group_creator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_creator());
  }

  // uint32 group_capacity = 5;
  if (this->group_capacity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_capacity());
  }

  // uint32 group_created = 6;
  if (this->group_created() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_created());
  }

  // uint32 group_verify_type = 9;
  if (this->group_verify_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_verify_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.base.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.base.GroupInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.base.GroupInfo)
    MergeFrom(*source);
  }
}

void GroupInfo::MergeFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.base.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  managers_.MergeFrom(from.managers_);
  members_.MergeFrom(from.members_);
  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  if (from.group_head().size() > 0) {

    group_head_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_head_);
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.group_creator() != 0) {
    set_group_creator(from.group_creator());
  }
  if (from.group_capacity() != 0) {
    set_group_capacity(from.group_capacity());
  }
  if (from.group_created() != 0) {
    set_group_created(from.group_created());
  }
  if (from.group_verify_type() != 0) {
    set_group_verify_type(from.group_verify_type());
  }
}

void GroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.base.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupInfo::CopyFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.base.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInfo::IsInitialized() const {
  return true;
}

void GroupInfo::Swap(GroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupInfo::InternalSwap(GroupInfo* other) {
  using std::swap;
  managers_.InternalSwap(&other->managers_);
  members_.InternalSwap(&other->members_);
  group_name_.Swap(&other->group_name_);
  group_head_.Swap(&other->group_head_);
  swap(group_id_, other->group_id_);
  swap(group_creator_, other->group_creator_);
  swap(group_capacity_, other->group_capacity_);
  swap(group_created_, other->group_created_);
  swap(group_verify_type_, other->group_verify_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupInfo::GetMetadata() const {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IpAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IpAddress::kIpFieldNumber;
const int IpAddress::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IpAddress::IpAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2ebase_2eproto::InitDefaultsIpAddress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.base.IpAddress)
}
IpAddress::IpAddress(const IpAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.base.IpAddress)
}

void IpAddress::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  _cached_size_ = 0;
}

IpAddress::~IpAddress() {
  // @@protoc_insertion_point(destructor:youliao.pdu.base.IpAddress)
  SharedDtor();
}

void IpAddress::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IpAddress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IpAddress::descriptor() {
  ::protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IpAddress& IpAddress::default_instance() {
  ::protobuf_youliao_2ebase_2eproto::InitDefaultsIpAddress();
  return *internal_default_instance();
}


void IpAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.base.IpAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  _internal_metadata_.Clear();
}

bool IpAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.base.IpAddress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.IpAddress.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.base.IpAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.base.IpAddress)
  return false;
#undef DO_
}

void IpAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.base.IpAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.IpAddress.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.base.IpAddress)
}

::google::protobuf::uint8* IpAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.base.IpAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.IpAddress.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.base.IpAddress)
  return target;
}

size_t IpAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.base.IpAddress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IpAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.base.IpAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const IpAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IpAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.base.IpAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.base.IpAddress)
    MergeFrom(*source);
  }
}

void IpAddress::MergeFrom(const IpAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.base.IpAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void IpAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.base.IpAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IpAddress::CopyFrom(const IpAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.base.IpAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IpAddress::IsInitialized() const {
  return true;
}

void IpAddress::Swap(IpAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IpAddress::InternalSwap(IpAddress* other) {
  using std::swap;
  ip_.Swap(&other->ip_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IpAddress::GetMetadata() const {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartBeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartBeat::HeartBeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2ebase_2eproto::InitDefaultsHeartBeat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.base.HeartBeat)
}
HeartBeat::HeartBeat(const HeartBeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.base.HeartBeat)
}

void HeartBeat::SharedCtor() {
  _cached_size_ = 0;
}

HeartBeat::~HeartBeat() {
  // @@protoc_insertion_point(destructor:youliao.pdu.base.HeartBeat)
  SharedDtor();
}

void HeartBeat::SharedDtor() {
}

void HeartBeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeat::descriptor() {
  ::protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartBeat& HeartBeat::default_instance() {
  ::protobuf_youliao_2ebase_2eproto::InitDefaultsHeartBeat();
  return *internal_default_instance();
}


void HeartBeat::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.base.HeartBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool HeartBeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.base.HeartBeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.base.HeartBeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.base.HeartBeat)
  return false;
#undef DO_
}

void HeartBeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.base.HeartBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.base.HeartBeat)
}

::google::protobuf::uint8* HeartBeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.base.HeartBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.base.HeartBeat)
  return target;
}

size_t HeartBeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.base.HeartBeat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.base.HeartBeat)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartBeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartBeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.base.HeartBeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.base.HeartBeat)
    MergeFrom(*source);
  }
}

void HeartBeat::MergeFrom(const HeartBeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.base.HeartBeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HeartBeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.base.HeartBeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeat::CopyFrom(const HeartBeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.base.HeartBeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeat::IsInitialized() const {
  return true;
}

void HeartBeat::Swap(HeartBeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartBeat::InternalSwap(HeartBeat* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartBeat::GetMetadata() const {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace base
}  // namespace pdu
}  // namespace youliao
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::base::UserInfo* Arena::Create< ::youliao::pdu::base::UserInfo >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::base::UserInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::base::FriendInfo* Arena::Create< ::youliao::pdu::base::FriendInfo >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::base::FriendInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::base::SessionInfo* Arena::Create< ::youliao::pdu::base::SessionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::base::SessionInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::base::MemberInfo* Arena::Create< ::youliao::pdu::base::MemberInfo >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::base::MemberInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::base::AddRequestInfo* Arena::Create< ::youliao::pdu::base::AddRequestInfo >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::base::AddRequestInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::base::GroupInfo* Arena::Create< ::youliao::pdu::base::GroupInfo >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::base::GroupInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::base::IpAddress* Arena::Create< ::youliao::pdu::base::IpAddress >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::base::IpAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::base::HeartBeat* Arena::Create< ::youliao::pdu::base::HeartBeat >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::base::HeartBeat >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

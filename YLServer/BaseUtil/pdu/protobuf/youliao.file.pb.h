// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youliao.file.proto

#ifndef PROTOBUF_youliao_2efile_2eproto_INCLUDED
#define PROTOBUF_youliao_2efile_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "youliao.base.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_youliao_2efile_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSendFileRequestImpl();
void InitDefaultsSendFileRequest();
void InitDefaultsSendFileResponeImpl();
void InitDefaultsSendFileRespone();
void InitDefaultsFileNotifyImpl();
void InitDefaultsFileNotify();
void InitDefaultsGetFileBlockRequestImpl();
void InitDefaultsGetFileBlockRequest();
void InitDefaultsGetFileBlockResponeImpl();
void InitDefaultsGetFileBlockRespone();
void InitDefaultsClientFileStateImpl();
void InitDefaultsClientFileState();
void InitDefaultsLoginFileServerRequestImpl();
void InitDefaultsLoginFileServerRequest();
void InitDefaultsLoginFileServerResponeImpl();
void InitDefaultsLoginFileServerRespone();
void InitDefaultsOfflineFileImpl();
void InitDefaultsOfflineFile();
void InitDefaultsGetOfflineFileRequestImpl();
void InitDefaultsGetOfflineFileRequest();
void InitDefaultsGetOfflineFileResponeImpl();
void InitDefaultsGetOfflineFileRespone();
inline void InitDefaults() {
  InitDefaultsSendFileRequest();
  InitDefaultsSendFileRespone();
  InitDefaultsFileNotify();
  InitDefaultsGetFileBlockRequest();
  InitDefaultsGetFileBlockRespone();
  InitDefaultsClientFileState();
  InitDefaultsLoginFileServerRequest();
  InitDefaultsLoginFileServerRespone();
  InitDefaultsOfflineFile();
  InitDefaultsGetOfflineFileRequest();
  InitDefaultsGetOfflineFileRespone();
}
}  // namespace protobuf_youliao_2efile_2eproto
namespace youliao {
namespace pdu {
namespace file {
class ClientFileState;
class ClientFileStateDefaultTypeInternal;
extern ClientFileStateDefaultTypeInternal _ClientFileState_default_instance_;
class FileNotify;
class FileNotifyDefaultTypeInternal;
extern FileNotifyDefaultTypeInternal _FileNotify_default_instance_;
class GetFileBlockRequest;
class GetFileBlockRequestDefaultTypeInternal;
extern GetFileBlockRequestDefaultTypeInternal _GetFileBlockRequest_default_instance_;
class GetFileBlockRespone;
class GetFileBlockResponeDefaultTypeInternal;
extern GetFileBlockResponeDefaultTypeInternal _GetFileBlockRespone_default_instance_;
class GetOfflineFileRequest;
class GetOfflineFileRequestDefaultTypeInternal;
extern GetOfflineFileRequestDefaultTypeInternal _GetOfflineFileRequest_default_instance_;
class GetOfflineFileRespone;
class GetOfflineFileResponeDefaultTypeInternal;
extern GetOfflineFileResponeDefaultTypeInternal _GetOfflineFileRespone_default_instance_;
class LoginFileServerRequest;
class LoginFileServerRequestDefaultTypeInternal;
extern LoginFileServerRequestDefaultTypeInternal _LoginFileServerRequest_default_instance_;
class LoginFileServerRespone;
class LoginFileServerResponeDefaultTypeInternal;
extern LoginFileServerResponeDefaultTypeInternal _LoginFileServerRespone_default_instance_;
class OfflineFile;
class OfflineFileDefaultTypeInternal;
extern OfflineFileDefaultTypeInternal _OfflineFile_default_instance_;
class SendFileRequest;
class SendFileRequestDefaultTypeInternal;
extern SendFileRequestDefaultTypeInternal _SendFileRequest_default_instance_;
class SendFileRespone;
class SendFileResponeDefaultTypeInternal;
extern SendFileResponeDefaultTypeInternal _SendFileRespone_default_instance_;
}  // namespace file
}  // namespace pdu
}  // namespace youliao
namespace google {
namespace protobuf {
template<> ::youliao::pdu::file::ClientFileState* Arena::Create< ::youliao::pdu::file::ClientFileState>(Arena*);
template<> ::youliao::pdu::file::FileNotify* Arena::Create< ::youliao::pdu::file::FileNotify>(Arena*);
template<> ::youliao::pdu::file::GetFileBlockRequest* Arena::Create< ::youliao::pdu::file::GetFileBlockRequest>(Arena*);
template<> ::youliao::pdu::file::GetFileBlockRespone* Arena::Create< ::youliao::pdu::file::GetFileBlockRespone>(Arena*);
template<> ::youliao::pdu::file::GetOfflineFileRequest* Arena::Create< ::youliao::pdu::file::GetOfflineFileRequest>(Arena*);
template<> ::youliao::pdu::file::GetOfflineFileRespone* Arena::Create< ::youliao::pdu::file::GetOfflineFileRespone>(Arena*);
template<> ::youliao::pdu::file::LoginFileServerRequest* Arena::Create< ::youliao::pdu::file::LoginFileServerRequest>(Arena*);
template<> ::youliao::pdu::file::LoginFileServerRespone* Arena::Create< ::youliao::pdu::file::LoginFileServerRespone>(Arena*);
template<> ::youliao::pdu::file::OfflineFile* Arena::Create< ::youliao::pdu::file::OfflineFile>(Arena*);
template<> ::youliao::pdu::file::SendFileRequest* Arena::Create< ::youliao::pdu::file::SendFileRequest>(Arena*);
template<> ::youliao::pdu::file::SendFileRespone* Arena::Create< ::youliao::pdu::file::SendFileRespone>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace youliao {
namespace pdu {
namespace file {

// ===================================================================

class SendFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.file.SendFileRequest) */ {
 public:
  SendFileRequest();
  virtual ~SendFileRequest();

  SendFileRequest(const SendFileRequest& from);

  inline SendFileRequest& operator=(const SendFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendFileRequest(SendFileRequest&& from) noexcept
    : SendFileRequest() {
    *this = ::std::move(from);
  }

  inline SendFileRequest& operator=(SendFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendFileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendFileRequest* internal_default_instance() {
    return reinterpret_cast<const SendFileRequest*>(
               &_SendFileRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SendFileRequest* other);
  friend void swap(SendFileRequest& a, SendFileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendFileRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SendFileRequest>(NULL);
  }

  SendFileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SendFileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendFileRequest& from);
  void MergeFrom(const SendFileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string file_name = 3;
  void clear_file_name();
  static const int kFileNameFieldNumber = 3;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // uint32 from_user_id = 1;
  void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 1;
  ::google::protobuf::uint32 from_user_id() const;
  void set_from_user_id(::google::protobuf::uint32 value);

  // uint32 to_user_id = 2;
  void clear_to_user_id();
  static const int kToUserIdFieldNumber = 2;
  ::google::protobuf::uint32 to_user_id() const;
  void set_to_user_id(::google::protobuf::uint32 value);

  // uint32 file_size = 4;
  void clear_file_size();
  static const int kFileSizeFieldNumber = 4;
  ::google::protobuf::uint32 file_size() const;
  void set_file_size(::google::protobuf::uint32 value);

  // .youliao.pdu.base.TransferFileType trans_mode = 5;
  void clear_trans_mode();
  static const int kTransModeFieldNumber = 5;
  ::youliao::pdu::base::TransferFileType trans_mode() const;
  void set_trans_mode(::youliao::pdu::base::TransferFileType value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.file.SendFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::uint32 from_user_id_;
  ::google::protobuf::uint32 to_user_id_;
  ::google::protobuf::uint32 file_size_;
  int trans_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2efile_2eproto::TableStruct;
  friend void ::protobuf_youliao_2efile_2eproto::InitDefaultsSendFileRequestImpl();
};
// -------------------------------------------------------------------

class SendFileRespone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.file.SendFileRespone) */ {
 public:
  SendFileRespone();
  virtual ~SendFileRespone();

  SendFileRespone(const SendFileRespone& from);

  inline SendFileRespone& operator=(const SendFileRespone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendFileRespone(SendFileRespone&& from) noexcept
    : SendFileRespone() {
    *this = ::std::move(from);
  }

  inline SendFileRespone& operator=(SendFileRespone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendFileRespone& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendFileRespone* internal_default_instance() {
    return reinterpret_cast<const SendFileRespone*>(
               &_SendFileRespone_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SendFileRespone* other);
  friend void swap(SendFileRespone& a, SendFileRespone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendFileRespone* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SendFileRespone>(NULL);
  }

  SendFileRespone* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SendFileRespone>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendFileRespone& from);
  void MergeFrom(const SendFileRespone& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendFileRespone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .youliao.pdu.base.IpAddress ip_addr_list = 6;
  int ip_addr_list_size() const;
  void clear_ip_addr_list();
  static const int kIpAddrListFieldNumber = 6;
  ::youliao::pdu::base::IpAddress* mutable_ip_addr_list(int index);
  ::google::protobuf::RepeatedPtrField< ::youliao::pdu::base::IpAddress >*
      mutable_ip_addr_list();
  const ::youliao::pdu::base::IpAddress& ip_addr_list(int index) const;
  ::youliao::pdu::base::IpAddress* add_ip_addr_list();
  const ::google::protobuf::RepeatedPtrField< ::youliao::pdu::base::IpAddress >&
      ip_addr_list() const;

  // string file_name = 4;
  void clear_file_name();
  static const int kFileNameFieldNumber = 4;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // string task_id = 5;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 5;
  const ::std::string& task_id() const;
  void set_task_id(const ::std::string& value);
  #if LANG_CXX11
  void set_task_id(::std::string&& value);
  #endif
  void set_task_id(const char* value);
  void set_task_id(const char* value, size_t size);
  ::std::string* mutable_task_id();
  ::std::string* release_task_id();
  void set_allocated_task_id(::std::string* task_id);

  // uint32 result_code = 1;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::uint32 result_code() const;
  void set_result_code(::google::protobuf::uint32 value);

  // uint32 from_user_id = 2;
  void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 2;
  ::google::protobuf::uint32 from_user_id() const;
  void set_from_user_id(::google::protobuf::uint32 value);

  // uint32 to_user_id = 3;
  void clear_to_user_id();
  static const int kToUserIdFieldNumber = 3;
  ::google::protobuf::uint32 to_user_id() const;
  void set_to_user_id(::google::protobuf::uint32 value);

  // .youliao.pdu.base.TransferFileType trans_mode = 7;
  void clear_trans_mode();
  static const int kTransModeFieldNumber = 7;
  ::youliao::pdu::base::TransferFileType trans_mode() const;
  void set_trans_mode(::youliao::pdu::base::TransferFileType value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.file.SendFileRespone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::youliao::pdu::base::IpAddress > ip_addr_list_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::internal::ArenaStringPtr task_id_;
  ::google::protobuf::uint32 result_code_;
  ::google::protobuf::uint32 from_user_id_;
  ::google::protobuf::uint32 to_user_id_;
  int trans_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2efile_2eproto::TableStruct;
  friend void ::protobuf_youliao_2efile_2eproto::InitDefaultsSendFileResponeImpl();
};
// -------------------------------------------------------------------

class FileNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.file.FileNotify) */ {
 public:
  FileNotify();
  virtual ~FileNotify();

  FileNotify(const FileNotify& from);

  inline FileNotify& operator=(const FileNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileNotify(FileNotify&& from) noexcept
    : FileNotify() {
    *this = ::std::move(from);
  }

  inline FileNotify& operator=(FileNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileNotify* internal_default_instance() {
    return reinterpret_cast<const FileNotify*>(
               &_FileNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(FileNotify* other);
  friend void swap(FileNotify& a, FileNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileNotify* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<FileNotify>(NULL);
  }

  FileNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<FileNotify>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileNotify& from);
  void MergeFrom(const FileNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .youliao.pdu.base.IpAddress ip_addr_list = 6;
  int ip_addr_list_size() const;
  void clear_ip_addr_list();
  static const int kIpAddrListFieldNumber = 6;
  ::youliao::pdu::base::IpAddress* mutable_ip_addr_list(int index);
  ::google::protobuf::RepeatedPtrField< ::youliao::pdu::base::IpAddress >*
      mutable_ip_addr_list();
  const ::youliao::pdu::base::IpAddress& ip_addr_list(int index) const;
  ::youliao::pdu::base::IpAddress* add_ip_addr_list();
  const ::google::protobuf::RepeatedPtrField< ::youliao::pdu::base::IpAddress >&
      ip_addr_list() const;

  // string file_name = 3;
  void clear_file_name();
  static const int kFileNameFieldNumber = 3;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // string task_id = 5;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 5;
  const ::std::string& task_id() const;
  void set_task_id(const ::std::string& value);
  #if LANG_CXX11
  void set_task_id(::std::string&& value);
  #endif
  void set_task_id(const char* value);
  void set_task_id(const char* value, size_t size);
  ::std::string* mutable_task_id();
  ::std::string* release_task_id();
  void set_allocated_task_id(::std::string* task_id);

  // uint32 from_user_id = 1;
  void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 1;
  ::google::protobuf::uint32 from_user_id() const;
  void set_from_user_id(::google::protobuf::uint32 value);

  // uint32 to_user_id = 2;
  void clear_to_user_id();
  static const int kToUserIdFieldNumber = 2;
  ::google::protobuf::uint32 to_user_id() const;
  void set_to_user_id(::google::protobuf::uint32 value);

  // uint32 file_size = 4;
  void clear_file_size();
  static const int kFileSizeFieldNumber = 4;
  ::google::protobuf::uint32 file_size() const;
  void set_file_size(::google::protobuf::uint32 value);

  // .youliao.pdu.base.TransferFileType trans_mode = 7;
  void clear_trans_mode();
  static const int kTransModeFieldNumber = 7;
  ::youliao::pdu::base::TransferFileType trans_mode() const;
  void set_trans_mode(::youliao::pdu::base::TransferFileType value);

  // uint32 offline_ready = 8;
  void clear_offline_ready();
  static const int kOfflineReadyFieldNumber = 8;
  ::google::protobuf::uint32 offline_ready() const;
  void set_offline_ready(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.file.FileNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::youliao::pdu::base::IpAddress > ip_addr_list_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::internal::ArenaStringPtr task_id_;
  ::google::protobuf::uint32 from_user_id_;
  ::google::protobuf::uint32 to_user_id_;
  ::google::protobuf::uint32 file_size_;
  int trans_mode_;
  ::google::protobuf::uint32 offline_ready_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2efile_2eproto::TableStruct;
  friend void ::protobuf_youliao_2efile_2eproto::InitDefaultsFileNotifyImpl();
};
// -------------------------------------------------------------------

class GetFileBlockRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.file.GetFileBlockRequest) */ {
 public:
  GetFileBlockRequest();
  virtual ~GetFileBlockRequest();

  GetFileBlockRequest(const GetFileBlockRequest& from);

  inline GetFileBlockRequest& operator=(const GetFileBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFileBlockRequest(GetFileBlockRequest&& from) noexcept
    : GetFileBlockRequest() {
    *this = ::std::move(from);
  }

  inline GetFileBlockRequest& operator=(GetFileBlockRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFileBlockRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFileBlockRequest* internal_default_instance() {
    return reinterpret_cast<const GetFileBlockRequest*>(
               &_GetFileBlockRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GetFileBlockRequest* other);
  friend void swap(GetFileBlockRequest& a, GetFileBlockRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFileBlockRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetFileBlockRequest>(NULL);
  }

  GetFileBlockRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetFileBlockRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFileBlockRequest& from);
  void MergeFrom(const GetFileBlockRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFileBlockRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string task_id = 1;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  const ::std::string& task_id() const;
  void set_task_id(const ::std::string& value);
  #if LANG_CXX11
  void set_task_id(::std::string&& value);
  #endif
  void set_task_id(const char* value);
  void set_task_id(const char* value, size_t size);
  ::std::string* mutable_task_id();
  ::std::string* release_task_id();
  void set_allocated_task_id(::std::string* task_id);

  // uint32 user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // .youliao.pdu.base.TransferFileType trans_mode = 3;
  void clear_trans_mode();
  static const int kTransModeFieldNumber = 3;
  ::youliao::pdu::base::TransferFileType trans_mode() const;
  void set_trans_mode(::youliao::pdu::base::TransferFileType value);

  // uint32 offest = 4;
  void clear_offest();
  static const int kOffestFieldNumber = 4;
  ::google::protobuf::uint32 offest() const;
  void set_offest(::google::protobuf::uint32 value);

  // uint32 data_size = 5;
  void clear_data_size();
  static const int kDataSizeFieldNumber = 5;
  ::google::protobuf::uint32 data_size() const;
  void set_data_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.file.GetFileBlockRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr task_id_;
  ::google::protobuf::uint32 user_id_;
  int trans_mode_;
  ::google::protobuf::uint32 offest_;
  ::google::protobuf::uint32 data_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2efile_2eproto::TableStruct;
  friend void ::protobuf_youliao_2efile_2eproto::InitDefaultsGetFileBlockRequestImpl();
};
// -------------------------------------------------------------------

class GetFileBlockRespone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.file.GetFileBlockRespone) */ {
 public:
  GetFileBlockRespone();
  virtual ~GetFileBlockRespone();

  GetFileBlockRespone(const GetFileBlockRespone& from);

  inline GetFileBlockRespone& operator=(const GetFileBlockRespone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFileBlockRespone(GetFileBlockRespone&& from) noexcept
    : GetFileBlockRespone() {
    *this = ::std::move(from);
  }

  inline GetFileBlockRespone& operator=(GetFileBlockRespone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFileBlockRespone& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFileBlockRespone* internal_default_instance() {
    return reinterpret_cast<const GetFileBlockRespone*>(
               &_GetFileBlockRespone_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GetFileBlockRespone* other);
  friend void swap(GetFileBlockRespone& a, GetFileBlockRespone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFileBlockRespone* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetFileBlockRespone>(NULL);
  }

  GetFileBlockRespone* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetFileBlockRespone>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFileBlockRespone& from);
  void MergeFrom(const GetFileBlockRespone& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFileBlockRespone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string task_id = 2;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  const ::std::string& task_id() const;
  void set_task_id(const ::std::string& value);
  #if LANG_CXX11
  void set_task_id(::std::string&& value);
  #endif
  void set_task_id(const char* value);
  void set_task_id(const char* value, size_t size);
  ::std::string* mutable_task_id();
  ::std::string* release_task_id();
  void set_allocated_task_id(::std::string* task_id);

  // bytes file_data = 5;
  void clear_file_data();
  static const int kFileDataFieldNumber = 5;
  const ::std::string& file_data() const;
  void set_file_data(const ::std::string& value);
  #if LANG_CXX11
  void set_file_data(::std::string&& value);
  #endif
  void set_file_data(const char* value);
  void set_file_data(const void* value, size_t size);
  ::std::string* mutable_file_data();
  ::std::string* release_file_data();
  void set_allocated_file_data(::std::string* file_data);

  // uint32 result_code = 1;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::uint32 result_code() const;
  void set_result_code(::google::protobuf::uint32 value);

  // uint32 user_id = 3;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // uint32 offest = 4;
  void clear_offest();
  static const int kOffestFieldNumber = 4;
  ::google::protobuf::uint32 offest() const;
  void set_offest(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.file.GetFileBlockRespone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr task_id_;
  ::google::protobuf::internal::ArenaStringPtr file_data_;
  ::google::protobuf::uint32 result_code_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 offest_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2efile_2eproto::TableStruct;
  friend void ::protobuf_youliao_2efile_2eproto::InitDefaultsGetFileBlockResponeImpl();
};
// -------------------------------------------------------------------

class ClientFileState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.file.ClientFileState) */ {
 public:
  ClientFileState();
  virtual ~ClientFileState();

  ClientFileState(const ClientFileState& from);

  inline ClientFileState& operator=(const ClientFileState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientFileState(ClientFileState&& from) noexcept
    : ClientFileState() {
    *this = ::std::move(from);
  }

  inline ClientFileState& operator=(ClientFileState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientFileState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientFileState* internal_default_instance() {
    return reinterpret_cast<const ClientFileState*>(
               &_ClientFileState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ClientFileState* other);
  friend void swap(ClientFileState& a, ClientFileState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientFileState* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ClientFileState>(NULL);
  }

  ClientFileState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ClientFileState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientFileState& from);
  void MergeFrom(const ClientFileState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientFileState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string task_id = 2;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  const ::std::string& task_id() const;
  void set_task_id(const ::std::string& value);
  #if LANG_CXX11
  void set_task_id(::std::string&& value);
  #endif
  void set_task_id(const char* value);
  void set_task_id(const char* value, size_t size);
  ::std::string* mutable_task_id();
  ::std::string* release_task_id();
  void set_allocated_task_id(::std::string* task_id);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // .youliao.pdu.base.ClientFileState state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::youliao::pdu::base::ClientFileState state() const;
  void set_state(::youliao::pdu::base::ClientFileState value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.file.ClientFileState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr task_id_;
  ::google::protobuf::uint32 user_id_;
  int state_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2efile_2eproto::TableStruct;
  friend void ::protobuf_youliao_2efile_2eproto::InitDefaultsClientFileStateImpl();
};
// -------------------------------------------------------------------

class LoginFileServerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.file.LoginFileServerRequest) */ {
 public:
  LoginFileServerRequest();
  virtual ~LoginFileServerRequest();

  LoginFileServerRequest(const LoginFileServerRequest& from);

  inline LoginFileServerRequest& operator=(const LoginFileServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginFileServerRequest(LoginFileServerRequest&& from) noexcept
    : LoginFileServerRequest() {
    *this = ::std::move(from);
  }

  inline LoginFileServerRequest& operator=(LoginFileServerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginFileServerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginFileServerRequest* internal_default_instance() {
    return reinterpret_cast<const LoginFileServerRequest*>(
               &_LoginFileServerRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(LoginFileServerRequest* other);
  friend void swap(LoginFileServerRequest& a, LoginFileServerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginFileServerRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoginFileServerRequest>(NULL);
  }

  LoginFileServerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoginFileServerRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginFileServerRequest& from);
  void MergeFrom(const LoginFileServerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginFileServerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string task_id = 2;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  const ::std::string& task_id() const;
  void set_task_id(const ::std::string& value);
  #if LANG_CXX11
  void set_task_id(::std::string&& value);
  #endif
  void set_task_id(const char* value);
  void set_task_id(const char* value, size_t size);
  ::std::string* mutable_task_id();
  ::std::string* release_task_id();
  void set_allocated_task_id(::std::string* task_id);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // .youliao.pdu.base.ClientFileRole client_role = 3;
  void clear_client_role();
  static const int kClientRoleFieldNumber = 3;
  ::youliao::pdu::base::ClientFileRole client_role() const;
  void set_client_role(::youliao::pdu::base::ClientFileRole value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.file.LoginFileServerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr task_id_;
  ::google::protobuf::uint32 user_id_;
  int client_role_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2efile_2eproto::TableStruct;
  friend void ::protobuf_youliao_2efile_2eproto::InitDefaultsLoginFileServerRequestImpl();
};
// -------------------------------------------------------------------

class LoginFileServerRespone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.file.LoginFileServerRespone) */ {
 public:
  LoginFileServerRespone();
  virtual ~LoginFileServerRespone();

  LoginFileServerRespone(const LoginFileServerRespone& from);

  inline LoginFileServerRespone& operator=(const LoginFileServerRespone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginFileServerRespone(LoginFileServerRespone&& from) noexcept
    : LoginFileServerRespone() {
    *this = ::std::move(from);
  }

  inline LoginFileServerRespone& operator=(LoginFileServerRespone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginFileServerRespone& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginFileServerRespone* internal_default_instance() {
    return reinterpret_cast<const LoginFileServerRespone*>(
               &_LoginFileServerRespone_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(LoginFileServerRespone* other);
  friend void swap(LoginFileServerRespone& a, LoginFileServerRespone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginFileServerRespone* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoginFileServerRespone>(NULL);
  }

  LoginFileServerRespone* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoginFileServerRespone>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginFileServerRespone& from);
  void MergeFrom(const LoginFileServerRespone& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginFileServerRespone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string task_id = 2;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  const ::std::string& task_id() const;
  void set_task_id(const ::std::string& value);
  #if LANG_CXX11
  void set_task_id(::std::string&& value);
  #endif
  void set_task_id(const char* value);
  void set_task_id(const char* value, size_t size);
  ::std::string* mutable_task_id();
  ::std::string* release_task_id();
  void set_allocated_task_id(::std::string* task_id);

  // uint32 result_code = 1;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::uint32 result_code() const;
  void set_result_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.file.LoginFileServerRespone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr task_id_;
  ::google::protobuf::uint32 result_code_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2efile_2eproto::TableStruct;
  friend void ::protobuf_youliao_2efile_2eproto::InitDefaultsLoginFileServerResponeImpl();
};
// -------------------------------------------------------------------

class OfflineFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.file.OfflineFile) */ {
 public:
  OfflineFile();
  virtual ~OfflineFile();

  OfflineFile(const OfflineFile& from);

  inline OfflineFile& operator=(const OfflineFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineFile(OfflineFile&& from) noexcept
    : OfflineFile() {
    *this = ::std::move(from);
  }

  inline OfflineFile& operator=(OfflineFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OfflineFile* internal_default_instance() {
    return reinterpret_cast<const OfflineFile*>(
               &_OfflineFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(OfflineFile* other);
  friend void swap(OfflineFile& a, OfflineFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineFile* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<OfflineFile>(NULL);
  }

  OfflineFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<OfflineFile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineFile& from);
  void MergeFrom(const OfflineFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string task_id = 2;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  const ::std::string& task_id() const;
  void set_task_id(const ::std::string& value);
  #if LANG_CXX11
  void set_task_id(::std::string&& value);
  #endif
  void set_task_id(const char* value);
  void set_task_id(const char* value, size_t size);
  ::std::string* mutable_task_id();
  ::std::string* release_task_id();
  void set_allocated_task_id(::std::string* task_id);

  // uint32 sender_id = 1;
  void clear_sender_id();
  static const int kSenderIdFieldNumber = 1;
  ::google::protobuf::uint32 sender_id() const;
  void set_sender_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.file.OfflineFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr task_id_;
  ::google::protobuf::uint32 sender_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2efile_2eproto::TableStruct;
  friend void ::protobuf_youliao_2efile_2eproto::InitDefaultsOfflineFileImpl();
};
// -------------------------------------------------------------------

class GetOfflineFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.file.GetOfflineFileRequest) */ {
 public:
  GetOfflineFileRequest();
  virtual ~GetOfflineFileRequest();

  GetOfflineFileRequest(const GetOfflineFileRequest& from);

  inline GetOfflineFileRequest& operator=(const GetOfflineFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetOfflineFileRequest(GetOfflineFileRequest&& from) noexcept
    : GetOfflineFileRequest() {
    *this = ::std::move(from);
  }

  inline GetOfflineFileRequest& operator=(GetOfflineFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOfflineFileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetOfflineFileRequest* internal_default_instance() {
    return reinterpret_cast<const GetOfflineFileRequest*>(
               &_GetOfflineFileRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetOfflineFileRequest* other);
  friend void swap(GetOfflineFileRequest& a, GetOfflineFileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetOfflineFileRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetOfflineFileRequest>(NULL);
  }

  GetOfflineFileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetOfflineFileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOfflineFileRequest& from);
  void MergeFrom(const GetOfflineFileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOfflineFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.file.GetOfflineFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 user_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2efile_2eproto::TableStruct;
  friend void ::protobuf_youliao_2efile_2eproto::InitDefaultsGetOfflineFileRequestImpl();
};
// -------------------------------------------------------------------

class GetOfflineFileRespone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.file.GetOfflineFileRespone) */ {
 public:
  GetOfflineFileRespone();
  virtual ~GetOfflineFileRespone();

  GetOfflineFileRespone(const GetOfflineFileRespone& from);

  inline GetOfflineFileRespone& operator=(const GetOfflineFileRespone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetOfflineFileRespone(GetOfflineFileRespone&& from) noexcept
    : GetOfflineFileRespone() {
    *this = ::std::move(from);
  }

  inline GetOfflineFileRespone& operator=(GetOfflineFileRespone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOfflineFileRespone& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetOfflineFileRespone* internal_default_instance() {
    return reinterpret_cast<const GetOfflineFileRespone*>(
               &_GetOfflineFileRespone_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GetOfflineFileRespone* other);
  friend void swap(GetOfflineFileRespone& a, GetOfflineFileRespone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetOfflineFileRespone* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetOfflineFileRespone>(NULL);
  }

  GetOfflineFileRespone* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<GetOfflineFileRespone>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOfflineFileRespone& from);
  void MergeFrom(const GetOfflineFileRespone& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOfflineFileRespone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .youliao.pdu.file.OfflineFile offline_files = 2;
  int offline_files_size() const;
  void clear_offline_files();
  static const int kOfflineFilesFieldNumber = 2;
  ::youliao::pdu::file::OfflineFile* mutable_offline_files(int index);
  ::google::protobuf::RepeatedPtrField< ::youliao::pdu::file::OfflineFile >*
      mutable_offline_files();
  const ::youliao::pdu::file::OfflineFile& offline_files(int index) const;
  ::youliao::pdu::file::OfflineFile* add_offline_files();
  const ::google::protobuf::RepeatedPtrField< ::youliao::pdu::file::OfflineFile >&
      offline_files() const;

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.file.GetOfflineFileRespone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::youliao::pdu::file::OfflineFile > offline_files_;
  ::google::protobuf::uint32 user_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2efile_2eproto::TableStruct;
  friend void ::protobuf_youliao_2efile_2eproto::InitDefaultsGetOfflineFileResponeImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SendFileRequest

// uint32 from_user_id = 1;
inline void SendFileRequest::clear_from_user_id() {
  from_user_id_ = 0u;
}
inline ::google::protobuf::uint32 SendFileRequest::from_user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.SendFileRequest.from_user_id)
  return from_user_id_;
}
inline void SendFileRequest::set_from_user_id(::google::protobuf::uint32 value) {
  
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.SendFileRequest.from_user_id)
}

// uint32 to_user_id = 2;
inline void SendFileRequest::clear_to_user_id() {
  to_user_id_ = 0u;
}
inline ::google::protobuf::uint32 SendFileRequest::to_user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.SendFileRequest.to_user_id)
  return to_user_id_;
}
inline void SendFileRequest::set_to_user_id(::google::protobuf::uint32 value) {
  
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.SendFileRequest.to_user_id)
}

// string file_name = 3;
inline void SendFileRequest::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendFileRequest::file_name() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.SendFileRequest.file_name)
  return file_name_.GetNoArena();
}
inline void SendFileRequest::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.file.SendFileRequest.file_name)
}
#if LANG_CXX11
inline void SendFileRequest::set_file_name(::std::string&& value) {
  
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.file.SendFileRequest.file_name)
}
#endif
inline void SendFileRequest::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.file.SendFileRequest.file_name)
}
inline void SendFileRequest::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.file.SendFileRequest.file_name)
}
inline ::std::string* SendFileRequest::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.SendFileRequest.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendFileRequest::release_file_name() {
  // @@protoc_insertion_point(field_release:youliao.pdu.file.SendFileRequest.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendFileRequest::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.file.SendFileRequest.file_name)
}

// uint32 file_size = 4;
inline void SendFileRequest::clear_file_size() {
  file_size_ = 0u;
}
inline ::google::protobuf::uint32 SendFileRequest::file_size() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.SendFileRequest.file_size)
  return file_size_;
}
inline void SendFileRequest::set_file_size(::google::protobuf::uint32 value) {
  
  file_size_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.SendFileRequest.file_size)
}

// .youliao.pdu.base.TransferFileType trans_mode = 5;
inline void SendFileRequest::clear_trans_mode() {
  trans_mode_ = 0;
}
inline ::youliao::pdu::base::TransferFileType SendFileRequest::trans_mode() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.SendFileRequest.trans_mode)
  return static_cast< ::youliao::pdu::base::TransferFileType >(trans_mode_);
}
inline void SendFileRequest::set_trans_mode(::youliao::pdu::base::TransferFileType value) {
  
  trans_mode_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.SendFileRequest.trans_mode)
}

// -------------------------------------------------------------------

// SendFileRespone

// uint32 result_code = 1;
inline void SendFileRespone::clear_result_code() {
  result_code_ = 0u;
}
inline ::google::protobuf::uint32 SendFileRespone::result_code() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.SendFileRespone.result_code)
  return result_code_;
}
inline void SendFileRespone::set_result_code(::google::protobuf::uint32 value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.SendFileRespone.result_code)
}

// uint32 from_user_id = 2;
inline void SendFileRespone::clear_from_user_id() {
  from_user_id_ = 0u;
}
inline ::google::protobuf::uint32 SendFileRespone::from_user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.SendFileRespone.from_user_id)
  return from_user_id_;
}
inline void SendFileRespone::set_from_user_id(::google::protobuf::uint32 value) {
  
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.SendFileRespone.from_user_id)
}

// uint32 to_user_id = 3;
inline void SendFileRespone::clear_to_user_id() {
  to_user_id_ = 0u;
}
inline ::google::protobuf::uint32 SendFileRespone::to_user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.SendFileRespone.to_user_id)
  return to_user_id_;
}
inline void SendFileRespone::set_to_user_id(::google::protobuf::uint32 value) {
  
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.SendFileRespone.to_user_id)
}

// string file_name = 4;
inline void SendFileRespone::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendFileRespone::file_name() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.SendFileRespone.file_name)
  return file_name_.GetNoArena();
}
inline void SendFileRespone::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.file.SendFileRespone.file_name)
}
#if LANG_CXX11
inline void SendFileRespone::set_file_name(::std::string&& value) {
  
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.file.SendFileRespone.file_name)
}
#endif
inline void SendFileRespone::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.file.SendFileRespone.file_name)
}
inline void SendFileRespone::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.file.SendFileRespone.file_name)
}
inline ::std::string* SendFileRespone::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.SendFileRespone.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendFileRespone::release_file_name() {
  // @@protoc_insertion_point(field_release:youliao.pdu.file.SendFileRespone.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendFileRespone::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.file.SendFileRespone.file_name)
}

// string task_id = 5;
inline void SendFileRespone::clear_task_id() {
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendFileRespone::task_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.SendFileRespone.task_id)
  return task_id_.GetNoArena();
}
inline void SendFileRespone::set_task_id(const ::std::string& value) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.file.SendFileRespone.task_id)
}
#if LANG_CXX11
inline void SendFileRespone::set_task_id(::std::string&& value) {
  
  task_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.file.SendFileRespone.task_id)
}
#endif
inline void SendFileRespone::set_task_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.file.SendFileRespone.task_id)
}
inline void SendFileRespone::set_task_id(const char* value, size_t size) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.file.SendFileRespone.task_id)
}
inline ::std::string* SendFileRespone::mutable_task_id() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.SendFileRespone.task_id)
  return task_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendFileRespone::release_task_id() {
  // @@protoc_insertion_point(field_release:youliao.pdu.file.SendFileRespone.task_id)
  
  return task_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendFileRespone::set_allocated_task_id(::std::string* task_id) {
  if (task_id != NULL) {
    
  } else {
    
  }
  task_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_id);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.file.SendFileRespone.task_id)
}

// repeated .youliao.pdu.base.IpAddress ip_addr_list = 6;
inline int SendFileRespone::ip_addr_list_size() const {
  return ip_addr_list_.size();
}
inline ::youliao::pdu::base::IpAddress* SendFileRespone::mutable_ip_addr_list(int index) {
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.SendFileRespone.ip_addr_list)
  return ip_addr_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::youliao::pdu::base::IpAddress >*
SendFileRespone::mutable_ip_addr_list() {
  // @@protoc_insertion_point(field_mutable_list:youliao.pdu.file.SendFileRespone.ip_addr_list)
  return &ip_addr_list_;
}
inline const ::youliao::pdu::base::IpAddress& SendFileRespone::ip_addr_list(int index) const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.SendFileRespone.ip_addr_list)
  return ip_addr_list_.Get(index);
}
inline ::youliao::pdu::base::IpAddress* SendFileRespone::add_ip_addr_list() {
  // @@protoc_insertion_point(field_add:youliao.pdu.file.SendFileRespone.ip_addr_list)
  return ip_addr_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::youliao::pdu::base::IpAddress >&
SendFileRespone::ip_addr_list() const {
  // @@protoc_insertion_point(field_list:youliao.pdu.file.SendFileRespone.ip_addr_list)
  return ip_addr_list_;
}

// .youliao.pdu.base.TransferFileType trans_mode = 7;
inline void SendFileRespone::clear_trans_mode() {
  trans_mode_ = 0;
}
inline ::youliao::pdu::base::TransferFileType SendFileRespone::trans_mode() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.SendFileRespone.trans_mode)
  return static_cast< ::youliao::pdu::base::TransferFileType >(trans_mode_);
}
inline void SendFileRespone::set_trans_mode(::youliao::pdu::base::TransferFileType value) {
  
  trans_mode_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.SendFileRespone.trans_mode)
}

// -------------------------------------------------------------------

// FileNotify

// uint32 from_user_id = 1;
inline void FileNotify::clear_from_user_id() {
  from_user_id_ = 0u;
}
inline ::google::protobuf::uint32 FileNotify::from_user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.FileNotify.from_user_id)
  return from_user_id_;
}
inline void FileNotify::set_from_user_id(::google::protobuf::uint32 value) {
  
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.FileNotify.from_user_id)
}

// uint32 to_user_id = 2;
inline void FileNotify::clear_to_user_id() {
  to_user_id_ = 0u;
}
inline ::google::protobuf::uint32 FileNotify::to_user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.FileNotify.to_user_id)
  return to_user_id_;
}
inline void FileNotify::set_to_user_id(::google::protobuf::uint32 value) {
  
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.FileNotify.to_user_id)
}

// string file_name = 3;
inline void FileNotify::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileNotify::file_name() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.FileNotify.file_name)
  return file_name_.GetNoArena();
}
inline void FileNotify::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.file.FileNotify.file_name)
}
#if LANG_CXX11
inline void FileNotify::set_file_name(::std::string&& value) {
  
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.file.FileNotify.file_name)
}
#endif
inline void FileNotify::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.file.FileNotify.file_name)
}
inline void FileNotify::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.file.FileNotify.file_name)
}
inline ::std::string* FileNotify::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.FileNotify.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileNotify::release_file_name() {
  // @@protoc_insertion_point(field_release:youliao.pdu.file.FileNotify.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileNotify::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.file.FileNotify.file_name)
}

// uint32 file_size = 4;
inline void FileNotify::clear_file_size() {
  file_size_ = 0u;
}
inline ::google::protobuf::uint32 FileNotify::file_size() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.FileNotify.file_size)
  return file_size_;
}
inline void FileNotify::set_file_size(::google::protobuf::uint32 value) {
  
  file_size_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.FileNotify.file_size)
}

// string task_id = 5;
inline void FileNotify::clear_task_id() {
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileNotify::task_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.FileNotify.task_id)
  return task_id_.GetNoArena();
}
inline void FileNotify::set_task_id(const ::std::string& value) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.file.FileNotify.task_id)
}
#if LANG_CXX11
inline void FileNotify::set_task_id(::std::string&& value) {
  
  task_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.file.FileNotify.task_id)
}
#endif
inline void FileNotify::set_task_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.file.FileNotify.task_id)
}
inline void FileNotify::set_task_id(const char* value, size_t size) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.file.FileNotify.task_id)
}
inline ::std::string* FileNotify::mutable_task_id() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.FileNotify.task_id)
  return task_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileNotify::release_task_id() {
  // @@protoc_insertion_point(field_release:youliao.pdu.file.FileNotify.task_id)
  
  return task_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileNotify::set_allocated_task_id(::std::string* task_id) {
  if (task_id != NULL) {
    
  } else {
    
  }
  task_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_id);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.file.FileNotify.task_id)
}

// repeated .youliao.pdu.base.IpAddress ip_addr_list = 6;
inline int FileNotify::ip_addr_list_size() const {
  return ip_addr_list_.size();
}
inline ::youliao::pdu::base::IpAddress* FileNotify::mutable_ip_addr_list(int index) {
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.FileNotify.ip_addr_list)
  return ip_addr_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::youliao::pdu::base::IpAddress >*
FileNotify::mutable_ip_addr_list() {
  // @@protoc_insertion_point(field_mutable_list:youliao.pdu.file.FileNotify.ip_addr_list)
  return &ip_addr_list_;
}
inline const ::youliao::pdu::base::IpAddress& FileNotify::ip_addr_list(int index) const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.FileNotify.ip_addr_list)
  return ip_addr_list_.Get(index);
}
inline ::youliao::pdu::base::IpAddress* FileNotify::add_ip_addr_list() {
  // @@protoc_insertion_point(field_add:youliao.pdu.file.FileNotify.ip_addr_list)
  return ip_addr_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::youliao::pdu::base::IpAddress >&
FileNotify::ip_addr_list() const {
  // @@protoc_insertion_point(field_list:youliao.pdu.file.FileNotify.ip_addr_list)
  return ip_addr_list_;
}

// .youliao.pdu.base.TransferFileType trans_mode = 7;
inline void FileNotify::clear_trans_mode() {
  trans_mode_ = 0;
}
inline ::youliao::pdu::base::TransferFileType FileNotify::trans_mode() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.FileNotify.trans_mode)
  return static_cast< ::youliao::pdu::base::TransferFileType >(trans_mode_);
}
inline void FileNotify::set_trans_mode(::youliao::pdu::base::TransferFileType value) {
  
  trans_mode_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.FileNotify.trans_mode)
}

// uint32 offline_ready = 8;
inline void FileNotify::clear_offline_ready() {
  offline_ready_ = 0u;
}
inline ::google::protobuf::uint32 FileNotify::offline_ready() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.FileNotify.offline_ready)
  return offline_ready_;
}
inline void FileNotify::set_offline_ready(::google::protobuf::uint32 value) {
  
  offline_ready_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.FileNotify.offline_ready)
}

// -------------------------------------------------------------------

// GetFileBlockRequest

// string task_id = 1;
inline void GetFileBlockRequest::clear_task_id() {
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFileBlockRequest::task_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetFileBlockRequest.task_id)
  return task_id_.GetNoArena();
}
inline void GetFileBlockRequest::set_task_id(const ::std::string& value) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.file.GetFileBlockRequest.task_id)
}
#if LANG_CXX11
inline void GetFileBlockRequest::set_task_id(::std::string&& value) {
  
  task_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.file.GetFileBlockRequest.task_id)
}
#endif
inline void GetFileBlockRequest::set_task_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.file.GetFileBlockRequest.task_id)
}
inline void GetFileBlockRequest::set_task_id(const char* value, size_t size) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.file.GetFileBlockRequest.task_id)
}
inline ::std::string* GetFileBlockRequest::mutable_task_id() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.GetFileBlockRequest.task_id)
  return task_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFileBlockRequest::release_task_id() {
  // @@protoc_insertion_point(field_release:youliao.pdu.file.GetFileBlockRequest.task_id)
  
  return task_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileBlockRequest::set_allocated_task_id(::std::string* task_id) {
  if (task_id != NULL) {
    
  } else {
    
  }
  task_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_id);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.file.GetFileBlockRequest.task_id)
}

// uint32 user_id = 2;
inline void GetFileBlockRequest::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 GetFileBlockRequest::user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetFileBlockRequest.user_id)
  return user_id_;
}
inline void GetFileBlockRequest::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.GetFileBlockRequest.user_id)
}

// .youliao.pdu.base.TransferFileType trans_mode = 3;
inline void GetFileBlockRequest::clear_trans_mode() {
  trans_mode_ = 0;
}
inline ::youliao::pdu::base::TransferFileType GetFileBlockRequest::trans_mode() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetFileBlockRequest.trans_mode)
  return static_cast< ::youliao::pdu::base::TransferFileType >(trans_mode_);
}
inline void GetFileBlockRequest::set_trans_mode(::youliao::pdu::base::TransferFileType value) {
  
  trans_mode_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.GetFileBlockRequest.trans_mode)
}

// uint32 offest = 4;
inline void GetFileBlockRequest::clear_offest() {
  offest_ = 0u;
}
inline ::google::protobuf::uint32 GetFileBlockRequest::offest() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetFileBlockRequest.offest)
  return offest_;
}
inline void GetFileBlockRequest::set_offest(::google::protobuf::uint32 value) {
  
  offest_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.GetFileBlockRequest.offest)
}

// uint32 data_size = 5;
inline void GetFileBlockRequest::clear_data_size() {
  data_size_ = 0u;
}
inline ::google::protobuf::uint32 GetFileBlockRequest::data_size() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetFileBlockRequest.data_size)
  return data_size_;
}
inline void GetFileBlockRequest::set_data_size(::google::protobuf::uint32 value) {
  
  data_size_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.GetFileBlockRequest.data_size)
}

// -------------------------------------------------------------------

// GetFileBlockRespone

// uint32 result_code = 1;
inline void GetFileBlockRespone::clear_result_code() {
  result_code_ = 0u;
}
inline ::google::protobuf::uint32 GetFileBlockRespone::result_code() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetFileBlockRespone.result_code)
  return result_code_;
}
inline void GetFileBlockRespone::set_result_code(::google::protobuf::uint32 value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.GetFileBlockRespone.result_code)
}

// string task_id = 2;
inline void GetFileBlockRespone::clear_task_id() {
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFileBlockRespone::task_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetFileBlockRespone.task_id)
  return task_id_.GetNoArena();
}
inline void GetFileBlockRespone::set_task_id(const ::std::string& value) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.file.GetFileBlockRespone.task_id)
}
#if LANG_CXX11
inline void GetFileBlockRespone::set_task_id(::std::string&& value) {
  
  task_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.file.GetFileBlockRespone.task_id)
}
#endif
inline void GetFileBlockRespone::set_task_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.file.GetFileBlockRespone.task_id)
}
inline void GetFileBlockRespone::set_task_id(const char* value, size_t size) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.file.GetFileBlockRespone.task_id)
}
inline ::std::string* GetFileBlockRespone::mutable_task_id() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.GetFileBlockRespone.task_id)
  return task_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFileBlockRespone::release_task_id() {
  // @@protoc_insertion_point(field_release:youliao.pdu.file.GetFileBlockRespone.task_id)
  
  return task_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileBlockRespone::set_allocated_task_id(::std::string* task_id) {
  if (task_id != NULL) {
    
  } else {
    
  }
  task_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_id);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.file.GetFileBlockRespone.task_id)
}

// uint32 user_id = 3;
inline void GetFileBlockRespone::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 GetFileBlockRespone::user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetFileBlockRespone.user_id)
  return user_id_;
}
inline void GetFileBlockRespone::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.GetFileBlockRespone.user_id)
}

// uint32 offest = 4;
inline void GetFileBlockRespone::clear_offest() {
  offest_ = 0u;
}
inline ::google::protobuf::uint32 GetFileBlockRespone::offest() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetFileBlockRespone.offest)
  return offest_;
}
inline void GetFileBlockRespone::set_offest(::google::protobuf::uint32 value) {
  
  offest_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.GetFileBlockRespone.offest)
}

// bytes file_data = 5;
inline void GetFileBlockRespone::clear_file_data() {
  file_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetFileBlockRespone::file_data() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetFileBlockRespone.file_data)
  return file_data_.GetNoArena();
}
inline void GetFileBlockRespone::set_file_data(const ::std::string& value) {
  
  file_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.file.GetFileBlockRespone.file_data)
}
#if LANG_CXX11
inline void GetFileBlockRespone::set_file_data(::std::string&& value) {
  
  file_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.file.GetFileBlockRespone.file_data)
}
#endif
inline void GetFileBlockRespone::set_file_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.file.GetFileBlockRespone.file_data)
}
inline void GetFileBlockRespone::set_file_data(const void* value, size_t size) {
  
  file_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.file.GetFileBlockRespone.file_data)
}
inline ::std::string* GetFileBlockRespone::mutable_file_data() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.GetFileBlockRespone.file_data)
  return file_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFileBlockRespone::release_file_data() {
  // @@protoc_insertion_point(field_release:youliao.pdu.file.GetFileBlockRespone.file_data)
  
  return file_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileBlockRespone::set_allocated_file_data(::std::string* file_data) {
  if (file_data != NULL) {
    
  } else {
    
  }
  file_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_data);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.file.GetFileBlockRespone.file_data)
}

// -------------------------------------------------------------------

// ClientFileState

// uint32 user_id = 1;
inline void ClientFileState::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientFileState::user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.ClientFileState.user_id)
  return user_id_;
}
inline void ClientFileState::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.ClientFileState.user_id)
}

// string task_id = 2;
inline void ClientFileState::clear_task_id() {
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientFileState::task_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.ClientFileState.task_id)
  return task_id_.GetNoArena();
}
inline void ClientFileState::set_task_id(const ::std::string& value) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.file.ClientFileState.task_id)
}
#if LANG_CXX11
inline void ClientFileState::set_task_id(::std::string&& value) {
  
  task_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.file.ClientFileState.task_id)
}
#endif
inline void ClientFileState::set_task_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.file.ClientFileState.task_id)
}
inline void ClientFileState::set_task_id(const char* value, size_t size) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.file.ClientFileState.task_id)
}
inline ::std::string* ClientFileState::mutable_task_id() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.ClientFileState.task_id)
  return task_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientFileState::release_task_id() {
  // @@protoc_insertion_point(field_release:youliao.pdu.file.ClientFileState.task_id)
  
  return task_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientFileState::set_allocated_task_id(::std::string* task_id) {
  if (task_id != NULL) {
    
  } else {
    
  }
  task_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_id);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.file.ClientFileState.task_id)
}

// .youliao.pdu.base.ClientFileState state = 3;
inline void ClientFileState::clear_state() {
  state_ = 0;
}
inline ::youliao::pdu::base::ClientFileState ClientFileState::state() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.ClientFileState.state)
  return static_cast< ::youliao::pdu::base::ClientFileState >(state_);
}
inline void ClientFileState::set_state(::youliao::pdu::base::ClientFileState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.ClientFileState.state)
}

// -------------------------------------------------------------------

// LoginFileServerRequest

// uint32 user_id = 1;
inline void LoginFileServerRequest::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 LoginFileServerRequest::user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.LoginFileServerRequest.user_id)
  return user_id_;
}
inline void LoginFileServerRequest::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.LoginFileServerRequest.user_id)
}

// string task_id = 2;
inline void LoginFileServerRequest::clear_task_id() {
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginFileServerRequest::task_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.LoginFileServerRequest.task_id)
  return task_id_.GetNoArena();
}
inline void LoginFileServerRequest::set_task_id(const ::std::string& value) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.file.LoginFileServerRequest.task_id)
}
#if LANG_CXX11
inline void LoginFileServerRequest::set_task_id(::std::string&& value) {
  
  task_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.file.LoginFileServerRequest.task_id)
}
#endif
inline void LoginFileServerRequest::set_task_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.file.LoginFileServerRequest.task_id)
}
inline void LoginFileServerRequest::set_task_id(const char* value, size_t size) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.file.LoginFileServerRequest.task_id)
}
inline ::std::string* LoginFileServerRequest::mutable_task_id() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.LoginFileServerRequest.task_id)
  return task_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginFileServerRequest::release_task_id() {
  // @@protoc_insertion_point(field_release:youliao.pdu.file.LoginFileServerRequest.task_id)
  
  return task_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginFileServerRequest::set_allocated_task_id(::std::string* task_id) {
  if (task_id != NULL) {
    
  } else {
    
  }
  task_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_id);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.file.LoginFileServerRequest.task_id)
}

// .youliao.pdu.base.ClientFileRole client_role = 3;
inline void LoginFileServerRequest::clear_client_role() {
  client_role_ = 0;
}
inline ::youliao::pdu::base::ClientFileRole LoginFileServerRequest::client_role() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.LoginFileServerRequest.client_role)
  return static_cast< ::youliao::pdu::base::ClientFileRole >(client_role_);
}
inline void LoginFileServerRequest::set_client_role(::youliao::pdu::base::ClientFileRole value) {
  
  client_role_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.LoginFileServerRequest.client_role)
}

// -------------------------------------------------------------------

// LoginFileServerRespone

// uint32 result_code = 1;
inline void LoginFileServerRespone::clear_result_code() {
  result_code_ = 0u;
}
inline ::google::protobuf::uint32 LoginFileServerRespone::result_code() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.LoginFileServerRespone.result_code)
  return result_code_;
}
inline void LoginFileServerRespone::set_result_code(::google::protobuf::uint32 value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.LoginFileServerRespone.result_code)
}

// string task_id = 2;
inline void LoginFileServerRespone::clear_task_id() {
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginFileServerRespone::task_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.LoginFileServerRespone.task_id)
  return task_id_.GetNoArena();
}
inline void LoginFileServerRespone::set_task_id(const ::std::string& value) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.file.LoginFileServerRespone.task_id)
}
#if LANG_CXX11
inline void LoginFileServerRespone::set_task_id(::std::string&& value) {
  
  task_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.file.LoginFileServerRespone.task_id)
}
#endif
inline void LoginFileServerRespone::set_task_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.file.LoginFileServerRespone.task_id)
}
inline void LoginFileServerRespone::set_task_id(const char* value, size_t size) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.file.LoginFileServerRespone.task_id)
}
inline ::std::string* LoginFileServerRespone::mutable_task_id() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.LoginFileServerRespone.task_id)
  return task_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginFileServerRespone::release_task_id() {
  // @@protoc_insertion_point(field_release:youliao.pdu.file.LoginFileServerRespone.task_id)
  
  return task_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginFileServerRespone::set_allocated_task_id(::std::string* task_id) {
  if (task_id != NULL) {
    
  } else {
    
  }
  task_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_id);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.file.LoginFileServerRespone.task_id)
}

// -------------------------------------------------------------------

// OfflineFile

// uint32 sender_id = 1;
inline void OfflineFile::clear_sender_id() {
  sender_id_ = 0u;
}
inline ::google::protobuf::uint32 OfflineFile::sender_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.OfflineFile.sender_id)
  return sender_id_;
}
inline void OfflineFile::set_sender_id(::google::protobuf::uint32 value) {
  
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.OfflineFile.sender_id)
}

// string task_id = 2;
inline void OfflineFile::clear_task_id() {
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineFile::task_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.OfflineFile.task_id)
  return task_id_.GetNoArena();
}
inline void OfflineFile::set_task_id(const ::std::string& value) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.file.OfflineFile.task_id)
}
#if LANG_CXX11
inline void OfflineFile::set_task_id(::std::string&& value) {
  
  task_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.file.OfflineFile.task_id)
}
#endif
inline void OfflineFile::set_task_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.file.OfflineFile.task_id)
}
inline void OfflineFile::set_task_id(const char* value, size_t size) {
  
  task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.file.OfflineFile.task_id)
}
inline ::std::string* OfflineFile::mutable_task_id() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.OfflineFile.task_id)
  return task_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineFile::release_task_id() {
  // @@protoc_insertion_point(field_release:youliao.pdu.file.OfflineFile.task_id)
  
  return task_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineFile::set_allocated_task_id(::std::string* task_id) {
  if (task_id != NULL) {
    
  } else {
    
  }
  task_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), task_id);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.file.OfflineFile.task_id)
}

// -------------------------------------------------------------------

// GetOfflineFileRequest

// uint32 user_id = 1;
inline void GetOfflineFileRequest::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 GetOfflineFileRequest::user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetOfflineFileRequest.user_id)
  return user_id_;
}
inline void GetOfflineFileRequest::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.GetOfflineFileRequest.user_id)
}

// -------------------------------------------------------------------

// GetOfflineFileRespone

// uint32 user_id = 1;
inline void GetOfflineFileRespone::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 GetOfflineFileRespone::user_id() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetOfflineFileRespone.user_id)
  return user_id_;
}
inline void GetOfflineFileRespone::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.file.GetOfflineFileRespone.user_id)
}

// repeated .youliao.pdu.file.OfflineFile offline_files = 2;
inline int GetOfflineFileRespone::offline_files_size() const {
  return offline_files_.size();
}
inline void GetOfflineFileRespone::clear_offline_files() {
  offline_files_.Clear();
}
inline ::youliao::pdu::file::OfflineFile* GetOfflineFileRespone::mutable_offline_files(int index) {
  // @@protoc_insertion_point(field_mutable:youliao.pdu.file.GetOfflineFileRespone.offline_files)
  return offline_files_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::youliao::pdu::file::OfflineFile >*
GetOfflineFileRespone::mutable_offline_files() {
  // @@protoc_insertion_point(field_mutable_list:youliao.pdu.file.GetOfflineFileRespone.offline_files)
  return &offline_files_;
}
inline const ::youliao::pdu::file::OfflineFile& GetOfflineFileRespone::offline_files(int index) const {
  // @@protoc_insertion_point(field_get:youliao.pdu.file.GetOfflineFileRespone.offline_files)
  return offline_files_.Get(index);
}
inline ::youliao::pdu::file::OfflineFile* GetOfflineFileRespone::add_offline_files() {
  // @@protoc_insertion_point(field_add:youliao.pdu.file.GetOfflineFileRespone.offline_files)
  return offline_files_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::youliao::pdu::file::OfflineFile >&
GetOfflineFileRespone::offline_files() const {
  // @@protoc_insertion_point(field_list:youliao.pdu.file.GetOfflineFileRespone.offline_files)
  return offline_files_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace file
}  // namespace pdu
}  // namespace youliao

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youliao_2efile_2eproto_INCLUDED

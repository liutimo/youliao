// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youliao.file.proto

#include "youliao.file.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace youliao {
namespace pdu {
namespace file {
class SendFileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendFileRequest>
      _instance;
} _SendFileRequest_default_instance_;
class SendFileResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendFileRespone>
      _instance;
} _SendFileRespone_default_instance_;
class FileNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileNotify>
      _instance;
} _FileNotify_default_instance_;
}  // namespace file
}  // namespace pdu
}  // namespace youliao
namespace protobuf_youliao_2efile_2eproto {
void InitDefaultsSendFileRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::file::_SendFileRequest_default_instance_;
    new (ptr) ::youliao::pdu::file::SendFileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::file::SendFileRequest::InitAsDefaultInstance();
}

void InitDefaultsSendFileRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSendFileRequestImpl);
}

void InitDefaultsSendFileResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2ebase_2eproto::InitDefaultsIpAddress();
  {
    void* ptr = &::youliao::pdu::file::_SendFileRespone_default_instance_;
    new (ptr) ::youliao::pdu::file::SendFileRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::file::SendFileRespone::InitAsDefaultInstance();
}

void InitDefaultsSendFileRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSendFileResponeImpl);
}

void InitDefaultsFileNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2ebase_2eproto::InitDefaultsIpAddress();
  {
    void* ptr = &::youliao::pdu::file::_FileNotify_default_instance_;
    new (ptr) ::youliao::pdu::file::FileNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::file::FileNotify::InitAsDefaultInstance();
}

void InitDefaultsFileNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFileNotifyImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRequest, from_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRequest, to_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRequest, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRequest, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRequest, trans_mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRespone, result_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRespone, from_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRespone, to_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRespone, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRespone, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRespone, ip_addr_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::SendFileRespone, trans_mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::FileNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::FileNotify, from_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::FileNotify, to_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::FileNotify, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::FileNotify, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::FileNotify, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::FileNotify, ip_addr_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::FileNotify, trans_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::file::FileNotify, offline_ready_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::youliao::pdu::file::SendFileRequest)},
  { 10, -1, sizeof(::youliao::pdu::file::SendFileRespone)},
  { 22, -1, sizeof(::youliao::pdu::file::FileNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::file::_SendFileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::file::_SendFileRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::file::_FileNotify_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "youliao.file.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022youliao.file.proto\022\020youliao.pdu.file\032\022"
      "youliao.base.proto\"\231\001\n\017SendFileRequest\022\024"
      "\n\014from_user_id\030\001 \001(\r\022\022\n\nto_user_id\030\002 \001(\r"
      "\022\021\n\tfile_name\030\003 \001(\t\022\021\n\tfile_size\030\004 \001(\r\0226"
      "\n\ntrans_mode\030\005 \001(\0162\".youliao.pdu.base.Tr"
      "ansferFileType\"\337\001\n\017SendFileRespone\022\023\n\013re"
      "sult_code\030\001 \001(\r\022\024\n\014from_user_id\030\002 \001(\r\022\022\n"
      "\nto_user_id\030\003 \001(\r\022\021\n\tfile_name\030\004 \001(\t\022\017\n\007"
      "task_id\030\005 \001(\t\0221\n\014ip_addr_list\030\006 \003(\0132\033.yo"
      "uliao.pdu.base.IpAddress\0226\n\ntrans_mode\030\007"
      " \001(\0162\".youliao.pdu.base.TransferFileType"
      "\"\357\001\n\nFileNotify\022\024\n\014from_user_id\030\001 \001(\r\022\022\n"
      "\nto_user_id\030\002 \001(\r\022\021\n\tfile_name\030\003 \001(\t\022\021\n\t"
      "file_size\030\004 \001(\r\022\017\n\007task_id\030\005 \001(\t\0221\n\014ip_a"
      "ddr_list\030\006 \003(\0132\033.youliao.pdu.base.IpAddr"
      "ess\0226\n\ntrans_mode\030\007 \001(\0162\".youliao.pdu.ba"
      "se.TransferFileType\022\025\n\roffline_ready\030\010 \001"
      "(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 690);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "youliao.file.proto", &protobuf_RegisterTypes);
  ::protobuf_youliao_2ebase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_youliao_2efile_2eproto
namespace youliao {
namespace pdu {
namespace file {

// ===================================================================

void SendFileRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendFileRequest::kFromUserIdFieldNumber;
const int SendFileRequest::kToUserIdFieldNumber;
const int SendFileRequest::kFileNameFieldNumber;
const int SendFileRequest::kFileSizeFieldNumber;
const int SendFileRequest::kTransModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendFileRequest::SendFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efile_2eproto::InitDefaultsSendFileRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.file.SendFileRequest)
}
SendFileRequest::SendFileRequest(const SendFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  ::memcpy(&from_user_id_, &from.from_user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&trans_mode_) -
    reinterpret_cast<char*>(&from_user_id_)) + sizeof(trans_mode_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.file.SendFileRequest)
}

void SendFileRequest::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trans_mode_) -
      reinterpret_cast<char*>(&from_user_id_)) + sizeof(trans_mode_));
  _cached_size_ = 0;
}

SendFileRequest::~SendFileRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.file.SendFileRequest)
  SharedDtor();
}

void SendFileRequest::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendFileRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendFileRequest::descriptor() {
  ::protobuf_youliao_2efile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendFileRequest& SendFileRequest::default_instance() {
  ::protobuf_youliao_2efile_2eproto::InitDefaultsSendFileRequest();
  return *internal_default_instance();
}


void SendFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.file.SendFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trans_mode_) -
      reinterpret_cast<char*>(&from_user_id_)) + sizeof(trans_mode_));
  _internal_metadata_.Clear();
}

bool SendFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.file.SendFileRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 from_user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.file.SendFileRequest.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 file_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .youliao.pdu.base.TransferFileType trans_mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_trans_mode(static_cast< ::youliao::pdu::base::TransferFileType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.file.SendFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.file.SendFileRequest)
  return false;
#undef DO_
}

void SendFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.file.SendFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_user_id = 1;
  if (this->from_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->from_user_id(), output);
  }

  // uint32 to_user_id = 2;
  if (this->to_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->to_user_id(), output);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.file.SendFileRequest.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // uint32 file_size = 4;
  if (this->file_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->file_size(), output);
  }

  // .youliao.pdu.base.TransferFileType trans_mode = 5;
  if (this->trans_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->trans_mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.file.SendFileRequest)
}

::google::protobuf::uint8* SendFileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.file.SendFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_user_id = 1;
  if (this->from_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->from_user_id(), target);
  }

  // uint32 to_user_id = 2;
  if (this->to_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->to_user_id(), target);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.file.SendFileRequest.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // uint32 file_size = 4;
  if (this->file_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->file_size(), target);
  }

  // .youliao.pdu.base.TransferFileType trans_mode = 5;
  if (this->trans_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->trans_mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.file.SendFileRequest)
  return target;
}

size_t SendFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.file.SendFileRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string file_name = 3;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // uint32 from_user_id = 1;
  if (this->from_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_user_id());
  }

  // uint32 to_user_id = 2;
  if (this->to_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_user_id());
  }

  // uint32 file_size = 4;
  if (this->file_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_size());
  }

  // .youliao.pdu.base.TransferFileType trans_mode = 5;
  if (this->trans_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trans_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.file.SendFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendFileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendFileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.file.SendFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.file.SendFileRequest)
    MergeFrom(*source);
  }
}

void SendFileRequest::MergeFrom(const SendFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.file.SendFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.from_user_id() != 0) {
    set_from_user_id(from.from_user_id());
  }
  if (from.to_user_id() != 0) {
    set_to_user_id(from.to_user_id());
  }
  if (from.file_size() != 0) {
    set_file_size(from.file_size());
  }
  if (from.trans_mode() != 0) {
    set_trans_mode(from.trans_mode());
  }
}

void SendFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.file.SendFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendFileRequest::CopyFrom(const SendFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.file.SendFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendFileRequest::IsInitialized() const {
  return true;
}

void SendFileRequest::Swap(SendFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendFileRequest::InternalSwap(SendFileRequest* other) {
  using std::swap;
  file_name_.Swap(&other->file_name_);
  swap(from_user_id_, other->from_user_id_);
  swap(to_user_id_, other->to_user_id_);
  swap(file_size_, other->file_size_);
  swap(trans_mode_, other->trans_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendFileRequest::GetMetadata() const {
  protobuf_youliao_2efile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendFileRespone::InitAsDefaultInstance() {
}
void SendFileRespone::clear_ip_addr_list() {
  ip_addr_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendFileRespone::kResultCodeFieldNumber;
const int SendFileRespone::kFromUserIdFieldNumber;
const int SendFileRespone::kToUserIdFieldNumber;
const int SendFileRespone::kFileNameFieldNumber;
const int SendFileRespone::kTaskIdFieldNumber;
const int SendFileRespone::kIpAddrListFieldNumber;
const int SendFileRespone::kTransModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendFileRespone::SendFileRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efile_2eproto::InitDefaultsSendFileRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.file.SendFileRespone)
}
SendFileRespone::SendFileRespone(const SendFileRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ip_addr_list_(from.ip_addr_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  task_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_id().size() > 0) {
    task_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_id_);
  }
  ::memcpy(&result_code_, &from.result_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&trans_mode_) -
    reinterpret_cast<char*>(&result_code_)) + sizeof(trans_mode_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.file.SendFileRespone)
}

void SendFileRespone::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trans_mode_) -
      reinterpret_cast<char*>(&result_code_)) + sizeof(trans_mode_));
  _cached_size_ = 0;
}

SendFileRespone::~SendFileRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.file.SendFileRespone)
  SharedDtor();
}

void SendFileRespone::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendFileRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendFileRespone::descriptor() {
  ::protobuf_youliao_2efile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendFileRespone& SendFileRespone::default_instance() {
  ::protobuf_youliao_2efile_2eproto::InitDefaultsSendFileRespone();
  return *internal_default_instance();
}


void SendFileRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.file.SendFileRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_list_.Clear();
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trans_mode_) -
      reinterpret_cast<char*>(&result_code_)) + sizeof(trans_mode_));
  _internal_metadata_.Clear();
}

bool SendFileRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.file.SendFileRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 from_user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_user_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.file.SendFileRespone.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string task_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_id().data(), static_cast<int>(this->task_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.file.SendFileRespone.task_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .youliao.pdu.base.IpAddress ip_addr_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ip_addr_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .youliao.pdu.base.TransferFileType trans_mode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_trans_mode(static_cast< ::youliao::pdu::base::TransferFileType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.file.SendFileRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.file.SendFileRespone)
  return false;
#undef DO_
}

void SendFileRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.file.SendFileRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result_code = 1;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result_code(), output);
  }

  // uint32 from_user_id = 2;
  if (this->from_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->from_user_id(), output);
  }

  // uint32 to_user_id = 3;
  if (this->to_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->to_user_id(), output);
  }

  // string file_name = 4;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.file.SendFileRespone.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->file_name(), output);
  }

  // string task_id = 5;
  if (this->task_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_id().data(), static_cast<int>(this->task_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.file.SendFileRespone.task_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->task_id(), output);
  }

  // repeated .youliao.pdu.base.IpAddress ip_addr_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ip_addr_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->ip_addr_list(static_cast<int>(i)),
      output);
  }

  // .youliao.pdu.base.TransferFileType trans_mode = 7;
  if (this->trans_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->trans_mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.file.SendFileRespone)
}

::google::protobuf::uint8* SendFileRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.file.SendFileRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result_code = 1;
  if (this->result_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result_code(), target);
  }

  // uint32 from_user_id = 2;
  if (this->from_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->from_user_id(), target);
  }

  // uint32 to_user_id = 3;
  if (this->to_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->to_user_id(), target);
  }

  // string file_name = 4;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.file.SendFileRespone.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->file_name(), target);
  }

  // string task_id = 5;
  if (this->task_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_id().data(), static_cast<int>(this->task_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.file.SendFileRespone.task_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->task_id(), target);
  }

  // repeated .youliao.pdu.base.IpAddress ip_addr_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ip_addr_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->ip_addr_list(static_cast<int>(i)), deterministic, target);
  }

  // .youliao.pdu.base.TransferFileType trans_mode = 7;
  if (this->trans_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->trans_mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.file.SendFileRespone)
  return target;
}

size_t SendFileRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.file.SendFileRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .youliao.pdu.base.IpAddress ip_addr_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->ip_addr_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ip_addr_list(static_cast<int>(i)));
    }
  }

  // string file_name = 4;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string task_id = 5;
  if (this->task_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_id());
  }

  // uint32 result_code = 1;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_code());
  }

  // uint32 from_user_id = 2;
  if (this->from_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_user_id());
  }

  // uint32 to_user_id = 3;
  if (this->to_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_user_id());
  }

  // .youliao.pdu.base.TransferFileType trans_mode = 7;
  if (this->trans_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trans_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendFileRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.file.SendFileRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const SendFileRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendFileRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.file.SendFileRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.file.SendFileRespone)
    MergeFrom(*source);
  }
}

void SendFileRespone::MergeFrom(const SendFileRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.file.SendFileRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ip_addr_list_.MergeFrom(from.ip_addr_list_);
  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.task_id().size() > 0) {

    task_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_id_);
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
  if (from.from_user_id() != 0) {
    set_from_user_id(from.from_user_id());
  }
  if (from.to_user_id() != 0) {
    set_to_user_id(from.to_user_id());
  }
  if (from.trans_mode() != 0) {
    set_trans_mode(from.trans_mode());
  }
}

void SendFileRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.file.SendFileRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendFileRespone::CopyFrom(const SendFileRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.file.SendFileRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendFileRespone::IsInitialized() const {
  return true;
}

void SendFileRespone::Swap(SendFileRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendFileRespone::InternalSwap(SendFileRespone* other) {
  using std::swap;
  CastToBase(&ip_addr_list_)->InternalSwap(CastToBase(&other->ip_addr_list_));
  file_name_.Swap(&other->file_name_);
  task_id_.Swap(&other->task_id_);
  swap(result_code_, other->result_code_);
  swap(from_user_id_, other->from_user_id_);
  swap(to_user_id_, other->to_user_id_);
  swap(trans_mode_, other->trans_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendFileRespone::GetMetadata() const {
  protobuf_youliao_2efile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileNotify::InitAsDefaultInstance() {
}
void FileNotify::clear_ip_addr_list() {
  ip_addr_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileNotify::kFromUserIdFieldNumber;
const int FileNotify::kToUserIdFieldNumber;
const int FileNotify::kFileNameFieldNumber;
const int FileNotify::kFileSizeFieldNumber;
const int FileNotify::kTaskIdFieldNumber;
const int FileNotify::kIpAddrListFieldNumber;
const int FileNotify::kTransModeFieldNumber;
const int FileNotify::kOfflineReadyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileNotify::FileNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efile_2eproto::InitDefaultsFileNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.file.FileNotify)
}
FileNotify::FileNotify(const FileNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ip_addr_list_(from.ip_addr_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  task_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_id().size() > 0) {
    task_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_id_);
  }
  ::memcpy(&from_user_id_, &from.from_user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&offline_ready_) -
    reinterpret_cast<char*>(&from_user_id_)) + sizeof(offline_ready_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.file.FileNotify)
}

void FileNotify::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offline_ready_) -
      reinterpret_cast<char*>(&from_user_id_)) + sizeof(offline_ready_));
  _cached_size_ = 0;
}

FileNotify::~FileNotify() {
  // @@protoc_insertion_point(destructor:youliao.pdu.file.FileNotify)
  SharedDtor();
}

void FileNotify::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileNotify::descriptor() {
  ::protobuf_youliao_2efile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileNotify& FileNotify::default_instance() {
  ::protobuf_youliao_2efile_2eproto::InitDefaultsFileNotify();
  return *internal_default_instance();
}


void FileNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.file.FileNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_list_.Clear();
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offline_ready_) -
      reinterpret_cast<char*>(&from_user_id_)) + sizeof(offline_ready_));
  _internal_metadata_.Clear();
}

bool FileNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.file.FileNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 from_user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.file.FileNotify.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 file_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string task_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_id().data(), static_cast<int>(this->task_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.file.FileNotify.task_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .youliao.pdu.base.IpAddress ip_addr_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ip_addr_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .youliao.pdu.base.TransferFileType trans_mode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_trans_mode(static_cast< ::youliao::pdu::base::TransferFileType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 offline_ready = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offline_ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.file.FileNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.file.FileNotify)
  return false;
#undef DO_
}

void FileNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.file.FileNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_user_id = 1;
  if (this->from_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->from_user_id(), output);
  }

  // uint32 to_user_id = 2;
  if (this->to_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->to_user_id(), output);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.file.FileNotify.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // uint32 file_size = 4;
  if (this->file_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->file_size(), output);
  }

  // string task_id = 5;
  if (this->task_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_id().data(), static_cast<int>(this->task_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.file.FileNotify.task_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->task_id(), output);
  }

  // repeated .youliao.pdu.base.IpAddress ip_addr_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ip_addr_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->ip_addr_list(static_cast<int>(i)),
      output);
  }

  // .youliao.pdu.base.TransferFileType trans_mode = 7;
  if (this->trans_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->trans_mode(), output);
  }

  // uint32 offline_ready = 8;
  if (this->offline_ready() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->offline_ready(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.file.FileNotify)
}

::google::protobuf::uint8* FileNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.file.FileNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_user_id = 1;
  if (this->from_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->from_user_id(), target);
  }

  // uint32 to_user_id = 2;
  if (this->to_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->to_user_id(), target);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.file.FileNotify.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // uint32 file_size = 4;
  if (this->file_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->file_size(), target);
  }

  // string task_id = 5;
  if (this->task_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_id().data(), static_cast<int>(this->task_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.file.FileNotify.task_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->task_id(), target);
  }

  // repeated .youliao.pdu.base.IpAddress ip_addr_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ip_addr_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->ip_addr_list(static_cast<int>(i)), deterministic, target);
  }

  // .youliao.pdu.base.TransferFileType trans_mode = 7;
  if (this->trans_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->trans_mode(), target);
  }

  // uint32 offline_ready = 8;
  if (this->offline_ready() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->offline_ready(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.file.FileNotify)
  return target;
}

size_t FileNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.file.FileNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .youliao.pdu.base.IpAddress ip_addr_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->ip_addr_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ip_addr_list(static_cast<int>(i)));
    }
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string task_id = 5;
  if (this->task_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_id());
  }

  // uint32 from_user_id = 1;
  if (this->from_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_user_id());
  }

  // uint32 to_user_id = 2;
  if (this->to_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_user_id());
  }

  // uint32 file_size = 4;
  if (this->file_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_size());
  }

  // .youliao.pdu.base.TransferFileType trans_mode = 7;
  if (this->trans_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trans_mode());
  }

  // uint32 offline_ready = 8;
  if (this->offline_ready() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offline_ready());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.file.FileNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FileNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.file.FileNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.file.FileNotify)
    MergeFrom(*source);
  }
}

void FileNotify::MergeFrom(const FileNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.file.FileNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ip_addr_list_.MergeFrom(from.ip_addr_list_);
  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.task_id().size() > 0) {

    task_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_id_);
  }
  if (from.from_user_id() != 0) {
    set_from_user_id(from.from_user_id());
  }
  if (from.to_user_id() != 0) {
    set_to_user_id(from.to_user_id());
  }
  if (from.file_size() != 0) {
    set_file_size(from.file_size());
  }
  if (from.trans_mode() != 0) {
    set_trans_mode(from.trans_mode());
  }
  if (from.offline_ready() != 0) {
    set_offline_ready(from.offline_ready());
  }
}

void FileNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.file.FileNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileNotify::CopyFrom(const FileNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.file.FileNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileNotify::IsInitialized() const {
  return true;
}

void FileNotify::Swap(FileNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileNotify::InternalSwap(FileNotify* other) {
  using std::swap;
  CastToBase(&ip_addr_list_)->InternalSwap(CastToBase(&other->ip_addr_list_));
  file_name_.Swap(&other->file_name_);
  task_id_.Swap(&other->task_id_);
  swap(from_user_id_, other->from_user_id_);
  swap(to_user_id_, other->to_user_id_);
  swap(file_size_, other->file_size_);
  swap(trans_mode_, other->trans_mode_);
  swap(offline_ready_, other->offline_ready_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileNotify::GetMetadata() const {
  protobuf_youliao_2efile_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efile_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace file
}  // namespace pdu
}  // namespace youliao
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::file::SendFileRequest* Arena::Create< ::youliao::pdu::file::SendFileRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::file::SendFileRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::file::SendFileRespone* Arena::Create< ::youliao::pdu::file::SendFileRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::file::SendFileRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::file::FileNotify* Arena::Create< ::youliao::pdu::file::FileNotify >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::file::FileNotify >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youliao.server.proto

#ifndef PROTOBUF_youliao_2eserver_2eproto__INCLUDED
#define PROTOBUF_youliao_2eserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "youliao.base.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_youliao_2eserver_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMsgServerInfoImpl();
void InitDefaultsMsgServerInfo();
inline void InitDefaults() {
  InitDefaultsMsgServerInfo();
}
}  // namespace protobuf_youliao_2eserver_2eproto
namespace youliao {
namespace pdu {
namespace server {
class MsgServerInfo;
class MsgServerInfoDefaultTypeInternal;
extern MsgServerInfoDefaultTypeInternal _MsgServerInfo_default_instance_;
}  // namespace server
}  // namespace pdu
}  // namespace youliao
namespace youliao {
namespace pdu {
namespace server {

// ===================================================================

class MsgServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:youliao.pdu.server.MsgServerInfo) */ {
 public:
  MsgServerInfo();
  virtual ~MsgServerInfo();

  MsgServerInfo(const MsgServerInfo& from);

  inline MsgServerInfo& operator=(const MsgServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgServerInfo(MsgServerInfo&& from) noexcept
    : MsgServerInfo() {
    *this = ::std::move(from);
  }

  inline MsgServerInfo& operator=(MsgServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgServerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgServerInfo* internal_default_instance() {
    return reinterpret_cast<const MsgServerInfo*>(
               &_MsgServerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MsgServerInfo* other);
  friend void swap(MsgServerInfo& a, MsgServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgServerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgServerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgServerInfo& from);
  void MergeFrom(const MsgServerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // uint32 max_conn_count = 3;
  void clear_max_conn_count();
  static const int kMaxConnCountFieldNumber = 3;
  ::google::protobuf::uint32 max_conn_count() const;
  void set_max_conn_count(::google::protobuf::uint32 value);

  // uint32 cur_conn_count = 4;
  void clear_cur_conn_count();
  static const int kCurConnCountFieldNumber = 4;
  ::google::protobuf::uint32 cur_conn_count() const;
  void set_cur_conn_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:youliao.pdu.server.MsgServerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 max_conn_count_;
  ::google::protobuf::uint32 cur_conn_count_;
  mutable int _cached_size_;
  friend struct ::protobuf_youliao_2eserver_2eproto::TableStruct;
  friend void ::protobuf_youliao_2eserver_2eproto::InitDefaultsMsgServerInfoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgServerInfo

// string ip = 1;
inline void MsgServerInfo::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgServerInfo::ip() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.server.MsgServerInfo.ip)
  return ip_.GetNoArena();
}
inline void MsgServerInfo::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:youliao.pdu.server.MsgServerInfo.ip)
}
#if LANG_CXX11
inline void MsgServerInfo::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:youliao.pdu.server.MsgServerInfo.ip)
}
#endif
inline void MsgServerInfo::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:youliao.pdu.server.MsgServerInfo.ip)
}
inline void MsgServerInfo::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:youliao.pdu.server.MsgServerInfo.ip)
}
inline ::std::string* MsgServerInfo::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:youliao.pdu.server.MsgServerInfo.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgServerInfo::release_ip() {
  // @@protoc_insertion_point(field_release:youliao.pdu.server.MsgServerInfo.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgServerInfo::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:youliao.pdu.server.MsgServerInfo.ip)
}

// uint32 port = 2;
inline void MsgServerInfo::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 MsgServerInfo::port() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.server.MsgServerInfo.port)
  return port_;
}
inline void MsgServerInfo::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.server.MsgServerInfo.port)
}

// uint32 max_conn_count = 3;
inline void MsgServerInfo::clear_max_conn_count() {
  max_conn_count_ = 0u;
}
inline ::google::protobuf::uint32 MsgServerInfo::max_conn_count() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.server.MsgServerInfo.max_conn_count)
  return max_conn_count_;
}
inline void MsgServerInfo::set_max_conn_count(::google::protobuf::uint32 value) {
  
  max_conn_count_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.server.MsgServerInfo.max_conn_count)
}

// uint32 cur_conn_count = 4;
inline void MsgServerInfo::clear_cur_conn_count() {
  cur_conn_count_ = 0u;
}
inline ::google::protobuf::uint32 MsgServerInfo::cur_conn_count() const {
  // @@protoc_insertion_point(field_get:youliao.pdu.server.MsgServerInfo.cur_conn_count)
  return cur_conn_count_;
}
inline void MsgServerInfo::set_cur_conn_count(::google::protobuf::uint32 value) {
  
  cur_conn_count_ = value;
  // @@protoc_insertion_point(field_set:youliao.pdu.server.MsgServerInfo.cur_conn_count)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace server
}  // namespace pdu
}  // namespace youliao

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_youliao_2eserver_2eproto__INCLUDED

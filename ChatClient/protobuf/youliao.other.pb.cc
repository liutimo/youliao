// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youliao.other.proto

#include "youliao.other.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace youliao {
namespace pdu {
namespace other {
class ModifyInformationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModifyInformationRequest>
      _instance;
} _ModifyInformationRequest_default_instance_;
class ModifyInformationResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModifyInformationRespone>
      _instance;
} _ModifyInformationRespone_default_instance_;
class ModifyUserImageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModifyUserImageRequest>
      _instance;
} _ModifyUserImageRequest_default_instance_;
class ModifyUserImageResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModifyUserImageRespone>
      _instance;
} _ModifyUserImageRespone_default_instance_;
class GetFriendInformationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFriendInformationRequest>
      _instance;
} _GetFriendInformationRequest_default_instance_;
class GetFriendInformationResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetFriendInformationRespone>
      _instance;
} _GetFriendInformationRespone_default_instance_;
class FriendInformationChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendInformationChange>
      _instance;
} _FriendInformationChange_default_instance_;
}  // namespace other
}  // namespace pdu
}  // namespace youliao
namespace protobuf_youliao_2eother_2eproto {
void InitDefaultsModifyInformationRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2ebase_2eproto::InitDefaultsUserInfo();
  {
    void* ptr = &::youliao::pdu::other::_ModifyInformationRequest_default_instance_;
    new (ptr) ::youliao::pdu::other::ModifyInformationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::other::ModifyInformationRequest::InitAsDefaultInstance();
}

void InitDefaultsModifyInformationRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModifyInformationRequestImpl);
}

void InitDefaultsModifyInformationResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::other::_ModifyInformationRespone_default_instance_;
    new (ptr) ::youliao::pdu::other::ModifyInformationRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::other::ModifyInformationRespone::InitAsDefaultInstance();
}

void InitDefaultsModifyInformationRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModifyInformationResponeImpl);
}

void InitDefaultsModifyUserImageRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::other::_ModifyUserImageRequest_default_instance_;
    new (ptr) ::youliao::pdu::other::ModifyUserImageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::other::ModifyUserImageRequest::InitAsDefaultInstance();
}

void InitDefaultsModifyUserImageRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModifyUserImageRequestImpl);
}

void InitDefaultsModifyUserImageResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::other::_ModifyUserImageRespone_default_instance_;
    new (ptr) ::youliao::pdu::other::ModifyUserImageRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::other::ModifyUserImageRespone::InitAsDefaultInstance();
}

void InitDefaultsModifyUserImageRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModifyUserImageResponeImpl);
}

void InitDefaultsGetFriendInformationRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::other::_GetFriendInformationRequest_default_instance_;
    new (ptr) ::youliao::pdu::other::GetFriendInformationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::other::GetFriendInformationRequest::InitAsDefaultInstance();
}

void InitDefaultsGetFriendInformationRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFriendInformationRequestImpl);
}

void InitDefaultsGetFriendInformationResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2ebase_2eproto::InitDefaultsUserInfo();
  {
    void* ptr = &::youliao::pdu::other::_GetFriendInformationRespone_default_instance_;
    new (ptr) ::youliao::pdu::other::GetFriendInformationRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::other::GetFriendInformationRespone::InitAsDefaultInstance();
}

void InitDefaultsGetFriendInformationRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetFriendInformationResponeImpl);
}

void InitDefaultsFriendInformationChangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::other::_FriendInformationChange_default_instance_;
    new (ptr) ::youliao::pdu::other::FriendInformationChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::other::FriendInformationChange::InitAsDefaultInstance();
}

void InitDefaultsFriendInformationChange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendInformationChangeImpl);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyInformationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyInformationRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyInformationRequest, user_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyInformationRequest, user_sign_changed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyInformationRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyInformationRespone, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyInformationRespone, result_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyUserImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyUserImageRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyUserImageRequest, icon_url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyUserImageRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyUserImageRespone, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyUserImageRespone, icon_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::ModifyUserImageRespone, result_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::GetFriendInformationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::GetFriendInformationRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::GetFriendInformationRequest, friend_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::GetFriendInformationRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::GetFriendInformationRespone, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::GetFriendInformationRespone, user_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::FriendInformationChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::other::FriendInformationChange, user_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::youliao::pdu::other::ModifyInformationRequest)},
  { 8, -1, sizeof(::youliao::pdu::other::ModifyInformationRespone)},
  { 15, -1, sizeof(::youliao::pdu::other::ModifyUserImageRequest)},
  { 22, -1, sizeof(::youliao::pdu::other::ModifyUserImageRespone)},
  { 30, -1, sizeof(::youliao::pdu::other::GetFriendInformationRequest)},
  { 37, -1, sizeof(::youliao::pdu::other::GetFriendInformationRespone)},
  { 44, -1, sizeof(::youliao::pdu::other::FriendInformationChange)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::other::_ModifyInformationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::other::_ModifyInformationRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::other::_ModifyUserImageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::other::_ModifyUserImageRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::other::_GetFriendInformationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::other::_GetFriendInformationRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::other::_FriendInformationChange_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "youliao.other.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023youliao.other.proto\022\021youliao.pdu.other"
      "\032\022youliao.base.proto\"u\n\030ModifyInformatio"
      "nRequest\022\017\n\007user_id\030\001 \001(\r\022-\n\tuser_info\030\002"
      " \001(\0132\032.youliao.pdu.base.UserInfo\022\031\n\021user"
      "_sign_changed\030\003 \001(\010\"@\n\030ModifyInformation"
      "Respone\022\017\n\007user_id\030\001 \001(\r\022\023\n\013result_code\030"
      "\002 \001(\r\";\n\026ModifyUserImageRequest\022\017\n\007user_"
      "id\030\001 \001(\r\022\020\n\010icon_url\030\002 \001(\t\"P\n\026ModifyUser"
      "ImageRespone\022\017\n\007user_id\030\001 \001(\r\022\020\n\010icon_ur"
      "l\030\002 \001(\t\022\023\n\013result_code\030\003 \001(\r\"A\n\033GetFrien"
      "dInformationRequest\022\017\n\007user_id\030\001 \001(\r\022\021\n\t"
      "friend_id\030\002 \001(\r\"]\n\033GetFriendInformationR"
      "espone\022\017\n\007user_id\030\001 \001(\r\022-\n\tuser_info\030\002 \001"
      "(\0132\032.youliao.pdu.base.UserInfo\"*\n\027Friend"
      "InformationChange\022\017\n\007user_id\030\001 \001(\rb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 602);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "youliao.other.proto", &protobuf_RegisterTypes);
  ::protobuf_youliao_2ebase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_youliao_2eother_2eproto
namespace youliao {
namespace pdu {
namespace other {

// ===================================================================

void ModifyInformationRequest::InitAsDefaultInstance() {
  ::youliao::pdu::other::_ModifyInformationRequest_default_instance_._instance.get_mutable()->user_info_ = const_cast< ::youliao::pdu::base::UserInfo*>(
      ::youliao::pdu::base::UserInfo::internal_default_instance());
}
void ModifyInformationRequest::clear_user_info() {
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) {
    delete user_info_;
  }
  user_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyInformationRequest::kUserIdFieldNumber;
const int ModifyInformationRequest::kUserInfoFieldNumber;
const int ModifyInformationRequest::kUserSignChangedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyInformationRequest::ModifyInformationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eother_2eproto::InitDefaultsModifyInformationRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.other.ModifyInformationRequest)
}
ModifyInformationRequest::ModifyInformationRequest(const ModifyInformationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_info()) {
    user_info_ = new ::youliao::pdu::base::UserInfo(*from.user_info_);
  } else {
    user_info_ = NULL;
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_sign_changed_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(user_sign_changed_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.other.ModifyInformationRequest)
}

void ModifyInformationRequest::SharedCtor() {
  ::memset(&user_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_sign_changed_) -
      reinterpret_cast<char*>(&user_info_)) + sizeof(user_sign_changed_));
  _cached_size_ = 0;
}

ModifyInformationRequest::~ModifyInformationRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.other.ModifyInformationRequest)
  SharedDtor();
}

void ModifyInformationRequest::SharedDtor() {
  if (this != internal_default_instance()) delete user_info_;
}

void ModifyInformationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyInformationRequest::descriptor() {
  ::protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyInformationRequest& ModifyInformationRequest::default_instance() {
  ::protobuf_youliao_2eother_2eproto::InitDefaultsModifyInformationRequest();
  return *internal_default_instance();
}


void ModifyInformationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.other.ModifyInformationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) {
    delete user_info_;
  }
  user_info_ = NULL;
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_sign_changed_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(user_sign_changed_));
  _internal_metadata_.Clear();
}

bool ModifyInformationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.other.ModifyInformationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .youliao.pdu.base.UserInfo user_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool user_sign_changed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &user_sign_changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.other.ModifyInformationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.other.ModifyInformationRequest)
  return false;
#undef DO_
}

void ModifyInformationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.other.ModifyInformationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .youliao.pdu.base.UserInfo user_info = 2;
  if (this->has_user_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *user_info_, output);
  }

  // bool user_sign_changed = 3;
  if (this->user_sign_changed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->user_sign_changed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.other.ModifyInformationRequest)
}

::google::protobuf::uint8* ModifyInformationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.other.ModifyInformationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .youliao.pdu.base.UserInfo user_info = 2;
  if (this->has_user_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *user_info_, deterministic, target);
  }

  // bool user_sign_changed = 3;
  if (this->user_sign_changed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->user_sign_changed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.other.ModifyInformationRequest)
  return target;
}

size_t ModifyInformationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.other.ModifyInformationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .youliao.pdu.base.UserInfo user_info = 2;
  if (this->has_user_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_info_);
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // bool user_sign_changed = 3;
  if (this->user_sign_changed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyInformationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.other.ModifyInformationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyInformationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyInformationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.other.ModifyInformationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.other.ModifyInformationRequest)
    MergeFrom(*source);
  }
}

void ModifyInformationRequest::MergeFrom(const ModifyInformationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.other.ModifyInformationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user_info()) {
    mutable_user_info()->::youliao::pdu::base::UserInfo::MergeFrom(from.user_info());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.user_sign_changed() != 0) {
    set_user_sign_changed(from.user_sign_changed());
  }
}

void ModifyInformationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.other.ModifyInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyInformationRequest::CopyFrom(const ModifyInformationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.other.ModifyInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyInformationRequest::IsInitialized() const {
  return true;
}

void ModifyInformationRequest::Swap(ModifyInformationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyInformationRequest::InternalSwap(ModifyInformationRequest* other) {
  using std::swap;
  swap(user_info_, other->user_info_);
  swap(user_id_, other->user_id_);
  swap(user_sign_changed_, other->user_sign_changed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyInformationRequest::GetMetadata() const {
  protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModifyInformationRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyInformationRespone::kUserIdFieldNumber;
const int ModifyInformationRespone::kResultCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyInformationRespone::ModifyInformationRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eother_2eproto::InitDefaultsModifyInformationRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.other.ModifyInformationRespone)
}
ModifyInformationRespone::ModifyInformationRespone(const ModifyInformationRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_code_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(result_code_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.other.ModifyInformationRespone)
}

void ModifyInformationRespone::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_code_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(result_code_));
  _cached_size_ = 0;
}

ModifyInformationRespone::~ModifyInformationRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.other.ModifyInformationRespone)
  SharedDtor();
}

void ModifyInformationRespone::SharedDtor() {
}

void ModifyInformationRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyInformationRespone::descriptor() {
  ::protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyInformationRespone& ModifyInformationRespone::default_instance() {
  ::protobuf_youliao_2eother_2eproto::InitDefaultsModifyInformationRespone();
  return *internal_default_instance();
}


void ModifyInformationRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.other.ModifyInformationRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_code_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(result_code_));
  _internal_metadata_.Clear();
}

bool ModifyInformationRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.other.ModifyInformationRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.other.ModifyInformationRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.other.ModifyInformationRespone)
  return false;
#undef DO_
}

void ModifyInformationRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.other.ModifyInformationRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.other.ModifyInformationRespone)
}

::google::protobuf::uint8* ModifyInformationRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.other.ModifyInformationRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.other.ModifyInformationRespone)
  return target;
}

size_t ModifyInformationRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.other.ModifyInformationRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyInformationRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.other.ModifyInformationRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyInformationRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyInformationRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.other.ModifyInformationRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.other.ModifyInformationRespone)
    MergeFrom(*source);
  }
}

void ModifyInformationRespone::MergeFrom(const ModifyInformationRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.other.ModifyInformationRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
}

void ModifyInformationRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.other.ModifyInformationRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyInformationRespone::CopyFrom(const ModifyInformationRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.other.ModifyInformationRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyInformationRespone::IsInitialized() const {
  return true;
}

void ModifyInformationRespone::Swap(ModifyInformationRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyInformationRespone::InternalSwap(ModifyInformationRespone* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(result_code_, other->result_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyInformationRespone::GetMetadata() const {
  protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModifyUserImageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyUserImageRequest::kUserIdFieldNumber;
const int ModifyUserImageRequest::kIconUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyUserImageRequest::ModifyUserImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eother_2eproto::InitDefaultsModifyUserImageRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.other.ModifyUserImageRequest)
}
ModifyUserImageRequest::ModifyUserImageRequest(const ModifyUserImageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  icon_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.icon_url().size() > 0) {
    icon_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_url_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.other.ModifyUserImageRequest)
}

void ModifyUserImageRequest::SharedCtor() {
  icon_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

ModifyUserImageRequest::~ModifyUserImageRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.other.ModifyUserImageRequest)
  SharedDtor();
}

void ModifyUserImageRequest::SharedDtor() {
  icon_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyUserImageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyUserImageRequest::descriptor() {
  ::protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyUserImageRequest& ModifyUserImageRequest::default_instance() {
  ::protobuf_youliao_2eother_2eproto::InitDefaultsModifyUserImageRequest();
  return *internal_default_instance();
}


void ModifyUserImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.other.ModifyUserImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  icon_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ModifyUserImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.other.ModifyUserImageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string icon_url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon_url().data(), static_cast<int>(this->icon_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.other.ModifyUserImageRequest.icon_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.other.ModifyUserImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.other.ModifyUserImageRequest)
  return false;
#undef DO_
}

void ModifyUserImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.other.ModifyUserImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // string icon_url = 2;
  if (this->icon_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon_url().data(), static_cast<int>(this->icon_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.other.ModifyUserImageRequest.icon_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->icon_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.other.ModifyUserImageRequest)
}

::google::protobuf::uint8* ModifyUserImageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.other.ModifyUserImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // string icon_url = 2;
  if (this->icon_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon_url().data(), static_cast<int>(this->icon_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.other.ModifyUserImageRequest.icon_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->icon_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.other.ModifyUserImageRequest)
  return target;
}

size_t ModifyUserImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.other.ModifyUserImageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string icon_url = 2;
  if (this->icon_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon_url());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyUserImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.other.ModifyUserImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyUserImageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyUserImageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.other.ModifyUserImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.other.ModifyUserImageRequest)
    MergeFrom(*source);
  }
}

void ModifyUserImageRequest::MergeFrom(const ModifyUserImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.other.ModifyUserImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.icon_url().size() > 0) {

    icon_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_url_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void ModifyUserImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.other.ModifyUserImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyUserImageRequest::CopyFrom(const ModifyUserImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.other.ModifyUserImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyUserImageRequest::IsInitialized() const {
  return true;
}

void ModifyUserImageRequest::Swap(ModifyUserImageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyUserImageRequest::InternalSwap(ModifyUserImageRequest* other) {
  using std::swap;
  icon_url_.Swap(&other->icon_url_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyUserImageRequest::GetMetadata() const {
  protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModifyUserImageRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyUserImageRespone::kUserIdFieldNumber;
const int ModifyUserImageRespone::kIconUrlFieldNumber;
const int ModifyUserImageRespone::kResultCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyUserImageRespone::ModifyUserImageRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eother_2eproto::InitDefaultsModifyUserImageRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.other.ModifyUserImageRespone)
}
ModifyUserImageRespone::ModifyUserImageRespone(const ModifyUserImageRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  icon_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.icon_url().size() > 0) {
    icon_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_url_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_code_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(result_code_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.other.ModifyUserImageRespone)
}

void ModifyUserImageRespone::SharedCtor() {
  icon_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_code_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(result_code_));
  _cached_size_ = 0;
}

ModifyUserImageRespone::~ModifyUserImageRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.other.ModifyUserImageRespone)
  SharedDtor();
}

void ModifyUserImageRespone::SharedDtor() {
  icon_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyUserImageRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyUserImageRespone::descriptor() {
  ::protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyUserImageRespone& ModifyUserImageRespone::default_instance() {
  ::protobuf_youliao_2eother_2eproto::InitDefaultsModifyUserImageRespone();
  return *internal_default_instance();
}


void ModifyUserImageRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.other.ModifyUserImageRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  icon_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_code_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(result_code_));
  _internal_metadata_.Clear();
}

bool ModifyUserImageRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.other.ModifyUserImageRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string icon_url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon_url().data(), static_cast<int>(this->icon_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.other.ModifyUserImageRespone.icon_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.other.ModifyUserImageRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.other.ModifyUserImageRespone)
  return false;
#undef DO_
}

void ModifyUserImageRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.other.ModifyUserImageRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // string icon_url = 2;
  if (this->icon_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon_url().data(), static_cast<int>(this->icon_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.other.ModifyUserImageRespone.icon_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->icon_url(), output);
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->result_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.other.ModifyUserImageRespone)
}

::google::protobuf::uint8* ModifyUserImageRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.other.ModifyUserImageRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // string icon_url = 2;
  if (this->icon_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon_url().data(), static_cast<int>(this->icon_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.other.ModifyUserImageRespone.icon_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->icon_url(), target);
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->result_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.other.ModifyUserImageRespone)
  return target;
}

size_t ModifyUserImageRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.other.ModifyUserImageRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string icon_url = 2;
  if (this->icon_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon_url());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyUserImageRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.other.ModifyUserImageRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyUserImageRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyUserImageRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.other.ModifyUserImageRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.other.ModifyUserImageRespone)
    MergeFrom(*source);
  }
}

void ModifyUserImageRespone::MergeFrom(const ModifyUserImageRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.other.ModifyUserImageRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.icon_url().size() > 0) {

    icon_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_url_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
}

void ModifyUserImageRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.other.ModifyUserImageRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyUserImageRespone::CopyFrom(const ModifyUserImageRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.other.ModifyUserImageRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyUserImageRespone::IsInitialized() const {
  return true;
}

void ModifyUserImageRespone::Swap(ModifyUserImageRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyUserImageRespone::InternalSwap(ModifyUserImageRespone* other) {
  using std::swap;
  icon_url_.Swap(&other->icon_url_);
  swap(user_id_, other->user_id_);
  swap(result_code_, other->result_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyUserImageRespone::GetMetadata() const {
  protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFriendInformationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFriendInformationRequest::kUserIdFieldNumber;
const int GetFriendInformationRequest::kFriendIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFriendInformationRequest::GetFriendInformationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eother_2eproto::InitDefaultsGetFriendInformationRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.other.GetFriendInformationRequest)
}
GetFriendInformationRequest::GetFriendInformationRequest(const GetFriendInformationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(friend_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.other.GetFriendInformationRequest)
}

void GetFriendInformationRequest::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(friend_id_));
  _cached_size_ = 0;
}

GetFriendInformationRequest::~GetFriendInformationRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.other.GetFriendInformationRequest)
  SharedDtor();
}

void GetFriendInformationRequest::SharedDtor() {
}

void GetFriendInformationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendInformationRequest::descriptor() {
  ::protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFriendInformationRequest& GetFriendInformationRequest::default_instance() {
  ::protobuf_youliao_2eother_2eproto::InitDefaultsGetFriendInformationRequest();
  return *internal_default_instance();
}


void GetFriendInformationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.other.GetFriendInformationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(friend_id_));
  _internal_metadata_.Clear();
}

bool GetFriendInformationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.other.GetFriendInformationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.other.GetFriendInformationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.other.GetFriendInformationRequest)
  return false;
#undef DO_
}

void GetFriendInformationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.other.GetFriendInformationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->friend_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.other.GetFriendInformationRequest)
}

::google::protobuf::uint8* GetFriendInformationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.other.GetFriendInformationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->friend_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.other.GetFriendInformationRequest)
  return target;
}

size_t GetFriendInformationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.other.GetFriendInformationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFriendInformationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.other.GetFriendInformationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFriendInformationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFriendInformationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.other.GetFriendInformationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.other.GetFriendInformationRequest)
    MergeFrom(*source);
  }
}

void GetFriendInformationRequest::MergeFrom(const GetFriendInformationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.other.GetFriendInformationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.friend_id() != 0) {
    set_friend_id(from.friend_id());
  }
}

void GetFriendInformationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.other.GetFriendInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFriendInformationRequest::CopyFrom(const GetFriendInformationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.other.GetFriendInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendInformationRequest::IsInitialized() const {
  return true;
}

void GetFriendInformationRequest::Swap(GetFriendInformationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFriendInformationRequest::InternalSwap(GetFriendInformationRequest* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(friend_id_, other->friend_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFriendInformationRequest::GetMetadata() const {
  protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetFriendInformationRespone::InitAsDefaultInstance() {
  ::youliao::pdu::other::_GetFriendInformationRespone_default_instance_._instance.get_mutable()->user_info_ = const_cast< ::youliao::pdu::base::UserInfo*>(
      ::youliao::pdu::base::UserInfo::internal_default_instance());
}
void GetFriendInformationRespone::clear_user_info() {
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) {
    delete user_info_;
  }
  user_info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetFriendInformationRespone::kUserIdFieldNumber;
const int GetFriendInformationRespone::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetFriendInformationRespone::GetFriendInformationRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eother_2eproto::InitDefaultsGetFriendInformationRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.other.GetFriendInformationRespone)
}
GetFriendInformationRespone::GetFriendInformationRespone(const GetFriendInformationRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_info()) {
    user_info_ = new ::youliao::pdu::base::UserInfo(*from.user_info_);
  } else {
    user_info_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.other.GetFriendInformationRespone)
}

void GetFriendInformationRespone::SharedCtor() {
  ::memset(&user_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&user_info_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

GetFriendInformationRespone::~GetFriendInformationRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.other.GetFriendInformationRespone)
  SharedDtor();
}

void GetFriendInformationRespone::SharedDtor() {
  if (this != internal_default_instance()) delete user_info_;
}

void GetFriendInformationRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFriendInformationRespone::descriptor() {
  ::protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetFriendInformationRespone& GetFriendInformationRespone::default_instance() {
  ::protobuf_youliao_2eother_2eproto::InitDefaultsGetFriendInformationRespone();
  return *internal_default_instance();
}


void GetFriendInformationRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.other.GetFriendInformationRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) {
    delete user_info_;
  }
  user_info_ = NULL;
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetFriendInformationRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.other.GetFriendInformationRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .youliao.pdu.base.UserInfo user_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.other.GetFriendInformationRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.other.GetFriendInformationRespone)
  return false;
#undef DO_
}

void GetFriendInformationRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.other.GetFriendInformationRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .youliao.pdu.base.UserInfo user_info = 2;
  if (this->has_user_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *user_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.other.GetFriendInformationRespone)
}

::google::protobuf::uint8* GetFriendInformationRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.other.GetFriendInformationRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .youliao.pdu.base.UserInfo user_info = 2;
  if (this->has_user_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *user_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.other.GetFriendInformationRespone)
  return target;
}

size_t GetFriendInformationRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.other.GetFriendInformationRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .youliao.pdu.base.UserInfo user_info = 2;
  if (this->has_user_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_info_);
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetFriendInformationRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.other.GetFriendInformationRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFriendInformationRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetFriendInformationRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.other.GetFriendInformationRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.other.GetFriendInformationRespone)
    MergeFrom(*source);
  }
}

void GetFriendInformationRespone::MergeFrom(const GetFriendInformationRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.other.GetFriendInformationRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_user_info()) {
    mutable_user_info()->::youliao::pdu::base::UserInfo::MergeFrom(from.user_info());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GetFriendInformationRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.other.GetFriendInformationRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFriendInformationRespone::CopyFrom(const GetFriendInformationRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.other.GetFriendInformationRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFriendInformationRespone::IsInitialized() const {
  return true;
}

void GetFriendInformationRespone::Swap(GetFriendInformationRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetFriendInformationRespone::InternalSwap(GetFriendInformationRespone* other) {
  using std::swap;
  swap(user_info_, other->user_info_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetFriendInformationRespone::GetMetadata() const {
  protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendInformationChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendInformationChange::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendInformationChange::FriendInformationChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2eother_2eproto::InitDefaultsFriendInformationChange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.other.FriendInformationChange)
}
FriendInformationChange::FriendInformationChange(const FriendInformationChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.other.FriendInformationChange)
}

void FriendInformationChange::SharedCtor() {
  user_id_ = 0u;
  _cached_size_ = 0;
}

FriendInformationChange::~FriendInformationChange() {
  // @@protoc_insertion_point(destructor:youliao.pdu.other.FriendInformationChange)
  SharedDtor();
}

void FriendInformationChange::SharedDtor() {
}

void FriendInformationChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendInformationChange::descriptor() {
  ::protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendInformationChange& FriendInformationChange::default_instance() {
  ::protobuf_youliao_2eother_2eproto::InitDefaultsFriendInformationChange();
  return *internal_default_instance();
}


void FriendInformationChange::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.other.FriendInformationChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool FriendInformationChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.other.FriendInformationChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.other.FriendInformationChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.other.FriendInformationChange)
  return false;
#undef DO_
}

void FriendInformationChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.other.FriendInformationChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.other.FriendInformationChange)
}

::google::protobuf::uint8* FriendInformationChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.other.FriendInformationChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.other.FriendInformationChange)
  return target;
}

size_t FriendInformationChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.other.FriendInformationChange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendInformationChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.other.FriendInformationChange)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendInformationChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendInformationChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.other.FriendInformationChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.other.FriendInformationChange)
    MergeFrom(*source);
  }
}

void FriendInformationChange::MergeFrom(const FriendInformationChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.other.FriendInformationChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void FriendInformationChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.other.FriendInformationChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendInformationChange::CopyFrom(const FriendInformationChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.other.FriendInformationChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendInformationChange::IsInitialized() const {
  return true;
}

void FriendInformationChange::Swap(FriendInformationChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendInformationChange::InternalSwap(FriendInformationChange* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendInformationChange::GetMetadata() const {
  protobuf_youliao_2eother_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2eother_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace other
}  // namespace pdu
}  // namespace youliao
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::other::ModifyInformationRequest* Arena::Create< ::youliao::pdu::other::ModifyInformationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::other::ModifyInformationRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::other::ModifyInformationRespone* Arena::Create< ::youliao::pdu::other::ModifyInformationRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::other::ModifyInformationRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::other::ModifyUserImageRequest* Arena::Create< ::youliao::pdu::other::ModifyUserImageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::other::ModifyUserImageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::other::ModifyUserImageRespone* Arena::Create< ::youliao::pdu::other::ModifyUserImageRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::other::ModifyUserImageRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::other::GetFriendInformationRequest* Arena::Create< ::youliao::pdu::other::GetFriendInformationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::other::GetFriendInformationRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::other::GetFriendInformationRespone* Arena::Create< ::youliao::pdu::other::GetFriendInformationRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::other::GetFriendInformationRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::other::FriendInformationChange* Arena::Create< ::youliao::pdu::other::FriendInformationChange >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::other::FriendInformationChange >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

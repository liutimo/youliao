// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youliao.base.proto

#include "youliao.base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace youliao {
namespace pdu {
namespace base {
class UserInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserInfo>
      _instance;
} _UserInfo_default_instance_;
class FriendInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendInfo>
      _instance;
} _FriendInfo_default_instance_;
class HeartBeatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartBeat>
      _instance;
} _HeartBeat_default_instance_;
}  // namespace base
}  // namespace pdu
}  // namespace youliao
namespace protobuf_youliao_2ebase_2eproto {
void InitDefaultsUserInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::base::_UserInfo_default_instance_;
    new (ptr) ::youliao::pdu::base::UserInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::base::UserInfo::InitAsDefaultInstance();
}

void InitDefaultsUserInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserInfoImpl);
}

void InitDefaultsFriendInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::base::_FriendInfo_default_instance_;
    new (ptr) ::youliao::pdu::base::FriendInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::base::FriendInfo::InitAsDefaultInstance();
}

void InitDefaultsFriendInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendInfoImpl);
}

void InitDefaultsHeartBeatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::base::_HeartBeat_default_instance_;
    new (ptr) ::youliao::pdu::base::HeartBeat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::base::HeartBeat::InitAsDefaultInstance();
}

void InitDefaultsHeartBeat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHeartBeatImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_header_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::UserInfo, user_sign_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_nick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_header_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_sign_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::FriendInfo, friend_is_online_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::base::HeartBeat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::youliao::pdu::base::UserInfo)},
  { 13, -1, sizeof(::youliao::pdu::base::FriendInfo)},
  { 27, -1, sizeof(::youliao::pdu::base::HeartBeat)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::base::_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::base::_FriendInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::base::_HeartBeat_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "youliao.base.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022youliao.base.proto\022\020youliao.pdu.base\"\257"
      "\001\n\010UserInfo\022\017\n\007user_id\030\001 \001(\r\022\024\n\014user_acc"
      "ount\030\002 \001(\r\022\020\n\010user_sex\030\003 \001(\r\022\021\n\tuser_nic"
      "k\030\004 \001(\t\022\027\n\017user_header_url\030\005 \001(\t\022\022\n\nuser"
      "_email\030\006 \001(\t\022\022\n\nuser_phone\030\007 \001(\t\022\026\n\016user"
      "_sign_info\030\010 \001(\t\"\333\001\n\nFriendInfo\022\021\n\tfrien"
      "d_id\030\001 \001(\r\022\026\n\016friend_account\030\002 \001(\r\022\022\n\nfr"
      "iend_sex\030\003 \001(\r\022\023\n\013friend_nick\030\004 \001(\t\022\031\n\021f"
      "riend_header_url\030\005 \001(\t\022\024\n\014friend_email\030\006"
      " \001(\t\022\024\n\014friend_phone\030\007 \001(\t\022\030\n\020friend_sig"
      "n_info\030\010 \001(\t\022\030\n\020friend_is_online\030\t \001(\010\"\013"
      "\n\tHeartBeat*m\n\tServiceID\022\014\n\010SID_ZERO\020\000\022\r"
      "\n\tSID_LOGIN\020\001\022\023\n\017SID_FRIEND_LIST\020\002\022\016\n\nSI"
      "D_SERVER\020\003\022\r\n\tSID_OTHER\020\004\022\017\n\013SID_MESSAGE"
      "\020\005*\313\001\n\010LoginCID\022\022\n\016CID_LOGIN_ZERO\020\000\022 \n\033C"
      "ID_LOGIN_REQUSET_MSGSERVER\020\201\002\022 \n\033CID_LOG"
      "IN_RESPONE_MSGSERVER\020\202\002\022 \n\033CID_LOGIN_REQ"
      "UEST_USERLOGIN\020\203\002\022 \n\033CID_LOGIN_RESPONE_U"
      "SERLOGIN\020\204\002\022#\n\036CID_LOGIN_REQUEST_USERLOG"
      "INOUT\020\205\002*@\n\tServerCID\022\023\n\017CID_SERVER_ZERO"
      "\020\000\022\036\n\031CID_SERVER_MSGSERVER_INFO\020\201\004*|\n\010Ot"
      "herCID\022\022\n\016CID_OTHER_ZERO\020\000\022\030\n\023CID_OTHER_"
      "HEARTBEAT\020\201\006\022 \n\033CID_SERVER_VALIDATE_REQU"
      "EST\020\202\004\022 \n\033CID_SERVER_VALIDATE_RESPONE\020\203\004"
      "*j\n\rFriendListCID\022\027\n\023CID_FRIENDLIST_ZERO"
      "\020\000\022\037\n\032CID_FRIENDLIST_GET_REQUEST\020\201\010\022\037\n\032C"
      "ID_FRIENDLIST_GET_RESPONE\020\202\010*9\n\nMessageC"
      "ID\022\024\n\020CID_MESSAGE_ZERO\020\000\022\025\n\020CID_MESSAGE_"
      "DATA\020\201\n*>\n\nResultType\022\010\n\004NONE\020\000\022\021\n\rNO_MS"
      "G_SERVER\020\001\022\023\n\017MSG_SERVER_FULL\020\002*m\n\016UserS"
      "tatusType\022\024\n\020USER_STATUS_ZERO\020\000\022\026\n\022USER_"
      "STATUS_ONLINE\020\001\022\027\n\023USER_STATUS_OFFLINE\020\002"
      "\022\024\n\020USER_STATUS_HIDE\020\003*\227\001\n\013MessageType\022\020"
      "\n\014MESSAGE_ZERO\020\000\022\034\n\030MESSAGE_TYPE_SINGLE_"
      "TEXT\020\001\022\035\n\031MESSAGE_TYPE_SINGLE_AUDIO\020\002\022\033\n"
      "\027MESSAGE_TYPE_GROUP_TEXT\020\003\022\034\n\030MESSAGE_TY"
      "PE_GROUP_AUDIO\020\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1464);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "youliao.base.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_youliao_2ebase_2eproto
namespace youliao {
namespace pdu {
namespace base {
const ::google::protobuf::EnumDescriptor* ServiceID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[0];
}
bool ServiceID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoginCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[1];
}
bool LoginCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 257:
    case 258:
    case 259:
    case 260:
    case 261:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServerCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[2];
}
bool ServerCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 513:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OtherCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[3];
}
bool OtherCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 514:
    case 515:
    case 769:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FriendListCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[4];
}
bool FriendListCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1025:
    case 1026:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageCID_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[5];
}
bool MessageCID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1281:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ResultType_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[6];
}
bool ResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UserStatusType_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[7];
}
bool UserStatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_youliao_2ebase_2eproto::file_level_enum_descriptors[8];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void UserInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kUserIdFieldNumber;
const int UserInfo::kUserAccountFieldNumber;
const int UserInfo::kUserSexFieldNumber;
const int UserInfo::kUserNickFieldNumber;
const int UserInfo::kUserHeaderUrlFieldNumber;
const int UserInfo::kUserEmailFieldNumber;
const int UserInfo::kUserPhoneFieldNumber;
const int UserInfo::kUserSignInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2ebase_2eproto::InitDefaultsUserInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.base.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_nick().size() > 0) {
    user_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_nick_);
  }
  user_header_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_header_url().size() > 0) {
    user_header_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_header_url_);
  }
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_email().size() > 0) {
    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  user_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_phone().size() > 0) {
    user_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_phone_);
  }
  user_sign_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_sign_info().size() > 0) {
    user_sign_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_sign_info_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_sex_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(user_sex_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.base.UserInfo)
}

void UserInfo::SharedCtor() {
  user_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_header_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_sign_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_sex_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(user_sex_));
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:youliao.pdu.base.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  user_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_header_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_sign_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  ::protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  ::protobuf_youliao_2ebase_2eproto::InitDefaultsUserInfo();
  return *internal_default_instance();
}


void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.base.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_header_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_sign_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_sex_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(user_sex_));
  _internal_metadata_.Clear();
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.base.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 user_account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 user_sex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_nick = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_nick().data(), static_cast<int>(this->user_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.UserInfo.user_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_header_url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_header_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_header_url().data(), static_cast<int>(this->user_header_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.UserInfo.user_header_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_email = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_email().data(), static_cast<int>(this->user_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.UserInfo.user_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_phone = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_phone().data(), static_cast<int>(this->user_phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.UserInfo.user_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_sign_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_sign_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_sign_info().data(), static_cast<int>(this->user_sign_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.UserInfo.user_sign_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.base.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.base.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.base.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 user_account = 2;
  if (this->user_account() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->user_account(), output);
  }

  // uint32 user_sex = 3;
  if (this->user_sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->user_sex(), output);
  }

  // string user_nick = 4;
  if (this->user_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_nick().data(), static_cast<int>(this->user_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_nick(), output);
  }

  // string user_header_url = 5;
  if (this->user_header_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_header_url().data(), static_cast<int>(this->user_header_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_header_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->user_header_url(), output);
  }

  // string user_email = 6;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), static_cast<int>(this->user_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->user_email(), output);
  }

  // string user_phone = 7;
  if (this->user_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_phone().data(), static_cast<int>(this->user_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->user_phone(), output);
  }

  // string user_sign_info = 8;
  if (this->user_sign_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_sign_info().data(), static_cast<int>(this->user_sign_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_sign_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->user_sign_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.base.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.base.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 user_account = 2;
  if (this->user_account() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->user_account(), target);
  }

  // uint32 user_sex = 3;
  if (this->user_sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->user_sex(), target);
  }

  // string user_nick = 4;
  if (this->user_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_nick().data(), static_cast<int>(this->user_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_nick(), target);
  }

  // string user_header_url = 5;
  if (this->user_header_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_header_url().data(), static_cast<int>(this->user_header_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_header_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->user_header_url(), target);
  }

  // string user_email = 6;
  if (this->user_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_email().data(), static_cast<int>(this->user_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->user_email(), target);
  }

  // string user_phone = 7;
  if (this->user_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_phone().data(), static_cast<int>(this->user_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->user_phone(), target);
  }

  // string user_sign_info = 8;
  if (this->user_sign_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_sign_info().data(), static_cast<int>(this->user_sign_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.UserInfo.user_sign_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->user_sign_info(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.base.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.base.UserInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_nick = 4;
  if (this->user_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_nick());
  }

  // string user_header_url = 5;
  if (this->user_header_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_header_url());
  }

  // string user_email = 6;
  if (this->user_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_email());
  }

  // string user_phone = 7;
  if (this->user_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_phone());
  }

  // string user_sign_info = 8;
  if (this->user_sign_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_sign_info());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 user_account = 2;
  if (this->user_account() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_account());
  }

  // uint32 user_sex = 3;
  if (this->user_sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_sex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.base.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.base.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.base.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.base.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_nick().size() > 0) {

    user_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_nick_);
  }
  if (from.user_header_url().size() > 0) {

    user_header_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_header_url_);
  }
  if (from.user_email().size() > 0) {

    user_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_email_);
  }
  if (from.user_phone().size() > 0) {

    user_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_phone_);
  }
  if (from.user_sign_info().size() > 0) {

    user_sign_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_sign_info_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.user_account() != 0) {
    set_user_account(from.user_account());
  }
  if (from.user_sex() != 0) {
    set_user_sex(from.user_sex());
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.base.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.base.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  user_nick_.Swap(&other->user_nick_);
  user_header_url_.Swap(&other->user_header_url_);
  user_email_.Swap(&other->user_email_);
  user_phone_.Swap(&other->user_phone_);
  user_sign_info_.Swap(&other->user_sign_info_);
  swap(user_id_, other->user_id_);
  swap(user_account_, other->user_account_);
  swap(user_sex_, other->user_sex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendInfo::kFriendIdFieldNumber;
const int FriendInfo::kFriendAccountFieldNumber;
const int FriendInfo::kFriendSexFieldNumber;
const int FriendInfo::kFriendNickFieldNumber;
const int FriendInfo::kFriendHeaderUrlFieldNumber;
const int FriendInfo::kFriendEmailFieldNumber;
const int FriendInfo::kFriendPhoneFieldNumber;
const int FriendInfo::kFriendSignInfoFieldNumber;
const int FriendInfo::kFriendIsOnlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendInfo::FriendInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2ebase_2eproto::InitDefaultsFriendInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.base.FriendInfo)
}
FriendInfo::FriendInfo(const FriendInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friend_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_nick().size() > 0) {
    friend_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_nick_);
  }
  friend_header_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_header_url().size() > 0) {
    friend_header_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_header_url_);
  }
  friend_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_email().size() > 0) {
    friend_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_email_);
  }
  friend_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_phone().size() > 0) {
    friend_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_phone_);
  }
  friend_sign_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_sign_info().size() > 0) {
    friend_sign_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_sign_info_);
  }
  ::memcpy(&friend_id_, &from.friend_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_is_online_) -
    reinterpret_cast<char*>(&friend_id_)) + sizeof(friend_is_online_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.base.FriendInfo)
}

void FriendInfo::SharedCtor() {
  friend_nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_header_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_sign_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&friend_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_is_online_) -
      reinterpret_cast<char*>(&friend_id_)) + sizeof(friend_is_online_));
  _cached_size_ = 0;
}

FriendInfo::~FriendInfo() {
  // @@protoc_insertion_point(destructor:youliao.pdu.base.FriendInfo)
  SharedDtor();
}

void FriendInfo::SharedDtor() {
  friend_nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_header_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_sign_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendInfo::descriptor() {
  ::protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendInfo& FriendInfo::default_instance() {
  ::protobuf_youliao_2ebase_2eproto::InitDefaultsFriendInfo();
  return *internal_default_instance();
}


void FriendInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.base.FriendInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_header_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_sign_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&friend_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_is_online_) -
      reinterpret_cast<char*>(&friend_id_)) + sizeof(friend_is_online_));
  _internal_metadata_.Clear();
}

bool FriendInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.base.FriendInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 friend_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_sex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_nick = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_nick().data(), static_cast<int>(this->friend_nick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.FriendInfo.friend_nick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_header_url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_header_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_header_url().data(), static_cast<int>(this->friend_header_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.FriendInfo.friend_header_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_email = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_email().data(), static_cast<int>(this->friend_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.FriendInfo.friend_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_phone = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_phone().data(), static_cast<int>(this->friend_phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.FriendInfo.friend_phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_sign_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_sign_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_sign_info().data(), static_cast<int>(this->friend_sign_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.base.FriendInfo.friend_sign_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool friend_is_online = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &friend_is_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.base.FriendInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.base.FriendInfo)
  return false;
#undef DO_
}

void FriendInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.base.FriendInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 friend_id = 1;
  if (this->friend_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->friend_id(), output);
  }

  // uint32 friend_account = 2;
  if (this->friend_account() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->friend_account(), output);
  }

  // uint32 friend_sex = 3;
  if (this->friend_sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->friend_sex(), output);
  }

  // string friend_nick = 4;
  if (this->friend_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_nick().data(), static_cast<int>(this->friend_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->friend_nick(), output);
  }

  // string friend_header_url = 5;
  if (this->friend_header_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_header_url().data(), static_cast<int>(this->friend_header_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_header_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->friend_header_url(), output);
  }

  // string friend_email = 6;
  if (this->friend_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_email().data(), static_cast<int>(this->friend_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->friend_email(), output);
  }

  // string friend_phone = 7;
  if (this->friend_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_phone().data(), static_cast<int>(this->friend_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->friend_phone(), output);
  }

  // string friend_sign_info = 8;
  if (this->friend_sign_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_sign_info().data(), static_cast<int>(this->friend_sign_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_sign_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->friend_sign_info(), output);
  }

  // bool friend_is_online = 9;
  if (this->friend_is_online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->friend_is_online(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.base.FriendInfo)
}

::google::protobuf::uint8* FriendInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.base.FriendInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 friend_id = 1;
  if (this->friend_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->friend_id(), target);
  }

  // uint32 friend_account = 2;
  if (this->friend_account() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->friend_account(), target);
  }

  // uint32 friend_sex = 3;
  if (this->friend_sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->friend_sex(), target);
  }

  // string friend_nick = 4;
  if (this->friend_nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_nick().data(), static_cast<int>(this->friend_nick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->friend_nick(), target);
  }

  // string friend_header_url = 5;
  if (this->friend_header_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_header_url().data(), static_cast<int>(this->friend_header_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_header_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->friend_header_url(), target);
  }

  // string friend_email = 6;
  if (this->friend_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_email().data(), static_cast<int>(this->friend_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->friend_email(), target);
  }

  // string friend_phone = 7;
  if (this->friend_phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_phone().data(), static_cast<int>(this->friend_phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->friend_phone(), target);
  }

  // string friend_sign_info = 8;
  if (this->friend_sign_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_sign_info().data(), static_cast<int>(this->friend_sign_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.base.FriendInfo.friend_sign_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->friend_sign_info(), target);
  }

  // bool friend_is_online = 9;
  if (this->friend_is_online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->friend_is_online(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.base.FriendInfo)
  return target;
}

size_t FriendInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.base.FriendInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string friend_nick = 4;
  if (this->friend_nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_nick());
  }

  // string friend_header_url = 5;
  if (this->friend_header_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_header_url());
  }

  // string friend_email = 6;
  if (this->friend_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_email());
  }

  // string friend_phone = 7;
  if (this->friend_phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_phone());
  }

  // string friend_sign_info = 8;
  if (this->friend_sign_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_sign_info());
  }

  // uint32 friend_id = 1;
  if (this->friend_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_id());
  }

  // uint32 friend_account = 2;
  if (this->friend_account() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_account());
  }

  // uint32 friend_sex = 3;
  if (this->friend_sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_sex());
  }

  // bool friend_is_online = 9;
  if (this->friend_is_online() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.base.FriendInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.base.FriendInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.base.FriendInfo)
    MergeFrom(*source);
  }
}

void FriendInfo::MergeFrom(const FriendInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.base.FriendInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.friend_nick().size() > 0) {

    friend_nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_nick_);
  }
  if (from.friend_header_url().size() > 0) {

    friend_header_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_header_url_);
  }
  if (from.friend_email().size() > 0) {

    friend_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_email_);
  }
  if (from.friend_phone().size() > 0) {

    friend_phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_phone_);
  }
  if (from.friend_sign_info().size() > 0) {

    friend_sign_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_sign_info_);
  }
  if (from.friend_id() != 0) {
    set_friend_id(from.friend_id());
  }
  if (from.friend_account() != 0) {
    set_friend_account(from.friend_account());
  }
  if (from.friend_sex() != 0) {
    set_friend_sex(from.friend_sex());
  }
  if (from.friend_is_online() != 0) {
    set_friend_is_online(from.friend_is_online());
  }
}

void FriendInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.base.FriendInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendInfo::CopyFrom(const FriendInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.base.FriendInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendInfo::IsInitialized() const {
  return true;
}

void FriendInfo::Swap(FriendInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendInfo::InternalSwap(FriendInfo* other) {
  using std::swap;
  friend_nick_.Swap(&other->friend_nick_);
  friend_header_url_.Swap(&other->friend_header_url_);
  friend_email_.Swap(&other->friend_email_);
  friend_phone_.Swap(&other->friend_phone_);
  friend_sign_info_.Swap(&other->friend_sign_info_);
  swap(friend_id_, other->friend_id_);
  swap(friend_account_, other->friend_account_);
  swap(friend_sex_, other->friend_sex_);
  swap(friend_is_online_, other->friend_is_online_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendInfo::GetMetadata() const {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartBeat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartBeat::HeartBeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2ebase_2eproto::InitDefaultsHeartBeat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.base.HeartBeat)
}
HeartBeat::HeartBeat(const HeartBeat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.base.HeartBeat)
}

void HeartBeat::SharedCtor() {
  _cached_size_ = 0;
}

HeartBeat::~HeartBeat() {
  // @@protoc_insertion_point(destructor:youliao.pdu.base.HeartBeat)
  SharedDtor();
}

void HeartBeat::SharedDtor() {
}

void HeartBeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeat::descriptor() {
  ::protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartBeat& HeartBeat::default_instance() {
  ::protobuf_youliao_2ebase_2eproto::InitDefaultsHeartBeat();
  return *internal_default_instance();
}


void HeartBeat::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.base.HeartBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool HeartBeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.base.HeartBeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.base.HeartBeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.base.HeartBeat)
  return false;
#undef DO_
}

void HeartBeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.base.HeartBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.base.HeartBeat)
}

::google::protobuf::uint8* HeartBeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.base.HeartBeat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.base.HeartBeat)
  return target;
}

size_t HeartBeat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.base.HeartBeat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.base.HeartBeat)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartBeat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartBeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.base.HeartBeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.base.HeartBeat)
    MergeFrom(*source);
  }
}

void HeartBeat::MergeFrom(const HeartBeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.base.HeartBeat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HeartBeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.base.HeartBeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeat::CopyFrom(const HeartBeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.base.HeartBeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeat::IsInitialized() const {
  return true;
}

void HeartBeat::Swap(HeartBeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartBeat::InternalSwap(HeartBeat* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartBeat::GetMetadata() const {
  protobuf_youliao_2ebase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2ebase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace base
}  // namespace pdu
}  // namespace youliao
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::base::UserInfo* Arena::Create< ::youliao::pdu::base::UserInfo >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::base::UserInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::base::FriendInfo* Arena::Create< ::youliao::pdu::base::FriendInfo >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::base::FriendInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::base::HeartBeat* Arena::Create< ::youliao::pdu::base::HeartBeat >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::base::HeartBeat >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

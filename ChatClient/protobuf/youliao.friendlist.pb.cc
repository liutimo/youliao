// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youliao.friendlist.proto

#include "youliao.friendlist.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace youliao {
namespace pdu {
namespace friendlist {
class Group_FriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Group_Friend>
      _instance;
} _Group_Friend_default_instance_;
class FriendListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendListRequest>
      _instance;
} _FriendListRequest_default_instance_;
class FriendListRespone_FriendListEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendListRespone_FriendListEntry_DoNotUse>
      _instance;
} _FriendListRespone_FriendListEntry_DoNotUse_default_instance_;
class FriendListResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendListRespone>
      _instance;
} _FriendListRespone_default_instance_;
class GroupsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupsRequest>
      _instance;
} _GroupsRequest_default_instance_;
class GroupsRespone_UserGroupsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupsRespone_UserGroupsEntry_DoNotUse>
      _instance;
} _GroupsRespone_UserGroupsEntry_DoNotUse_default_instance_;
class GroupsResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupsRespone>
      _instance;
} _GroupsRespone_default_instance_;
class FriendStatusChangeMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendStatusChangeMessage>
      _instance;
} _FriendStatusChangeMessage_default_instance_;
class SignatureChangeResquestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignatureChangeResquest>
      _instance;
} _SignatureChangeResquest_default_instance_;
class SignatureChangeResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignatureChangeRespone>
      _instance;
} _SignatureChangeRespone_default_instance_;
class FriendSignatureChangedNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FriendSignatureChangedNotify>
      _instance;
} _FriendSignatureChangedNotify_default_instance_;
class ModifyFriendGroupNameRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModifyFriendGroupNameRequest>
      _instance;
} _ModifyFriendGroupNameRequest_default_instance_;
class AddNewFriendGroupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddNewFriendGroupRequest>
      _instance;
} _AddNewFriendGroupRequest_default_instance_;
class AddNewFriendGroupResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddNewFriendGroupRespone>
      _instance;
} _AddNewFriendGroupRespone_default_instance_;
class RenameFriendGroupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RenameFriendGroupRequest>
      _instance;
} _RenameFriendGroupRequest_default_instance_;
class DeleteFriendGroupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteFriendGroupRequest>
      _instance;
} _DeleteFriendGroupRequest_default_instance_;
class MoveFriendToGroupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveFriendToGroupRequest>
      _instance;
} _MoveFriendToGroupRequest_default_instance_;
class DeleteFriendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteFriendRequest>
      _instance;
} _DeleteFriendRequest_default_instance_;
class ModifyFriendRemarkRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModifyFriendRemarkRequest>
      _instance;
} _ModifyFriendRemarkRequest_default_instance_;
class SearchFriendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchFriendRequest>
      _instance;
} _SearchFriendRequest_default_instance_;
class SearchFriendResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchFriendRespone>
      _instance;
} _SearchFriendRespone_default_instance_;
class AddFriendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddFriendRequest>
      _instance;
} _AddFriendRequest_default_instance_;
}  // namespace friendlist
}  // namespace pdu
}  // namespace youliao
namespace protobuf_youliao_2efriendlist_2eproto {
void InitDefaultsGroup_FriendImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2ebase_2eproto::InitDefaultsFriendInfo();
  {
    void* ptr = &::youliao::pdu::friendlist::_Group_Friend_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::Group_Friend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::Group_Friend::InitAsDefaultInstance();
}

void InitDefaultsGroup_Friend() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGroup_FriendImpl);
}

void InitDefaultsFriendListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_FriendListRequest_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::FriendListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::FriendListRequest::InitAsDefaultInstance();
}

void InitDefaultsFriendListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendListRequestImpl);
}

void InitDefaultsFriendListRespone_FriendListEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2efriendlist_2eproto::InitDefaultsGroup_Friend();
  {
    void* ptr = &::youliao::pdu::friendlist::_FriendListRespone_FriendListEntry_DoNotUse_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::FriendListRespone_FriendListEntry_DoNotUse();
  }
  ::youliao::pdu::friendlist::FriendListRespone_FriendListEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsFriendListRespone_FriendListEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendListRespone_FriendListEntry_DoNotUseImpl);
}

void InitDefaultsFriendListResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2efriendlist_2eproto::InitDefaultsFriendListRespone_FriendListEntry_DoNotUse();
  {
    void* ptr = &::youliao::pdu::friendlist::_FriendListRespone_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::FriendListRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::FriendListRespone::InitAsDefaultInstance();
}

void InitDefaultsFriendListRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendListResponeImpl);
}

void InitDefaultsGroupsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_GroupsRequest_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::GroupsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::GroupsRequest::InitAsDefaultInstance();
}

void InitDefaultsGroupsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGroupsRequestImpl);
}

void InitDefaultsGroupsRespone_UserGroupsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_GroupsRespone_UserGroupsEntry_DoNotUse_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::GroupsRespone_UserGroupsEntry_DoNotUse();
  }
  ::youliao::pdu::friendlist::GroupsRespone_UserGroupsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsGroupsRespone_UserGroupsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGroupsRespone_UserGroupsEntry_DoNotUseImpl);
}

void InitDefaultsGroupsResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2efriendlist_2eproto::InitDefaultsGroupsRespone_UserGroupsEntry_DoNotUse();
  {
    void* ptr = &::youliao::pdu::friendlist::_GroupsRespone_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::GroupsRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::GroupsRespone::InitAsDefaultInstance();
}

void InitDefaultsGroupsRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGroupsResponeImpl);
}

void InitDefaultsFriendStatusChangeMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_FriendStatusChangeMessage_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::FriendStatusChangeMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::FriendStatusChangeMessage::InitAsDefaultInstance();
}

void InitDefaultsFriendStatusChangeMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendStatusChangeMessageImpl);
}

void InitDefaultsSignatureChangeResquestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_SignatureChangeResquest_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::SignatureChangeResquest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::SignatureChangeResquest::InitAsDefaultInstance();
}

void InitDefaultsSignatureChangeResquest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSignatureChangeResquestImpl);
}

void InitDefaultsSignatureChangeResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_SignatureChangeRespone_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::SignatureChangeRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::SignatureChangeRespone::InitAsDefaultInstance();
}

void InitDefaultsSignatureChangeRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSignatureChangeResponeImpl);
}

void InitDefaultsFriendSignatureChangedNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_FriendSignatureChangedNotify_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::FriendSignatureChangedNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::FriendSignatureChangedNotify::InitAsDefaultInstance();
}

void InitDefaultsFriendSignatureChangedNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFriendSignatureChangedNotifyImpl);
}

void InitDefaultsModifyFriendGroupNameRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_ModifyFriendGroupNameRequest_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::ModifyFriendGroupNameRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::ModifyFriendGroupNameRequest::InitAsDefaultInstance();
}

void InitDefaultsModifyFriendGroupNameRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModifyFriendGroupNameRequestImpl);
}

void InitDefaultsAddNewFriendGroupRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_AddNewFriendGroupRequest_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::AddNewFriendGroupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::AddNewFriendGroupRequest::InitAsDefaultInstance();
}

void InitDefaultsAddNewFriendGroupRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddNewFriendGroupRequestImpl);
}

void InitDefaultsAddNewFriendGroupResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_AddNewFriendGroupRespone_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::AddNewFriendGroupRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::AddNewFriendGroupRespone::InitAsDefaultInstance();
}

void InitDefaultsAddNewFriendGroupRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddNewFriendGroupResponeImpl);
}

void InitDefaultsRenameFriendGroupRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_RenameFriendGroupRequest_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::RenameFriendGroupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::RenameFriendGroupRequest::InitAsDefaultInstance();
}

void InitDefaultsRenameFriendGroupRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRenameFriendGroupRequestImpl);
}

void InitDefaultsDeleteFriendGroupRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_DeleteFriendGroupRequest_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::DeleteFriendGroupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::DeleteFriendGroupRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteFriendGroupRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteFriendGroupRequestImpl);
}

void InitDefaultsMoveFriendToGroupRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_MoveFriendToGroupRequest_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::MoveFriendToGroupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::MoveFriendToGroupRequest::InitAsDefaultInstance();
}

void InitDefaultsMoveFriendToGroupRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMoveFriendToGroupRequestImpl);
}

void InitDefaultsDeleteFriendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_DeleteFriendRequest_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::DeleteFriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::DeleteFriendRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteFriendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteFriendRequestImpl);
}

void InitDefaultsModifyFriendRemarkRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_ModifyFriendRemarkRequest_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::ModifyFriendRemarkRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::ModifyFriendRemarkRequest::InitAsDefaultInstance();
}

void InitDefaultsModifyFriendRemarkRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsModifyFriendRemarkRequestImpl);
}

void InitDefaultsSearchFriendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_SearchFriendRequest_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::SearchFriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::SearchFriendRequest::InitAsDefaultInstance();
}

void InitDefaultsSearchFriendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSearchFriendRequestImpl);
}

void InitDefaultsSearchFriendResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2ebase_2eproto::InitDefaultsFriendInfo();
  {
    void* ptr = &::youliao::pdu::friendlist::_SearchFriendRespone_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::SearchFriendRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::SearchFriendRespone::InitAsDefaultInstance();
}

void InitDefaultsSearchFriendRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSearchFriendResponeImpl);
}

void InitDefaultsAddFriendRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::friendlist::_AddFriendRequest_default_instance_;
    new (ptr) ::youliao::pdu::friendlist::AddFriendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::friendlist::AddFriendRequest::InitAsDefaultInstance();
}

void InitDefaultsAddFriendRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddFriendRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[22];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::Group_Friend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::Group_Friend, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::Group_Friend, friend__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendListRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendListRequest, msg_serv_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendListRequest, attach_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendListRespone_FriendListEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendListRespone_FriendListEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendListRespone_FriendListEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendListRespone_FriendListEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendListRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendListRespone, friend_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendListRespone, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::GroupsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::GroupsRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::GroupsRespone_UserGroupsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::GroupsRespone_UserGroupsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::GroupsRespone_UserGroupsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::GroupsRespone_UserGroupsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::GroupsRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::GroupsRespone, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::GroupsRespone, user_groups_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendStatusChangeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendStatusChangeMessage, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendStatusChangeMessage, user_status_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SignatureChangeResquest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SignatureChangeResquest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SignatureChangeResquest, user_signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SignatureChangeRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SignatureChangeRespone, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SignatureChangeRespone, user_signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SignatureChangeRespone, result_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendSignatureChangedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendSignatureChangedNotify, friend_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::FriendSignatureChangedNotify, friend_signatrue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::ModifyFriendGroupNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::ModifyFriendGroupNameRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::ModifyFriendGroupNameRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::ModifyFriendGroupNameRequest, new_group_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddNewFriendGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddNewFriendGroupRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddNewFriendGroupRequest, new_group_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddNewFriendGroupRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddNewFriendGroupRespone, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddNewFriendGroupRespone, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddNewFriendGroupRespone, group_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::RenameFriendGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::RenameFriendGroupRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::RenameFriendGroupRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::RenameFriendGroupRequest, group_new_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::DeleteFriendGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::DeleteFriendGroupRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::DeleteFriendGroupRequest, group_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::MoveFriendToGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::MoveFriendToGroupRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::MoveFriendToGroupRequest, friend_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::MoveFriendToGroupRequest, group_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::DeleteFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::DeleteFriendRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::DeleteFriendRequest, friend_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::ModifyFriendRemarkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::ModifyFriendRemarkRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::ModifyFriendRemarkRequest, friend_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::ModifyFriendRemarkRequest, friend_remark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SearchFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SearchFriendRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SearchFriendRequest, search_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SearchFriendRequest, search_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SearchFriendRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SearchFriendRespone, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::SearchFriendRespone, friends_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddFriendRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddFriendRequest, friend_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddFriendRequest, friend_remark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddFriendRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::friendlist::AddFriendRequest, validatedata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::youliao::pdu::friendlist::Group_Friend)},
  { 7, -1, sizeof(::youliao::pdu::friendlist::FriendListRequest)},
  { 15, 22, sizeof(::youliao::pdu::friendlist::FriendListRespone_FriendListEntry_DoNotUse)},
  { 24, -1, sizeof(::youliao::pdu::friendlist::FriendListRespone)},
  { 31, -1, sizeof(::youliao::pdu::friendlist::GroupsRequest)},
  { 37, 44, sizeof(::youliao::pdu::friendlist::GroupsRespone_UserGroupsEntry_DoNotUse)},
  { 46, -1, sizeof(::youliao::pdu::friendlist::GroupsRespone)},
  { 53, -1, sizeof(::youliao::pdu::friendlist::FriendStatusChangeMessage)},
  { 60, -1, sizeof(::youliao::pdu::friendlist::SignatureChangeResquest)},
  { 67, -1, sizeof(::youliao::pdu::friendlist::SignatureChangeRespone)},
  { 75, -1, sizeof(::youliao::pdu::friendlist::FriendSignatureChangedNotify)},
  { 82, -1, sizeof(::youliao::pdu::friendlist::ModifyFriendGroupNameRequest)},
  { 90, -1, sizeof(::youliao::pdu::friendlist::AddNewFriendGroupRequest)},
  { 97, -1, sizeof(::youliao::pdu::friendlist::AddNewFriendGroupRespone)},
  { 105, -1, sizeof(::youliao::pdu::friendlist::RenameFriendGroupRequest)},
  { 113, -1, sizeof(::youliao::pdu::friendlist::DeleteFriendGroupRequest)},
  { 120, -1, sizeof(::youliao::pdu::friendlist::MoveFriendToGroupRequest)},
  { 128, -1, sizeof(::youliao::pdu::friendlist::DeleteFriendRequest)},
  { 135, -1, sizeof(::youliao::pdu::friendlist::ModifyFriendRemarkRequest)},
  { 143, -1, sizeof(::youliao::pdu::friendlist::SearchFriendRequest)},
  { 151, -1, sizeof(::youliao::pdu::friendlist::SearchFriendRespone)},
  { 158, -1, sizeof(::youliao::pdu::friendlist::AddFriendRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_Group_Friend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_FriendListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_FriendListRespone_FriendListEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_FriendListRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_GroupsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_GroupsRespone_UserGroupsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_GroupsRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_FriendStatusChangeMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_SignatureChangeResquest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_SignatureChangeRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_FriendSignatureChangedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_ModifyFriendGroupNameRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_AddNewFriendGroupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_AddNewFriendGroupRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_RenameFriendGroupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_DeleteFriendGroupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_MoveFriendToGroupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_DeleteFriendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_ModifyFriendRemarkRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_SearchFriendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_SearchFriendRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::friendlist::_AddFriendRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "youliao.friendlist.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 22);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030youliao.friendlist.proto\022\026youliao.pdu."
      "friendlist\032\022youliao.base.proto\"N\n\014Group_"
      "Friend\022\020\n\010group_id\030\001 \001(\r\022,\n\006friend\030\003 \003(\013"
      "2\034.youliao.pdu.base.FriendInfo\"O\n\021Friend"
      "ListRequest\022\017\n\007user_id\030\001 \001(\r\022\024\n\014msg_serv"
      "_idx\030\002 \001(\r\022\023\n\013attach_data\030\024 \001(\014\"\321\001\n\021Frie"
      "ndListRespone\022N\n\013friend_list\030\001 \003(\01329.you"
      "liao.pdu.friendlist.FriendListRespone.Fr"
      "iendListEntry\022\023\n\013attach_data\030\024 \001(\014\032W\n\017Fr"
      "iendListEntry\022\013\n\003key\030\001 \001(\r\0223\n\005value\030\002 \001("
      "\0132$.youliao.pdu.friendlist.Group_Friend:"
      "\0028\001\" \n\rGroupsRequest\022\017\n\007user_id\030\001 \001(\r\"\237\001"
      "\n\rGroupsRespone\022\017\n\007user_id\030\001 \001(\r\022J\n\013user"
      "_groups\030\002 \003(\01325.youliao.pdu.friendlist.G"
      "roupsRespone.UserGroupsEntry\0321\n\017UserGrou"
      "psEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\t:\0028\001\""
      "h\n\031FriendStatusChangeMessage\022\017\n\007user_id\030"
      "\001 \001(\r\022:\n\020user_status_type\030\002 \001(\0162 .youlia"
      "o.pdu.base.UserStatusType\"B\n\027SignatureCh"
      "angeResquest\022\017\n\007user_id\030\001 \001(\r\022\026\n\016user_si"
      "gnature\030\002 \001(\t\"t\n\026SignatureChangeRespone\022"
      "\017\n\007user_id\030\001 \001(\r\022\026\n\016user_signature\030\002 \001(\t"
      "\0221\n\013result_type\030\003 \001(\0162\034.youliao.pdu.base"
      ".ResultType\"K\n\034FriendSignatureChangedNot"
      "ify\022\021\n\tfriend_id\030\001 \001(\r\022\030\n\020friend_signatr"
      "ue\030\002 \001(\t\"Y\n\034ModifyFriendGroupNameRequest"
      "\022\017\n\007user_id\030\001 \001(\r\022\020\n\010group_id\030\002 \001(\r\022\026\n\016n"
      "ew_group_name\030\003 \001(\t\"C\n\030AddNewFriendGroup"
      "Request\022\017\n\007user_id\030\001 \001(\r\022\026\n\016new_group_na"
      "me\030\002 \001(\t\"Q\n\030AddNewFriendGroupRespone\022\017\n\007"
      "user_id\030\001 \001(\r\022\020\n\010group_id\030\002 \001(\r\022\022\n\ngroup"
      "_name\030\003 \001(\t\"U\n\030RenameFriendGroupRequest\022"
      "\017\n\007user_id\030\001 \001(\r\022\020\n\010group_id\030\002 \001(\r\022\026\n\016gr"
      "oup_new_name\030\003 \001(\t\"=\n\030DeleteFriendGroupR"
      "equest\022\017\n\007user_id\030\001 \001(\r\022\020\n\010group_id\030\002 \001("
      "\r\"P\n\030MoveFriendToGroupRequest\022\017\n\007user_id"
      "\030\001 \001(\r\022\021\n\tfriend_id\030\002 \001(\r\022\020\n\010group_id\030\003 "
      "\001(\r\"9\n\023DeleteFriendRequest\022\017\n\007user_id\030\001 "
      "\001(\r\022\021\n\tfriend_id\030\002 \001(\r\"V\n\031ModifyFriendRe"
      "markRequest\022\017\n\007user_id\030\001 \001(\r\022\021\n\tfriend_i"
      "d\030\002 \001(\r\022\025\n\rfriend_remark\030\003 \001(\t\"n\n\023Search"
      "FriendRequest\022\017\n\007user_id\030\001 \001(\r\022\023\n\013search"
      "_data\030\002 \001(\t\0221\n\013search_type\030\003 \001(\0162\034.youli"
      "ao.pdu.base.SearchType\"U\n\023SearchFriendRe"
      "spone\022\017\n\007user_id\030\001 \001(\r\022-\n\007friends\030\002 \003(\0132"
      "\034.youliao.pdu.base.FriendInfo\"u\n\020AddFrie"
      "ndRequest\022\017\n\007user_id\030\001 \001(\r\022\021\n\tfriend_id\030"
      "\002 \001(\r\022\025\n\rfriend_remark\030\003 \001(\t\022\020\n\010group_id"
      "\030\004 \001(\r\022\024\n\014validateData\030\005 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1956);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "youliao.friendlist.proto", &protobuf_RegisterTypes);
  ::protobuf_youliao_2ebase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_youliao_2efriendlist_2eproto
namespace youliao {
namespace pdu {
namespace friendlist {

// ===================================================================

void Group_Friend::InitAsDefaultInstance() {
}
void Group_Friend::clear_friend_() {
  friend__.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Group_Friend::kGroupIdFieldNumber;
const int Group_Friend::kFriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Group_Friend::Group_Friend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsGroup_Friend();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.Group_Friend)
}
Group_Friend::Group_Friend(const Group_Friend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend__(from.friend__),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.Group_Friend)
}

void Group_Friend::SharedCtor() {
  group_id_ = 0u;
  _cached_size_ = 0;
}

Group_Friend::~Group_Friend() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.Group_Friend)
  SharedDtor();
}

void Group_Friend::SharedDtor() {
}

void Group_Friend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Group_Friend::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Group_Friend& Group_Friend::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsGroup_Friend();
  return *internal_default_instance();
}


void Group_Friend::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.Group_Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend__.Clear();
  group_id_ = 0u;
  _internal_metadata_.Clear();
}

bool Group_Friend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.Group_Friend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .youliao.pdu.base.FriendInfo friend = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_friend_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.Group_Friend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.Group_Friend)
  return false;
#undef DO_
}

void Group_Friend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.Group_Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // repeated .youliao.pdu.base.FriendInfo friend = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend__size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->friend_(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.Group_Friend)
}

::google::protobuf::uint8* Group_Friend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.Group_Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group_id(), target);
  }

  // repeated .youliao.pdu.base.FriendInfo friend = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend__size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->friend_(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.Group_Friend)
  return target;
}

size_t Group_Friend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.Group_Friend)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .youliao.pdu.base.FriendInfo friend = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->friend__size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->friend_(static_cast<int>(i)));
    }
  }

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Group_Friend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.Group_Friend)
  GOOGLE_DCHECK_NE(&from, this);
  const Group_Friend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Group_Friend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.Group_Friend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.Group_Friend)
    MergeFrom(*source);
  }
}

void Group_Friend::MergeFrom(const Group_Friend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.Group_Friend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend__.MergeFrom(from.friend__);
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void Group_Friend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.Group_Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Group_Friend::CopyFrom(const Group_Friend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.Group_Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Group_Friend::IsInitialized() const {
  return true;
}

void Group_Friend::Swap(Group_Friend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Group_Friend::InternalSwap(Group_Friend* other) {
  using std::swap;
  CastToBase(&friend__)->InternalSwap(CastToBase(&other->friend__));
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Group_Friend::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendListRequest::kUserIdFieldNumber;
const int FriendListRequest::kMsgServIdxFieldNumber;
const int FriendListRequest::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendListRequest::FriendListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsFriendListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.FriendListRequest)
}
FriendListRequest::FriendListRequest(const FriendListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_serv_idx_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(msg_serv_idx_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.FriendListRequest)
}

void FriendListRequest::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_serv_idx_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(msg_serv_idx_));
  _cached_size_ = 0;
}

FriendListRequest::~FriendListRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.FriendListRequest)
  SharedDtor();
}

void FriendListRequest::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendListRequest::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendListRequest& FriendListRequest::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsFriendListRequest();
  return *internal_default_instance();
}


void FriendListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.FriendListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_serv_idx_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(msg_serv_idx_));
  _internal_metadata_.Clear();
}

bool FriendListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.FriendListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msg_serv_idx = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_serv_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.FriendListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.FriendListRequest)
  return false;
#undef DO_
}

void FriendListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.FriendListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 msg_serv_idx = 2;
  if (this->msg_serv_idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msg_serv_idx(), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.FriendListRequest)
}

::google::protobuf::uint8* FriendListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.FriendListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 msg_serv_idx = 2;
  if (this->msg_serv_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msg_serv_idx(), target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.FriendListRequest)
  return target;
}

size_t FriendListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.FriendListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 msg_serv_idx = 2;
  if (this->msg_serv_idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_serv_idx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.FriendListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.FriendListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.FriendListRequest)
    MergeFrom(*source);
  }
}

void FriendListRequest::MergeFrom(const FriendListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.FriendListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.msg_serv_idx() != 0) {
    set_msg_serv_idx(from.msg_serv_idx());
  }
}

void FriendListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.FriendListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendListRequest::CopyFrom(const FriendListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.FriendListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendListRequest::IsInitialized() const {
  return true;
}

void FriendListRequest::Swap(FriendListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendListRequest::InternalSwap(FriendListRequest* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  swap(msg_serv_idx_, other->msg_serv_idx_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendListRequest::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

FriendListRespone_FriendListEntry_DoNotUse::FriendListRespone_FriendListEntry_DoNotUse() {}
FriendListRespone_FriendListEntry_DoNotUse::FriendListRespone_FriendListEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void FriendListRespone_FriendListEntry_DoNotUse::MergeFrom(const FriendListRespone_FriendListEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata FriendListRespone_FriendListEntry_DoNotUse::GetMetadata() const {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[2];
}
void FriendListRespone_FriendListEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void FriendListRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendListRespone::kFriendListFieldNumber;
const int FriendListRespone::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendListRespone::FriendListRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsFriendListRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.FriendListRespone)
}
FriendListRespone::FriendListRespone(const FriendListRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friend_list_.MergeFrom(from.friend_list_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.FriendListRespone)
}

void FriendListRespone::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FriendListRespone::~FriendListRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.FriendListRespone)
  SharedDtor();
}

void FriendListRespone::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendListRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendListRespone::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendListRespone& FriendListRespone::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsFriendListRespone();
  return *internal_default_instance();
}


void FriendListRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.FriendListRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_list_.Clear();
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FriendListRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.FriendListRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .youliao.pdu.friendlist.Group_Friend> friend_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          FriendListRespone_FriendListEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              FriendListRespone_FriendListEntry_DoNotUse,
              ::google::protobuf::uint32, ::youliao::pdu::friendlist::Group_Friend,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::youliao::pdu::friendlist::Group_Friend > > parser(&friend_list_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.FriendListRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.FriendListRespone)
  return false;
#undef DO_
}

void FriendListRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.FriendListRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .youliao.pdu.friendlist.Group_Friend> friend_list = 1;
  if (!this->friend_list().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::youliao::pdu::friendlist::Group_Friend >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->friend_list().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->friend_list().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::youliao::pdu::friendlist::Group_Friend >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::youliao::pdu::friendlist::Group_Friend >::const_iterator
          it = this->friend_list().begin();
          it != this->friend_list().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<FriendListRespone_FriendListEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(friend_list_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<FriendListRespone_FriendListEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::youliao::pdu::friendlist::Group_Friend >::const_iterator
          it = this->friend_list().begin();
          it != this->friend_list().end(); ++it) {
        entry.reset(friend_list_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.FriendListRespone)
}

::google::protobuf::uint8* FriendListRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.FriendListRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .youliao.pdu.friendlist.Group_Friend> friend_list = 1;
  if (!this->friend_list().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::youliao::pdu::friendlist::Group_Friend >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->friend_list().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->friend_list().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::youliao::pdu::friendlist::Group_Friend >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::youliao::pdu::friendlist::Group_Friend >::const_iterator
          it = this->friend_list().begin();
          it != this->friend_list().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<FriendListRespone_FriendListEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(friend_list_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<FriendListRespone_FriendListEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::youliao::pdu::friendlist::Group_Friend >::const_iterator
          it = this->friend_list().begin();
          it != this->friend_list().end(); ++it) {
        entry.reset(friend_list_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.FriendListRespone)
  return target;
}

size_t FriendListRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.FriendListRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .youliao.pdu.friendlist.Group_Friend> friend_list = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->friend_list_size());
  {
    ::google::protobuf::scoped_ptr<FriendListRespone_FriendListEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::youliao::pdu::friendlist::Group_Friend >::const_iterator
        it = this->friend_list().begin();
        it != this->friend_list().end(); ++it) {
      entry.reset(friend_list_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendListRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.FriendListRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendListRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendListRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.FriendListRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.FriendListRespone)
    MergeFrom(*source);
  }
}

void FriendListRespone::MergeFrom(const FriendListRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.FriendListRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_list_.MergeFrom(from.friend_list_);
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
}

void FriendListRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.FriendListRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendListRespone::CopyFrom(const FriendListRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.FriendListRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendListRespone::IsInitialized() const {
  return true;
}

void FriendListRespone::Swap(FriendListRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendListRespone::InternalSwap(FriendListRespone* other) {
  using std::swap;
  friend_list_.Swap(&other->friend_list_);
  attach_data_.Swap(&other->attach_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendListRespone::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GroupsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupsRequest::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupsRequest::GroupsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsGroupsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.GroupsRequest)
}
GroupsRequest::GroupsRequest(const GroupsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.GroupsRequest)
}

void GroupsRequest::SharedCtor() {
  user_id_ = 0u;
  _cached_size_ = 0;
}

GroupsRequest::~GroupsRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.GroupsRequest)
  SharedDtor();
}

void GroupsRequest::SharedDtor() {
}

void GroupsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupsRequest::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupsRequest& GroupsRequest::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsGroupsRequest();
  return *internal_default_instance();
}


void GroupsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.GroupsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GroupsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.GroupsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.GroupsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.GroupsRequest)
  return false;
#undef DO_
}

void GroupsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.GroupsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.GroupsRequest)
}

::google::protobuf::uint8* GroupsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.GroupsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.GroupsRequest)
  return target;
}

size_t GroupsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.GroupsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.GroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.GroupsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.GroupsRequest)
    MergeFrom(*source);
  }
}

void GroupsRequest::MergeFrom(const GroupsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.GroupsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GroupsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.GroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupsRequest::CopyFrom(const GroupsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.GroupsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupsRequest::IsInitialized() const {
  return true;
}

void GroupsRequest::Swap(GroupsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupsRequest::InternalSwap(GroupsRequest* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupsRequest::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

GroupsRespone_UserGroupsEntry_DoNotUse::GroupsRespone_UserGroupsEntry_DoNotUse() {}
GroupsRespone_UserGroupsEntry_DoNotUse::GroupsRespone_UserGroupsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void GroupsRespone_UserGroupsEntry_DoNotUse::MergeFrom(const GroupsRespone_UserGroupsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata GroupsRespone_UserGroupsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[5];
}
void GroupsRespone_UserGroupsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void GroupsRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupsRespone::kUserIdFieldNumber;
const int GroupsRespone::kUserGroupsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupsRespone::GroupsRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsGroupsRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.GroupsRespone)
}
GroupsRespone::GroupsRespone(const GroupsRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_groups_.MergeFrom(from.user_groups_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.GroupsRespone)
}

void GroupsRespone::SharedCtor() {
  user_id_ = 0u;
  _cached_size_ = 0;
}

GroupsRespone::~GroupsRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.GroupsRespone)
  SharedDtor();
}

void GroupsRespone::SharedDtor() {
}

void GroupsRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupsRespone::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupsRespone& GroupsRespone::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsGroupsRespone();
  return *internal_default_instance();
}


void GroupsRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.GroupsRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_groups_.Clear();
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GroupsRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.GroupsRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, string> user_groups = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          GroupsRespone_UserGroupsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              GroupsRespone_UserGroupsEntry_DoNotUse,
              ::google::protobuf::uint32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string > > parser(&user_groups_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.friendlist.GroupsRespone.UserGroupsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.GroupsRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.GroupsRespone)
  return false;
#undef DO_
}

void GroupsRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.GroupsRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // map<uint32, string> user_groups = 2;
  if (!this->user_groups().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "youliao.pdu.friendlist.GroupsRespone.UserGroupsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->user_groups().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->user_groups().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->user_groups().begin();
          it != this->user_groups().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupsRespone_UserGroupsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(user_groups_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupsRespone_UserGroupsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->user_groups().begin();
          it != this->user_groups().end(); ++it) {
        entry.reset(user_groups_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.GroupsRespone)
}

::google::protobuf::uint8* GroupsRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.GroupsRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // map<uint32, string> user_groups = 2;
  if (!this->user_groups().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "youliao.pdu.friendlist.GroupsRespone.UserGroupsEntry.value");
      }
    };

    if (deterministic &&
        this->user_groups().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->user_groups().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->user_groups().begin();
          it != this->user_groups().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupsRespone_UserGroupsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(user_groups_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupsRespone_UserGroupsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->user_groups().begin();
          it != this->user_groups().end(); ++it) {
        entry.reset(user_groups_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.GroupsRespone)
  return target;
}

size_t GroupsRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.GroupsRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, string> user_groups = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->user_groups_size());
  {
    ::google::protobuf::scoped_ptr<GroupsRespone_UserGroupsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
        it = this->user_groups().begin();
        it != this->user_groups().end(); ++it) {
      entry.reset(user_groups_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupsRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.GroupsRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupsRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupsRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.GroupsRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.GroupsRespone)
    MergeFrom(*source);
  }
}

void GroupsRespone::MergeFrom(const GroupsRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.GroupsRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_groups_.MergeFrom(from.user_groups_);
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GroupsRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.GroupsRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupsRespone::CopyFrom(const GroupsRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.GroupsRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupsRespone::IsInitialized() const {
  return true;
}

void GroupsRespone::Swap(GroupsRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupsRespone::InternalSwap(GroupsRespone* other) {
  using std::swap;
  user_groups_.Swap(&other->user_groups_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupsRespone::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendStatusChangeMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendStatusChangeMessage::kUserIdFieldNumber;
const int FriendStatusChangeMessage::kUserStatusTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendStatusChangeMessage::FriendStatusChangeMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsFriendStatusChangeMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.FriendStatusChangeMessage)
}
FriendStatusChangeMessage::FriendStatusChangeMessage(const FriendStatusChangeMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_status_type_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(user_status_type_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.FriendStatusChangeMessage)
}

void FriendStatusChangeMessage::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_status_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(user_status_type_));
  _cached_size_ = 0;
}

FriendStatusChangeMessage::~FriendStatusChangeMessage() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.FriendStatusChangeMessage)
  SharedDtor();
}

void FriendStatusChangeMessage::SharedDtor() {
}

void FriendStatusChangeMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendStatusChangeMessage::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendStatusChangeMessage& FriendStatusChangeMessage::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsFriendStatusChangeMessage();
  return *internal_default_instance();
}


void FriendStatusChangeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.FriendStatusChangeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_status_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(user_status_type_));
  _internal_metadata_.Clear();
}

bool FriendStatusChangeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.FriendStatusChangeMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .youliao.pdu.base.UserStatusType user_status_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_user_status_type(static_cast< ::youliao::pdu::base::UserStatusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.FriendStatusChangeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.FriendStatusChangeMessage)
  return false;
#undef DO_
}

void FriendStatusChangeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.FriendStatusChangeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .youliao.pdu.base.UserStatusType user_status_type = 2;
  if (this->user_status_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->user_status_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.FriendStatusChangeMessage)
}

::google::protobuf::uint8* FriendStatusChangeMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.FriendStatusChangeMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .youliao.pdu.base.UserStatusType user_status_type = 2;
  if (this->user_status_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->user_status_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.FriendStatusChangeMessage)
  return target;
}

size_t FriendStatusChangeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.FriendStatusChangeMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .youliao.pdu.base.UserStatusType user_status_type = 2;
  if (this->user_status_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->user_status_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendStatusChangeMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.FriendStatusChangeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendStatusChangeMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendStatusChangeMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.FriendStatusChangeMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.FriendStatusChangeMessage)
    MergeFrom(*source);
  }
}

void FriendStatusChangeMessage::MergeFrom(const FriendStatusChangeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.FriendStatusChangeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.user_status_type() != 0) {
    set_user_status_type(from.user_status_type());
  }
}

void FriendStatusChangeMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.FriendStatusChangeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendStatusChangeMessage::CopyFrom(const FriendStatusChangeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.FriendStatusChangeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendStatusChangeMessage::IsInitialized() const {
  return true;
}

void FriendStatusChangeMessage::Swap(FriendStatusChangeMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendStatusChangeMessage::InternalSwap(FriendStatusChangeMessage* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(user_status_type_, other->user_status_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendStatusChangeMessage::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignatureChangeResquest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignatureChangeResquest::kUserIdFieldNumber;
const int SignatureChangeResquest::kUserSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignatureChangeResquest::SignatureChangeResquest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsSignatureChangeResquest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.SignatureChangeResquest)
}
SignatureChangeResquest::SignatureChangeResquest(const SignatureChangeResquest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_signature().size() > 0) {
    user_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_signature_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.SignatureChangeResquest)
}

void SignatureChangeResquest::SharedCtor() {
  user_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

SignatureChangeResquest::~SignatureChangeResquest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.SignatureChangeResquest)
  SharedDtor();
}

void SignatureChangeResquest::SharedDtor() {
  user_signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignatureChangeResquest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignatureChangeResquest::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignatureChangeResquest& SignatureChangeResquest::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsSignatureChangeResquest();
  return *internal_default_instance();
}


void SignatureChangeResquest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.SignatureChangeResquest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SignatureChangeResquest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.SignatureChangeResquest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_signature().data(), static_cast<int>(this->user_signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.friendlist.SignatureChangeResquest.user_signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.SignatureChangeResquest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.SignatureChangeResquest)
  return false;
#undef DO_
}

void SignatureChangeResquest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.SignatureChangeResquest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // string user_signature = 2;
  if (this->user_signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_signature().data(), static_cast<int>(this->user_signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.SignatureChangeResquest.user_signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.SignatureChangeResquest)
}

::google::protobuf::uint8* SignatureChangeResquest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.SignatureChangeResquest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // string user_signature = 2;
  if (this->user_signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_signature().data(), static_cast<int>(this->user_signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.SignatureChangeResquest.user_signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.SignatureChangeResquest)
  return target;
}

size_t SignatureChangeResquest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.SignatureChangeResquest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_signature = 2;
  if (this->user_signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_signature());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignatureChangeResquest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.SignatureChangeResquest)
  GOOGLE_DCHECK_NE(&from, this);
  const SignatureChangeResquest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignatureChangeResquest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.SignatureChangeResquest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.SignatureChangeResquest)
    MergeFrom(*source);
  }
}

void SignatureChangeResquest::MergeFrom(const SignatureChangeResquest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.SignatureChangeResquest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_signature().size() > 0) {

    user_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_signature_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void SignatureChangeResquest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.SignatureChangeResquest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignatureChangeResquest::CopyFrom(const SignatureChangeResquest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.SignatureChangeResquest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignatureChangeResquest::IsInitialized() const {
  return true;
}

void SignatureChangeResquest::Swap(SignatureChangeResquest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignatureChangeResquest::InternalSwap(SignatureChangeResquest* other) {
  using std::swap;
  user_signature_.Swap(&other->user_signature_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignatureChangeResquest::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignatureChangeRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignatureChangeRespone::kUserIdFieldNumber;
const int SignatureChangeRespone::kUserSignatureFieldNumber;
const int SignatureChangeRespone::kResultTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignatureChangeRespone::SignatureChangeRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsSignatureChangeRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.SignatureChangeRespone)
}
SignatureChangeRespone::SignatureChangeRespone(const SignatureChangeRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_signature().size() > 0) {
    user_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_signature_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_type_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(result_type_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.SignatureChangeRespone)
}

void SignatureChangeRespone::SharedCtor() {
  user_signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(result_type_));
  _cached_size_ = 0;
}

SignatureChangeRespone::~SignatureChangeRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.SignatureChangeRespone)
  SharedDtor();
}

void SignatureChangeRespone::SharedDtor() {
  user_signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignatureChangeRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignatureChangeRespone::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignatureChangeRespone& SignatureChangeRespone::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsSignatureChangeRespone();
  return *internal_default_instance();
}


void SignatureChangeRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.SignatureChangeRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(result_type_));
  _internal_metadata_.Clear();
}

bool SignatureChangeRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.SignatureChangeRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_signature().data(), static_cast<int>(this->user_signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.friendlist.SignatureChangeRespone.user_signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .youliao.pdu.base.ResultType result_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result_type(static_cast< ::youliao::pdu::base::ResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.SignatureChangeRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.SignatureChangeRespone)
  return false;
#undef DO_
}

void SignatureChangeRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.SignatureChangeRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // string user_signature = 2;
  if (this->user_signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_signature().data(), static_cast<int>(this->user_signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.SignatureChangeRespone.user_signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_signature(), output);
  }

  // .youliao.pdu.base.ResultType result_type = 3;
  if (this->result_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.SignatureChangeRespone)
}

::google::protobuf::uint8* SignatureChangeRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.SignatureChangeRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // string user_signature = 2;
  if (this->user_signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_signature().data(), static_cast<int>(this->user_signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.SignatureChangeRespone.user_signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_signature(), target);
  }

  // .youliao.pdu.base.ResultType result_type = 3;
  if (this->result_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.SignatureChangeRespone)
  return target;
}

size_t SignatureChangeRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.SignatureChangeRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_signature = 2;
  if (this->user_signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_signature());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .youliao.pdu.base.ResultType result_type = 3;
  if (this->result_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignatureChangeRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.SignatureChangeRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const SignatureChangeRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignatureChangeRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.SignatureChangeRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.SignatureChangeRespone)
    MergeFrom(*source);
  }
}

void SignatureChangeRespone::MergeFrom(const SignatureChangeRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.SignatureChangeRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_signature().size() > 0) {

    user_signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_signature_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.result_type() != 0) {
    set_result_type(from.result_type());
  }
}

void SignatureChangeRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.SignatureChangeRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignatureChangeRespone::CopyFrom(const SignatureChangeRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.SignatureChangeRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignatureChangeRespone::IsInitialized() const {
  return true;
}

void SignatureChangeRespone::Swap(SignatureChangeRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignatureChangeRespone::InternalSwap(SignatureChangeRespone* other) {
  using std::swap;
  user_signature_.Swap(&other->user_signature_);
  swap(user_id_, other->user_id_);
  swap(result_type_, other->result_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignatureChangeRespone::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FriendSignatureChangedNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendSignatureChangedNotify::kFriendIdFieldNumber;
const int FriendSignatureChangedNotify::kFriendSignatrueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendSignatureChangedNotify::FriendSignatureChangedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsFriendSignatureChangedNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.FriendSignatureChangedNotify)
}
FriendSignatureChangedNotify::FriendSignatureChangedNotify(const FriendSignatureChangedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friend_signatrue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_signatrue().size() > 0) {
    friend_signatrue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_signatrue_);
  }
  friend_id_ = from.friend_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.FriendSignatureChangedNotify)
}

void FriendSignatureChangedNotify::SharedCtor() {
  friend_signatrue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_id_ = 0u;
  _cached_size_ = 0;
}

FriendSignatureChangedNotify::~FriendSignatureChangedNotify() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  SharedDtor();
}

void FriendSignatureChangedNotify::SharedDtor() {
  friend_signatrue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendSignatureChangedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendSignatureChangedNotify::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendSignatureChangedNotify& FriendSignatureChangedNotify::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsFriendSignatureChangedNotify();
  return *internal_default_instance();
}


void FriendSignatureChangedNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_signatrue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend_id_ = 0u;
  _internal_metadata_.Clear();
}

bool FriendSignatureChangedNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 friend_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_signatrue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_signatrue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_signatrue().data(), static_cast<int>(this->friend_signatrue().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.friendlist.FriendSignatureChangedNotify.friend_signatrue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  return false;
#undef DO_
}

void FriendSignatureChangedNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 friend_id = 1;
  if (this->friend_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->friend_id(), output);
  }

  // string friend_signatrue = 2;
  if (this->friend_signatrue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_signatrue().data(), static_cast<int>(this->friend_signatrue().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.FriendSignatureChangedNotify.friend_signatrue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->friend_signatrue(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.FriendSignatureChangedNotify)
}

::google::protobuf::uint8* FriendSignatureChangedNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 friend_id = 1;
  if (this->friend_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->friend_id(), target);
  }

  // string friend_signatrue = 2;
  if (this->friend_signatrue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_signatrue().data(), static_cast<int>(this->friend_signatrue().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.FriendSignatureChangedNotify.friend_signatrue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->friend_signatrue(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  return target;
}

size_t FriendSignatureChangedNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string friend_signatrue = 2;
  if (this->friend_signatrue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_signatrue());
  }

  // uint32 friend_id = 1;
  if (this->friend_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendSignatureChangedNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendSignatureChangedNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendSignatureChangedNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.FriendSignatureChangedNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.FriendSignatureChangedNotify)
    MergeFrom(*source);
  }
}

void FriendSignatureChangedNotify::MergeFrom(const FriendSignatureChangedNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.friend_signatrue().size() > 0) {

    friend_signatrue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_signatrue_);
  }
  if (from.friend_id() != 0) {
    set_friend_id(from.friend_id());
  }
}

void FriendSignatureChangedNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendSignatureChangedNotify::CopyFrom(const FriendSignatureChangedNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.FriendSignatureChangedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendSignatureChangedNotify::IsInitialized() const {
  return true;
}

void FriendSignatureChangedNotify::Swap(FriendSignatureChangedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendSignatureChangedNotify::InternalSwap(FriendSignatureChangedNotify* other) {
  using std::swap;
  friend_signatrue_.Swap(&other->friend_signatrue_);
  swap(friend_id_, other->friend_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendSignatureChangedNotify::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModifyFriendGroupNameRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyFriendGroupNameRequest::kUserIdFieldNumber;
const int ModifyFriendGroupNameRequest::kGroupIdFieldNumber;
const int ModifyFriendGroupNameRequest::kNewGroupNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyFriendGroupNameRequest::ModifyFriendGroupNameRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsModifyFriendGroupNameRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
}
ModifyFriendGroupNameRequest::ModifyFriendGroupNameRequest(const ModifyFriendGroupNameRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  new_group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.new_group_name().size() > 0) {
    new_group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_group_name_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
}

void ModifyFriendGroupNameRequest::SharedCtor() {
  new_group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

ModifyFriendGroupNameRequest::~ModifyFriendGroupNameRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  SharedDtor();
}

void ModifyFriendGroupNameRequest::SharedDtor() {
  new_group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyFriendGroupNameRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyFriendGroupNameRequest::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyFriendGroupNameRequest& ModifyFriendGroupNameRequest::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsModifyFriendGroupNameRequest();
  return *internal_default_instance();
}


void ModifyFriendGroupNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool ModifyFriendGroupNameRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string new_group_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_group_name().data(), static_cast<int>(this->new_group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.friendlist.ModifyFriendGroupNameRequest.new_group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  return false;
#undef DO_
}

void ModifyFriendGroupNameRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // string new_group_name = 3;
  if (this->new_group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_group_name().data(), static_cast<int>(this->new_group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.ModifyFriendGroupNameRequest.new_group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->new_group_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
}

::google::protobuf::uint8* ModifyFriendGroupNameRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // string new_group_name = 3;
  if (this->new_group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_group_name().data(), static_cast<int>(this->new_group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.ModifyFriendGroupNameRequest.new_group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->new_group_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  return target;
}

size_t ModifyFriendGroupNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string new_group_name = 3;
  if (this->new_group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_group_name());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyFriendGroupNameRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyFriendGroupNameRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyFriendGroupNameRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
    MergeFrom(*source);
  }
}

void ModifyFriendGroupNameRequest::MergeFrom(const ModifyFriendGroupNameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.new_group_name().size() > 0) {

    new_group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_group_name_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void ModifyFriendGroupNameRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyFriendGroupNameRequest::CopyFrom(const ModifyFriendGroupNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.ModifyFriendGroupNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyFriendGroupNameRequest::IsInitialized() const {
  return true;
}

void ModifyFriendGroupNameRequest::Swap(ModifyFriendGroupNameRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyFriendGroupNameRequest::InternalSwap(ModifyFriendGroupNameRequest* other) {
  using std::swap;
  new_group_name_.Swap(&other->new_group_name_);
  swap(user_id_, other->user_id_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyFriendGroupNameRequest::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddNewFriendGroupRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddNewFriendGroupRequest::kUserIdFieldNumber;
const int AddNewFriendGroupRequest::kNewGroupNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddNewFriendGroupRequest::AddNewFriendGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsAddNewFriendGroupRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.AddNewFriendGroupRequest)
}
AddNewFriendGroupRequest::AddNewFriendGroupRequest(const AddNewFriendGroupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  new_group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.new_group_name().size() > 0) {
    new_group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_group_name_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.AddNewFriendGroupRequest)
}

void AddNewFriendGroupRequest::SharedCtor() {
  new_group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

AddNewFriendGroupRequest::~AddNewFriendGroupRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  SharedDtor();
}

void AddNewFriendGroupRequest::SharedDtor() {
  new_group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddNewFriendGroupRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddNewFriendGroupRequest::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddNewFriendGroupRequest& AddNewFriendGroupRequest::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsAddNewFriendGroupRequest();
  return *internal_default_instance();
}


void AddNewFriendGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AddNewFriendGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string new_group_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_group_name().data(), static_cast<int>(this->new_group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.friendlist.AddNewFriendGroupRequest.new_group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  return false;
#undef DO_
}

void AddNewFriendGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // string new_group_name = 2;
  if (this->new_group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_group_name().data(), static_cast<int>(this->new_group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.AddNewFriendGroupRequest.new_group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->new_group_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.AddNewFriendGroupRequest)
}

::google::protobuf::uint8* AddNewFriendGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // string new_group_name = 2;
  if (this->new_group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_group_name().data(), static_cast<int>(this->new_group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.AddNewFriendGroupRequest.new_group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->new_group_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  return target;
}

size_t AddNewFriendGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string new_group_name = 2;
  if (this->new_group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_group_name());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddNewFriendGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNewFriendGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddNewFriendGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.AddNewFriendGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.AddNewFriendGroupRequest)
    MergeFrom(*source);
  }
}

void AddNewFriendGroupRequest::MergeFrom(const AddNewFriendGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.new_group_name().size() > 0) {

    new_group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_group_name_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void AddNewFriendGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNewFriendGroupRequest::CopyFrom(const AddNewFriendGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.AddNewFriendGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNewFriendGroupRequest::IsInitialized() const {
  return true;
}

void AddNewFriendGroupRequest::Swap(AddNewFriendGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddNewFriendGroupRequest::InternalSwap(AddNewFriendGroupRequest* other) {
  using std::swap;
  new_group_name_.Swap(&other->new_group_name_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddNewFriendGroupRequest::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddNewFriendGroupRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddNewFriendGroupRespone::kUserIdFieldNumber;
const int AddNewFriendGroupRespone::kGroupIdFieldNumber;
const int AddNewFriendGroupRespone::kGroupNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddNewFriendGroupRespone::AddNewFriendGroupRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsAddNewFriendGroupRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.AddNewFriendGroupRespone)
}
AddNewFriendGroupRespone::AddNewFriendGroupRespone(const AddNewFriendGroupRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.AddNewFriendGroupRespone)
}

void AddNewFriendGroupRespone::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

AddNewFriendGroupRespone::~AddNewFriendGroupRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  SharedDtor();
}

void AddNewFriendGroupRespone::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddNewFriendGroupRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddNewFriendGroupRespone::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddNewFriendGroupRespone& AddNewFriendGroupRespone::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsAddNewFriendGroupRespone();
  return *internal_default_instance();
}


void AddNewFriendGroupRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool AddNewFriendGroupRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), static_cast<int>(this->group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.friendlist.AddNewFriendGroupRespone.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  return false;
#undef DO_
}

void AddNewFriendGroupRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // string group_name = 3;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.AddNewFriendGroupRespone.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->group_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.AddNewFriendGroupRespone)
}

::google::protobuf::uint8* AddNewFriendGroupRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // string group_name = 3;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.AddNewFriendGroupRespone.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->group_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  return target;
}

size_t AddNewFriendGroupRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string group_name = 3;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddNewFriendGroupRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const AddNewFriendGroupRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddNewFriendGroupRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.AddNewFriendGroupRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.AddNewFriendGroupRespone)
    MergeFrom(*source);
  }
}

void AddNewFriendGroupRespone::MergeFrom(const AddNewFriendGroupRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void AddNewFriendGroupRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddNewFriendGroupRespone::CopyFrom(const AddNewFriendGroupRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.AddNewFriendGroupRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddNewFriendGroupRespone::IsInitialized() const {
  return true;
}

void AddNewFriendGroupRespone::Swap(AddNewFriendGroupRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddNewFriendGroupRespone::InternalSwap(AddNewFriendGroupRespone* other) {
  using std::swap;
  group_name_.Swap(&other->group_name_);
  swap(user_id_, other->user_id_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddNewFriendGroupRespone::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RenameFriendGroupRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenameFriendGroupRequest::kUserIdFieldNumber;
const int RenameFriendGroupRequest::kGroupIdFieldNumber;
const int RenameFriendGroupRequest::kGroupNewNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenameFriendGroupRequest::RenameFriendGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsRenameFriendGroupRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.RenameFriendGroupRequest)
}
RenameFriendGroupRequest::RenameFriendGroupRequest(const RenameFriendGroupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_new_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_new_name().size() > 0) {
    group_new_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_new_name_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.RenameFriendGroupRequest)
}

void RenameFriendGroupRequest::SharedCtor() {
  group_new_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

RenameFriendGroupRequest::~RenameFriendGroupRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.RenameFriendGroupRequest)
  SharedDtor();
}

void RenameFriendGroupRequest::SharedDtor() {
  group_new_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RenameFriendGroupRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RenameFriendGroupRequest::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RenameFriendGroupRequest& RenameFriendGroupRequest::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsRenameFriendGroupRequest();
  return *internal_default_instance();
}


void RenameFriendGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.RenameFriendGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_new_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool RenameFriendGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.RenameFriendGroupRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_new_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_new_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_new_name().data(), static_cast<int>(this->group_new_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.friendlist.RenameFriendGroupRequest.group_new_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.RenameFriendGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.RenameFriendGroupRequest)
  return false;
#undef DO_
}

void RenameFriendGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.RenameFriendGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // string group_new_name = 3;
  if (this->group_new_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_new_name().data(), static_cast<int>(this->group_new_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.RenameFriendGroupRequest.group_new_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->group_new_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.RenameFriendGroupRequest)
}

::google::protobuf::uint8* RenameFriendGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.RenameFriendGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // string group_new_name = 3;
  if (this->group_new_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_new_name().data(), static_cast<int>(this->group_new_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.RenameFriendGroupRequest.group_new_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->group_new_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.RenameFriendGroupRequest)
  return target;
}

size_t RenameFriendGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.RenameFriendGroupRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string group_new_name = 3;
  if (this->group_new_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_new_name());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RenameFriendGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.RenameFriendGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RenameFriendGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RenameFriendGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.RenameFriendGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.RenameFriendGroupRequest)
    MergeFrom(*source);
  }
}

void RenameFriendGroupRequest::MergeFrom(const RenameFriendGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.RenameFriendGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_new_name().size() > 0) {

    group_new_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_new_name_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void RenameFriendGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.RenameFriendGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameFriendGroupRequest::CopyFrom(const RenameFriendGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.RenameFriendGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameFriendGroupRequest::IsInitialized() const {
  return true;
}

void RenameFriendGroupRequest::Swap(RenameFriendGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenameFriendGroupRequest::InternalSwap(RenameFriendGroupRequest* other) {
  using std::swap;
  group_new_name_.Swap(&other->group_new_name_);
  swap(user_id_, other->user_id_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RenameFriendGroupRequest::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteFriendGroupRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFriendGroupRequest::kUserIdFieldNumber;
const int DeleteFriendGroupRequest::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFriendGroupRequest::DeleteFriendGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsDeleteFriendGroupRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.DeleteFriendGroupRequest)
}
DeleteFriendGroupRequest::DeleteFriendGroupRequest(const DeleteFriendGroupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.DeleteFriendGroupRequest)
}

void DeleteFriendGroupRequest::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

DeleteFriendGroupRequest::~DeleteFriendGroupRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  SharedDtor();
}

void DeleteFriendGroupRequest::SharedDtor() {
}

void DeleteFriendGroupRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFriendGroupRequest::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteFriendGroupRequest& DeleteFriendGroupRequest::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsDeleteFriendGroupRequest();
  return *internal_default_instance();
}


void DeleteFriendGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool DeleteFriendGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  return false;
#undef DO_
}

void DeleteFriendGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.DeleteFriendGroupRequest)
}

::google::protobuf::uint8* DeleteFriendGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  return target;
}

size_t DeleteFriendGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFriendGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFriendGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFriendGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.DeleteFriendGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.DeleteFriendGroupRequest)
    MergeFrom(*source);
  }
}

void DeleteFriendGroupRequest::MergeFrom(const DeleteFriendGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void DeleteFriendGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFriendGroupRequest::CopyFrom(const DeleteFriendGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.DeleteFriendGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFriendGroupRequest::IsInitialized() const {
  return true;
}

void DeleteFriendGroupRequest::Swap(DeleteFriendGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFriendGroupRequest::InternalSwap(DeleteFriendGroupRequest* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFriendGroupRequest::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoveFriendToGroupRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveFriendToGroupRequest::kUserIdFieldNumber;
const int MoveFriendToGroupRequest::kFriendIdFieldNumber;
const int MoveFriendToGroupRequest::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveFriendToGroupRequest::MoveFriendToGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsMoveFriendToGroupRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.MoveFriendToGroupRequest)
}
MoveFriendToGroupRequest::MoveFriendToGroupRequest(const MoveFriendToGroupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.MoveFriendToGroupRequest)
}

void MoveFriendToGroupRequest::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

MoveFriendToGroupRequest::~MoveFriendToGroupRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  SharedDtor();
}

void MoveFriendToGroupRequest::SharedDtor() {
}

void MoveFriendToGroupRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveFriendToGroupRequest::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveFriendToGroupRequest& MoveFriendToGroupRequest::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsMoveFriendToGroupRequest();
  return *internal_default_instance();
}


void MoveFriendToGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool MoveFriendToGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  return false;
#undef DO_
}

void MoveFriendToGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->friend_id(), output);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.MoveFriendToGroupRequest)
}

::google::protobuf::uint8* MoveFriendToGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->friend_id(), target);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->group_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  return target;
}

size_t MoveFriendToGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_id());
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveFriendToGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveFriendToGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveFriendToGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.MoveFriendToGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.MoveFriendToGroupRequest)
    MergeFrom(*source);
  }
}

void MoveFriendToGroupRequest::MergeFrom(const MoveFriendToGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.friend_id() != 0) {
    set_friend_id(from.friend_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void MoveFriendToGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveFriendToGroupRequest::CopyFrom(const MoveFriendToGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.MoveFriendToGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveFriendToGroupRequest::IsInitialized() const {
  return true;
}

void MoveFriendToGroupRequest::Swap(MoveFriendToGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveFriendToGroupRequest::InternalSwap(MoveFriendToGroupRequest* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(friend_id_, other->friend_id_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MoveFriendToGroupRequest::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteFriendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFriendRequest::kUserIdFieldNumber;
const int DeleteFriendRequest::kFriendIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFriendRequest::DeleteFriendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsDeleteFriendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.DeleteFriendRequest)
}
DeleteFriendRequest::DeleteFriendRequest(const DeleteFriendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(friend_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.DeleteFriendRequest)
}

void DeleteFriendRequest::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(friend_id_));
  _cached_size_ = 0;
}

DeleteFriendRequest::~DeleteFriendRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.DeleteFriendRequest)
  SharedDtor();
}

void DeleteFriendRequest::SharedDtor() {
}

void DeleteFriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFriendRequest::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteFriendRequest& DeleteFriendRequest::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsDeleteFriendRequest();
  return *internal_default_instance();
}


void DeleteFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.DeleteFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(friend_id_));
  _internal_metadata_.Clear();
}

bool DeleteFriendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.DeleteFriendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.DeleteFriendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.DeleteFriendRequest)
  return false;
#undef DO_
}

void DeleteFriendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.DeleteFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->friend_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.DeleteFriendRequest)
}

::google::protobuf::uint8* DeleteFriendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.DeleteFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->friend_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.DeleteFriendRequest)
  return target;
}

size_t DeleteFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.DeleteFriendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.DeleteFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFriendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFriendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.DeleteFriendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.DeleteFriendRequest)
    MergeFrom(*source);
  }
}

void DeleteFriendRequest::MergeFrom(const DeleteFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.DeleteFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.friend_id() != 0) {
    set_friend_id(from.friend_id());
  }
}

void DeleteFriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.DeleteFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFriendRequest::CopyFrom(const DeleteFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.DeleteFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFriendRequest::IsInitialized() const {
  return true;
}

void DeleteFriendRequest::Swap(DeleteFriendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFriendRequest::InternalSwap(DeleteFriendRequest* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(friend_id_, other->friend_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFriendRequest::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModifyFriendRemarkRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyFriendRemarkRequest::kUserIdFieldNumber;
const int ModifyFriendRemarkRequest::kFriendIdFieldNumber;
const int ModifyFriendRemarkRequest::kFriendRemarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyFriendRemarkRequest::ModifyFriendRemarkRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsModifyFriendRemarkRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
}
ModifyFriendRemarkRequest::ModifyFriendRemarkRequest(const ModifyFriendRemarkRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friend_remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_remark().size() > 0) {
    friend_remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_remark_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(friend_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
}

void ModifyFriendRemarkRequest::SharedCtor() {
  friend_remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(friend_id_));
  _cached_size_ = 0;
}

ModifyFriendRemarkRequest::~ModifyFriendRemarkRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  SharedDtor();
}

void ModifyFriendRemarkRequest::SharedDtor() {
  friend_remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyFriendRemarkRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyFriendRemarkRequest::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyFriendRemarkRequest& ModifyFriendRemarkRequest::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsModifyFriendRemarkRequest();
  return *internal_default_instance();
}


void ModifyFriendRemarkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(friend_id_));
  _internal_metadata_.Clear();
}

bool ModifyFriendRemarkRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_remark = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_remark().data(), static_cast<int>(this->friend_remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.friendlist.ModifyFriendRemarkRequest.friend_remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  return false;
#undef DO_
}

void ModifyFriendRemarkRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->friend_id(), output);
  }

  // string friend_remark = 3;
  if (this->friend_remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_remark().data(), static_cast<int>(this->friend_remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.ModifyFriendRemarkRequest.friend_remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->friend_remark(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
}

::google::protobuf::uint8* ModifyFriendRemarkRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->friend_id(), target);
  }

  // string friend_remark = 3;
  if (this->friend_remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_remark().data(), static_cast<int>(this->friend_remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.ModifyFriendRemarkRequest.friend_remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->friend_remark(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  return target;
}

size_t ModifyFriendRemarkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string friend_remark = 3;
  if (this->friend_remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_remark());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyFriendRemarkRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyFriendRemarkRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyFriendRemarkRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
    MergeFrom(*source);
  }
}

void ModifyFriendRemarkRequest::MergeFrom(const ModifyFriendRemarkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.friend_remark().size() > 0) {

    friend_remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_remark_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.friend_id() != 0) {
    set_friend_id(from.friend_id());
  }
}

void ModifyFriendRemarkRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyFriendRemarkRequest::CopyFrom(const ModifyFriendRemarkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.ModifyFriendRemarkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyFriendRemarkRequest::IsInitialized() const {
  return true;
}

void ModifyFriendRemarkRequest::Swap(ModifyFriendRemarkRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyFriendRemarkRequest::InternalSwap(ModifyFriendRemarkRequest* other) {
  using std::swap;
  friend_remark_.Swap(&other->friend_remark_);
  swap(user_id_, other->user_id_);
  swap(friend_id_, other->friend_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyFriendRemarkRequest::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchFriendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchFriendRequest::kUserIdFieldNumber;
const int SearchFriendRequest::kSearchDataFieldNumber;
const int SearchFriendRequest::kSearchTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchFriendRequest::SearchFriendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsSearchFriendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.SearchFriendRequest)
}
SearchFriendRequest::SearchFriendRequest(const SearchFriendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  search_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.search_data().size() > 0) {
    search_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&search_type_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(search_type_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.SearchFriendRequest)
}

void SearchFriendRequest::SharedCtor() {
  search_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&search_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(search_type_));
  _cached_size_ = 0;
}

SearchFriendRequest::~SearchFriendRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.SearchFriendRequest)
  SharedDtor();
}

void SearchFriendRequest::SharedDtor() {
  search_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchFriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchFriendRequest::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchFriendRequest& SearchFriendRequest::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsSearchFriendRequest();
  return *internal_default_instance();
}


void SearchFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.SearchFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  search_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&search_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(search_type_));
  _internal_metadata_.Clear();
}

bool SearchFriendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.SearchFriendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string search_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_data().data(), static_cast<int>(this->search_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.friendlist.SearchFriendRequest.search_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .youliao.pdu.base.SearchType search_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_search_type(static_cast< ::youliao::pdu::base::SearchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.SearchFriendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.SearchFriendRequest)
  return false;
#undef DO_
}

void SearchFriendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.SearchFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // string search_data = 2;
  if (this->search_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_data().data(), static_cast<int>(this->search_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.SearchFriendRequest.search_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->search_data(), output);
  }

  // .youliao.pdu.base.SearchType search_type = 3;
  if (this->search_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->search_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.SearchFriendRequest)
}

::google::protobuf::uint8* SearchFriendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.SearchFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // string search_data = 2;
  if (this->search_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_data().data(), static_cast<int>(this->search_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.SearchFriendRequest.search_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->search_data(), target);
  }

  // .youliao.pdu.base.SearchType search_type = 3;
  if (this->search_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->search_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.SearchFriendRequest)
  return target;
}

size_t SearchFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.SearchFriendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string search_data = 2;
  if (this->search_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .youliao.pdu.base.SearchType search_type = 3;
  if (this->search_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->search_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchFriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.SearchFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchFriendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchFriendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.SearchFriendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.SearchFriendRequest)
    MergeFrom(*source);
  }
}

void SearchFriendRequest::MergeFrom(const SearchFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.SearchFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.search_data().size() > 0) {

    search_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.search_type() != 0) {
    set_search_type(from.search_type());
  }
}

void SearchFriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.SearchFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchFriendRequest::CopyFrom(const SearchFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.SearchFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchFriendRequest::IsInitialized() const {
  return true;
}

void SearchFriendRequest::Swap(SearchFriendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchFriendRequest::InternalSwap(SearchFriendRequest* other) {
  using std::swap;
  search_data_.Swap(&other->search_data_);
  swap(user_id_, other->user_id_);
  swap(search_type_, other->search_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchFriendRequest::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchFriendRespone::InitAsDefaultInstance() {
}
void SearchFriendRespone::clear_friends() {
  friends_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchFriendRespone::kUserIdFieldNumber;
const int SearchFriendRespone::kFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchFriendRespone::SearchFriendRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsSearchFriendRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.SearchFriendRespone)
}
SearchFriendRespone::SearchFriendRespone(const SearchFriendRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friends_(from.friends_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.SearchFriendRespone)
}

void SearchFriendRespone::SharedCtor() {
  user_id_ = 0u;
  _cached_size_ = 0;
}

SearchFriendRespone::~SearchFriendRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.SearchFriendRespone)
  SharedDtor();
}

void SearchFriendRespone::SharedDtor() {
}

void SearchFriendRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchFriendRespone::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchFriendRespone& SearchFriendRespone::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsSearchFriendRespone();
  return *internal_default_instance();
}


void SearchFriendRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.SearchFriendRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_.Clear();
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SearchFriendRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.SearchFriendRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .youliao.pdu.base.FriendInfo friends = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_friends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.SearchFriendRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.SearchFriendRespone)
  return false;
#undef DO_
}

void SearchFriendRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.SearchFriendRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // repeated .youliao.pdu.base.FriendInfo friends = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friends_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->friends(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.SearchFriendRespone)
}

::google::protobuf::uint8* SearchFriendRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.SearchFriendRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // repeated .youliao.pdu.base.FriendInfo friends = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friends_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->friends(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.SearchFriendRespone)
  return target;
}

size_t SearchFriendRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.SearchFriendRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .youliao.pdu.base.FriendInfo friends = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->friends_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->friends(static_cast<int>(i)));
    }
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchFriendRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.SearchFriendRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchFriendRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchFriendRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.SearchFriendRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.SearchFriendRespone)
    MergeFrom(*source);
  }
}

void SearchFriendRespone::MergeFrom(const SearchFriendRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.SearchFriendRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void SearchFriendRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.SearchFriendRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchFriendRespone::CopyFrom(const SearchFriendRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.SearchFriendRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchFriendRespone::IsInitialized() const {
  return true;
}

void SearchFriendRespone::Swap(SearchFriendRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchFriendRespone::InternalSwap(SearchFriendRespone* other) {
  using std::swap;
  CastToBase(&friends_)->InternalSwap(CastToBase(&other->friends_));
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchFriendRespone::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddFriendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddFriendRequest::kUserIdFieldNumber;
const int AddFriendRequest::kFriendIdFieldNumber;
const int AddFriendRequest::kFriendRemarkFieldNumber;
const int AddFriendRequest::kGroupIdFieldNumber;
const int AddFriendRequest::kValidateDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddFriendRequest::AddFriendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsAddFriendRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.friendlist.AddFriendRequest)
}
AddFriendRequest::AddFriendRequest(const AddFriendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friend_remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friend_remark().size() > 0) {
    friend_remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_remark_);
  }
  validatedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.validatedata().size() > 0) {
    validatedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validatedata_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.friendlist.AddFriendRequest)
}

void AddFriendRequest::SharedCtor() {
  friend_remark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validatedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

AddFriendRequest::~AddFriendRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.friendlist.AddFriendRequest)
  SharedDtor();
}

void AddFriendRequest::SharedDtor() {
  friend_remark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validatedata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddFriendRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddFriendRequest::descriptor() {
  ::protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddFriendRequest& AddFriendRequest::default_instance() {
  ::protobuf_youliao_2efriendlist_2eproto::InitDefaultsAddFriendRequest();
  return *internal_default_instance();
}


void AddFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.friendlist.AddFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_remark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  validatedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool AddFriendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.friendlist.AddFriendRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friend_remark = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friend_remark().data(), static_cast<int>(this->friend_remark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.friendlist.AddFriendRequest.friend_remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string validateData = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_validatedata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->validatedata().data(), static_cast<int>(this->validatedata().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "youliao.pdu.friendlist.AddFriendRequest.validateData"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.friendlist.AddFriendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.friendlist.AddFriendRequest)
  return false;
#undef DO_
}

void AddFriendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.friendlist.AddFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->friend_id(), output);
  }

  // string friend_remark = 3;
  if (this->friend_remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_remark().data(), static_cast<int>(this->friend_remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.AddFriendRequest.friend_remark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->friend_remark(), output);
  }

  // uint32 group_id = 4;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->group_id(), output);
  }

  // string validateData = 5;
  if (this->validatedata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validatedata().data(), static_cast<int>(this->validatedata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.AddFriendRequest.validateData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->validatedata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.friendlist.AddFriendRequest)
}

::google::protobuf::uint8* AddFriendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.friendlist.AddFriendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->friend_id(), target);
  }

  // string friend_remark = 3;
  if (this->friend_remark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friend_remark().data(), static_cast<int>(this->friend_remark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.AddFriendRequest.friend_remark");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->friend_remark(), target);
  }

  // uint32 group_id = 4;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->group_id(), target);
  }

  // string validateData = 5;
  if (this->validatedata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->validatedata().data(), static_cast<int>(this->validatedata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "youliao.pdu.friendlist.AddFriendRequest.validateData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->validatedata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.friendlist.AddFriendRequest)
  return target;
}

size_t AddFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.friendlist.AddFriendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string friend_remark = 3;
  if (this->friend_remark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_remark());
  }

  // string validateData = 5;
  if (this->validatedata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->validatedata());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_id());
  }

  // uint32 group_id = 4;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddFriendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.friendlist.AddFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddFriendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddFriendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.friendlist.AddFriendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.friendlist.AddFriendRequest)
    MergeFrom(*source);
  }
}

void AddFriendRequest::MergeFrom(const AddFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.friendlist.AddFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.friend_remark().size() > 0) {

    friend_remark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend_remark_);
  }
  if (from.validatedata().size() > 0) {

    validatedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.validatedata_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.friend_id() != 0) {
    set_friend_id(from.friend_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void AddFriendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.friendlist.AddFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddFriendRequest::CopyFrom(const AddFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.friendlist.AddFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddFriendRequest::IsInitialized() const {
  return true;
}

void AddFriendRequest::Swap(AddFriendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddFriendRequest::InternalSwap(AddFriendRequest* other) {
  using std::swap;
  friend_remark_.Swap(&other->friend_remark_);
  validatedata_.Swap(&other->validatedata_);
  swap(user_id_, other->user_id_);
  swap(friend_id_, other->friend_id_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddFriendRequest::GetMetadata() const {
  protobuf_youliao_2efriendlist_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2efriendlist_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace friendlist
}  // namespace pdu
}  // namespace youliao
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::Group_Friend* Arena::Create< ::youliao::pdu::friendlist::Group_Friend >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::Group_Friend >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::FriendListRequest* Arena::Create< ::youliao::pdu::friendlist::FriendListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::FriendListRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::FriendListRespone_FriendListEntry_DoNotUse* Arena::Create< ::youliao::pdu::friendlist::FriendListRespone_FriendListEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::FriendListRespone_FriendListEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::FriendListRespone* Arena::Create< ::youliao::pdu::friendlist::FriendListRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::FriendListRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::GroupsRequest* Arena::Create< ::youliao::pdu::friendlist::GroupsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::GroupsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::GroupsRespone_UserGroupsEntry_DoNotUse* Arena::Create< ::youliao::pdu::friendlist::GroupsRespone_UserGroupsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::GroupsRespone_UserGroupsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::GroupsRespone* Arena::Create< ::youliao::pdu::friendlist::GroupsRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::GroupsRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::FriendStatusChangeMessage* Arena::Create< ::youliao::pdu::friendlist::FriendStatusChangeMessage >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::FriendStatusChangeMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::SignatureChangeResquest* Arena::Create< ::youliao::pdu::friendlist::SignatureChangeResquest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::SignatureChangeResquest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::SignatureChangeRespone* Arena::Create< ::youliao::pdu::friendlist::SignatureChangeRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::SignatureChangeRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::FriendSignatureChangedNotify* Arena::Create< ::youliao::pdu::friendlist::FriendSignatureChangedNotify >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::FriendSignatureChangedNotify >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::ModifyFriendGroupNameRequest* Arena::Create< ::youliao::pdu::friendlist::ModifyFriendGroupNameRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::ModifyFriendGroupNameRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::AddNewFriendGroupRequest* Arena::Create< ::youliao::pdu::friendlist::AddNewFriendGroupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::AddNewFriendGroupRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::AddNewFriendGroupRespone* Arena::Create< ::youliao::pdu::friendlist::AddNewFriendGroupRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::AddNewFriendGroupRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::RenameFriendGroupRequest* Arena::Create< ::youliao::pdu::friendlist::RenameFriendGroupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::RenameFriendGroupRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::DeleteFriendGroupRequest* Arena::Create< ::youliao::pdu::friendlist::DeleteFriendGroupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::DeleteFriendGroupRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::MoveFriendToGroupRequest* Arena::Create< ::youliao::pdu::friendlist::MoveFriendToGroupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::MoveFriendToGroupRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::DeleteFriendRequest* Arena::Create< ::youliao::pdu::friendlist::DeleteFriendRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::DeleteFriendRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::ModifyFriendRemarkRequest* Arena::Create< ::youliao::pdu::friendlist::ModifyFriendRemarkRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::ModifyFriendRemarkRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::SearchFriendRequest* Arena::Create< ::youliao::pdu::friendlist::SearchFriendRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::SearchFriendRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::SearchFriendRespone* Arena::Create< ::youliao::pdu::friendlist::SearchFriendRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::SearchFriendRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::friendlist::AddFriendRequest* Arena::Create< ::youliao::pdu::friendlist::AddFriendRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::friendlist::AddFriendRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

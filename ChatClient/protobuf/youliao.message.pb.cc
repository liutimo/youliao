// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: youliao.message.proto

#include "youliao.message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace youliao {
namespace pdu {
namespace message {
class MessageDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageData>
      _instance;
} _MessageData_default_instance_;
class MessageDataAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageDataAck>
      _instance;
} _MessageDataAck_default_instance_;
class LatestMsgIdRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LatestMsgIdRequest>
      _instance;
} _LatestMsgIdRequest_default_instance_;
class LatestMsgIdResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LatestMsgIdRespone>
      _instance;
} _LatestMsgIdRespone_default_instance_;
class GetOfflineMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOfflineMessageRequest>
      _instance;
} _GetOfflineMessageRequest_default_instance_;
class GetOfflineMessageResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOfflineMessageRespone>
      _instance;
} _GetOfflineMessageRespone_default_instance_;
class GetGroupOfflineMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetGroupOfflineMessageRequest>
      _instance;
} _GetGroupOfflineMessageRequest_default_instance_;
class GetGroupOfflineMessageResponeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetGroupOfflineMessageRespone>
      _instance;
} _GetGroupOfflineMessageRespone_default_instance_;
}  // namespace message
}  // namespace pdu
}  // namespace youliao
namespace protobuf_youliao_2emessage_2eproto {
void InitDefaultsMessageDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::message::_MessageData_default_instance_;
    new (ptr) ::youliao::pdu::message::MessageData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::message::MessageData::InitAsDefaultInstance();
}

void InitDefaultsMessageData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageDataImpl);
}

void InitDefaultsMessageDataAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::message::_MessageDataAck_default_instance_;
    new (ptr) ::youliao::pdu::message::MessageDataAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::message::MessageDataAck::InitAsDefaultInstance();
}

void InitDefaultsMessageDataAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageDataAckImpl);
}

void InitDefaultsLatestMsgIdRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::message::_LatestMsgIdRequest_default_instance_;
    new (ptr) ::youliao::pdu::message::LatestMsgIdRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::message::LatestMsgIdRequest::InitAsDefaultInstance();
}

void InitDefaultsLatestMsgIdRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLatestMsgIdRequestImpl);
}

void InitDefaultsLatestMsgIdResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::message::_LatestMsgIdRespone_default_instance_;
    new (ptr) ::youliao::pdu::message::LatestMsgIdRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::message::LatestMsgIdRespone::InitAsDefaultInstance();
}

void InitDefaultsLatestMsgIdRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLatestMsgIdResponeImpl);
}

void InitDefaultsGetOfflineMessageRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::message::_GetOfflineMessageRequest_default_instance_;
    new (ptr) ::youliao::pdu::message::GetOfflineMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::message::GetOfflineMessageRequest::InitAsDefaultInstance();
}

void InitDefaultsGetOfflineMessageRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetOfflineMessageRequestImpl);
}

void InitDefaultsGetOfflineMessageResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2emessage_2eproto::InitDefaultsMessageData();
  {
    void* ptr = &::youliao::pdu::message::_GetOfflineMessageRespone_default_instance_;
    new (ptr) ::youliao::pdu::message::GetOfflineMessageRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::message::GetOfflineMessageRespone::InitAsDefaultInstance();
}

void InitDefaultsGetOfflineMessageRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetOfflineMessageResponeImpl);
}

void InitDefaultsGetGroupOfflineMessageRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::youliao::pdu::message::_GetGroupOfflineMessageRequest_default_instance_;
    new (ptr) ::youliao::pdu::message::GetGroupOfflineMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::message::GetGroupOfflineMessageRequest::InitAsDefaultInstance();
}

void InitDefaultsGetGroupOfflineMessageRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetGroupOfflineMessageRequestImpl);
}

void InitDefaultsGetGroupOfflineMessageResponeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_youliao_2emessage_2eproto::InitDefaultsMessageData();
  {
    void* ptr = &::youliao::pdu::message::_GetGroupOfflineMessageRespone_default_instance_;
    new (ptr) ::youliao::pdu::message::GetGroupOfflineMessageRespone();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::youliao::pdu::message::GetGroupOfflineMessageRespone::InitAsDefaultInstance();
}

void InitDefaultsGetGroupOfflineMessageRespone() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetGroupOfflineMessageResponeImpl);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageData, relate_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageData, from_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageData, to_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageData, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageData, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageData, message_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageData, message_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageData, audio_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageData, to_user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageDataAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageDataAck, from_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageDataAck, to_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::MessageDataAck, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::LatestMsgIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::LatestMsgIdRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::LatestMsgIdRequest, friend_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::LatestMsgIdRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::LatestMsgIdRespone, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::LatestMsgIdRespone, friend_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::LatestMsgIdRespone, latest_msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetOfflineMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetOfflineMessageRequest, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetOfflineMessageRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetOfflineMessageRespone, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetOfflineMessageRespone, msg_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetGroupOfflineMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetGroupOfflineMessageRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetGroupOfflineMessageRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetGroupOfflineMessageRequest, curr_msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetGroupOfflineMessageRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetGroupOfflineMessageRespone, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetGroupOfflineMessageRespone, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::youliao::pdu::message::GetGroupOfflineMessageRespone, msg_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::youliao::pdu::message::MessageData)},
  { 14, -1, sizeof(::youliao::pdu::message::MessageDataAck)},
  { 22, -1, sizeof(::youliao::pdu::message::LatestMsgIdRequest)},
  { 29, -1, sizeof(::youliao::pdu::message::LatestMsgIdRespone)},
  { 37, -1, sizeof(::youliao::pdu::message::GetOfflineMessageRequest)},
  { 43, -1, sizeof(::youliao::pdu::message::GetOfflineMessageRespone)},
  { 50, -1, sizeof(::youliao::pdu::message::GetGroupOfflineMessageRequest)},
  { 58, -1, sizeof(::youliao::pdu::message::GetGroupOfflineMessageRespone)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::message::_MessageData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::message::_MessageDataAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::message::_LatestMsgIdRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::message::_LatestMsgIdRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::message::_GetOfflineMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::message::_GetOfflineMessageRespone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::message::_GetGroupOfflineMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::youliao::pdu::message::_GetGroupOfflineMessageRespone_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "youliao.message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025youliao.message.proto\022\023youliao.pdu.mes"
      "sage\032\022youliao.base.proto\"\335\001\n\013MessageData"
      "\022\021\n\trelate_id\030\001 \001(\r\022\024\n\014from_user_id\030\002 \001("
      "\r\022\r\n\005to_id\030\003 \001(\r\022\016\n\006msg_id\030\004 \001(\r\022\023\n\013crea"
      "te_time\030\005 \001(\r\0223\n\014message_type\030\006 \001(\0162\035.yo"
      "uliao.pdu.base.MessageType\022\024\n\014message_da"
      "ta\030\007 \001(\014\022\022\n\naudio_time\030\010 \001(\r\022\022\n\nto_user_"
      "id\030\t \001(\r\"J\n\016MessageDataAck\022\024\n\014from_user_"
      "id\030\001 \001(\r\022\022\n\nto_user_id\030\002 \001(\r\022\016\n\006msg_id\030\003"
      " \001(\r\"8\n\022LatestMsgIdRequest\022\017\n\007user_id\030\001 "
      "\001(\r\022\021\n\tfriend_id\030\002 \001(\r\"O\n\022LatestMsgIdRes"
      "pone\022\017\n\007user_id\030\001 \001(\r\022\021\n\tfriend_id\030\002 \001(\r"
      "\022\025\n\rlatest_msg_id\030\003 \001(\r\"+\n\030GetOfflineMes"
      "sageRequest\022\017\n\007user_id\030\001 \001(\r\"_\n\030GetOffli"
      "neMessageRespone\022\017\n\007user_id\030\001 \001(\r\0222\n\010msg"
      "_data\030\002 \003(\0132 .youliao.pdu.message.Messag"
      "eData\"W\n\035GetGroupOfflineMessageRequest\022\017"
      "\n\007user_id\030\001 \001(\r\022\020\n\010group_id\030\002 \001(\r\022\023\n\013cur"
      "r_msg_id\030\003 \001(\r\"v\n\035GetGroupOfflineMessage"
      "Respone\022\017\n\007user_id\030\001 \001(\r\022\020\n\010group_id\030\002 \001"
      "(\r\0222\n\010msg_data\030\003 \003(\0132 .youliao.pdu.messa"
      "ge.MessageDatab\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 862);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "youliao.message.proto", &protobuf_RegisterTypes);
  ::protobuf_youliao_2ebase_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_youliao_2emessage_2eproto
namespace youliao {
namespace pdu {
namespace message {

// ===================================================================

void MessageData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageData::kRelateIdFieldNumber;
const int MessageData::kFromUserIdFieldNumber;
const int MessageData::kToIdFieldNumber;
const int MessageData::kMsgIdFieldNumber;
const int MessageData::kCreateTimeFieldNumber;
const int MessageData::kMessageTypeFieldNumber;
const int MessageData::kMessageDataFieldNumber;
const int MessageData::kAudioTimeFieldNumber;
const int MessageData::kToUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageData::MessageData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2emessage_2eproto::InitDefaultsMessageData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.message.MessageData)
}
MessageData::MessageData(const MessageData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message_data().size() > 0) {
    message_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_data_);
  }
  ::memcpy(&relate_id_, &from.relate_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&to_user_id_) -
    reinterpret_cast<char*>(&relate_id_)) + sizeof(to_user_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.message.MessageData)
}

void MessageData::SharedCtor() {
  message_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&relate_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_user_id_) -
      reinterpret_cast<char*>(&relate_id_)) + sizeof(to_user_id_));
  _cached_size_ = 0;
}

MessageData::~MessageData() {
  // @@protoc_insertion_point(destructor:youliao.pdu.message.MessageData)
  SharedDtor();
}

void MessageData::SharedDtor() {
  message_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageData::descriptor() {
  ::protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageData& MessageData::default_instance() {
  ::protobuf_youliao_2emessage_2eproto::InitDefaultsMessageData();
  return *internal_default_instance();
}


void MessageData::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.message.MessageData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&relate_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&to_user_id_) -
      reinterpret_cast<char*>(&relate_id_)) + sizeof(to_user_id_));
  _internal_metadata_.Clear();
}

bool MessageData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.message.MessageData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 relate_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &relate_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 from_user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 create_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .youliao.pdu.base.MessageType message_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_message_type(static_cast< ::youliao::pdu::base::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes message_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 audio_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &audio_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_user_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.message.MessageData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.message.MessageData)
  return false;
#undef DO_
}

void MessageData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.message.MessageData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 relate_id = 1;
  if (this->relate_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->relate_id(), output);
  }

  // uint32 from_user_id = 2;
  if (this->from_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->from_user_id(), output);
  }

  // uint32 to_id = 3;
  if (this->to_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->to_id(), output);
  }

  // uint32 msg_id = 4;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->msg_id(), output);
  }

  // uint32 create_time = 5;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->create_time(), output);
  }

  // .youliao.pdu.base.MessageType message_type = 6;
  if (this->message_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->message_type(), output);
  }

  // bytes message_data = 7;
  if (this->message_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->message_data(), output);
  }

  // uint32 audio_time = 8;
  if (this->audio_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->audio_time(), output);
  }

  // uint32 to_user_id = 9;
  if (this->to_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->to_user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.message.MessageData)
}

::google::protobuf::uint8* MessageData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.message.MessageData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 relate_id = 1;
  if (this->relate_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->relate_id(), target);
  }

  // uint32 from_user_id = 2;
  if (this->from_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->from_user_id(), target);
  }

  // uint32 to_id = 3;
  if (this->to_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->to_id(), target);
  }

  // uint32 msg_id = 4;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->msg_id(), target);
  }

  // uint32 create_time = 5;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->create_time(), target);
  }

  // .youliao.pdu.base.MessageType message_type = 6;
  if (this->message_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->message_type(), target);
  }

  // bytes message_data = 7;
  if (this->message_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->message_data(), target);
  }

  // uint32 audio_time = 8;
  if (this->audio_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->audio_time(), target);
  }

  // uint32 to_user_id = 9;
  if (this->to_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->to_user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.message.MessageData)
  return target;
}

size_t MessageData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.message.MessageData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes message_data = 7;
  if (this->message_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message_data());
  }

  // uint32 relate_id = 1;
  if (this->relate_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->relate_id());
  }

  // uint32 from_user_id = 2;
  if (this->from_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_user_id());
  }

  // uint32 to_id = 3;
  if (this->to_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_id());
  }

  // uint32 msg_id = 4;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  // uint32 create_time = 5;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->create_time());
  }

  // .youliao.pdu.base.MessageType message_type = 6;
  if (this->message_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->message_type());
  }

  // uint32 audio_time = 8;
  if (this->audio_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->audio_time());
  }

  // uint32 to_user_id = 9;
  if (this->to_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.message.MessageData)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.message.MessageData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.message.MessageData)
    MergeFrom(*source);
  }
}

void MessageData::MergeFrom(const MessageData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.message.MessageData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message_data().size() > 0) {

    message_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_data_);
  }
  if (from.relate_id() != 0) {
    set_relate_id(from.relate_id());
  }
  if (from.from_user_id() != 0) {
    set_from_user_id(from.from_user_id());
  }
  if (from.to_id() != 0) {
    set_to_id(from.to_id());
  }
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.message_type() != 0) {
    set_message_type(from.message_type());
  }
  if (from.audio_time() != 0) {
    set_audio_time(from.audio_time());
  }
  if (from.to_user_id() != 0) {
    set_to_user_id(from.to_user_id());
  }
}

void MessageData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.message.MessageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageData::CopyFrom(const MessageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.message.MessageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageData::IsInitialized() const {
  return true;
}

void MessageData::Swap(MessageData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageData::InternalSwap(MessageData* other) {
  using std::swap;
  message_data_.Swap(&other->message_data_);
  swap(relate_id_, other->relate_id_);
  swap(from_user_id_, other->from_user_id_);
  swap(to_id_, other->to_id_);
  swap(msg_id_, other->msg_id_);
  swap(create_time_, other->create_time_);
  swap(message_type_, other->message_type_);
  swap(audio_time_, other->audio_time_);
  swap(to_user_id_, other->to_user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageData::GetMetadata() const {
  protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageDataAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageDataAck::kFromUserIdFieldNumber;
const int MessageDataAck::kToUserIdFieldNumber;
const int MessageDataAck::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageDataAck::MessageDataAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2emessage_2eproto::InitDefaultsMessageDataAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.message.MessageDataAck)
}
MessageDataAck::MessageDataAck(const MessageDataAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&from_user_id_, &from.from_user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_id_) -
    reinterpret_cast<char*>(&from_user_id_)) + sizeof(msg_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.message.MessageDataAck)
}

void MessageDataAck::SharedCtor() {
  ::memset(&from_user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_id_) -
      reinterpret_cast<char*>(&from_user_id_)) + sizeof(msg_id_));
  _cached_size_ = 0;
}

MessageDataAck::~MessageDataAck() {
  // @@protoc_insertion_point(destructor:youliao.pdu.message.MessageDataAck)
  SharedDtor();
}

void MessageDataAck::SharedDtor() {
}

void MessageDataAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageDataAck::descriptor() {
  ::protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageDataAck& MessageDataAck::default_instance() {
  ::protobuf_youliao_2emessage_2eproto::InitDefaultsMessageDataAck();
  return *internal_default_instance();
}


void MessageDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.message.MessageDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&from_user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_id_) -
      reinterpret_cast<char*>(&from_user_id_)) + sizeof(msg_id_));
  _internal_metadata_.Clear();
}

bool MessageDataAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.message.MessageDataAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 from_user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.message.MessageDataAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.message.MessageDataAck)
  return false;
#undef DO_
}

void MessageDataAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.message.MessageDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_user_id = 1;
  if (this->from_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->from_user_id(), output);
  }

  // uint32 to_user_id = 2;
  if (this->to_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->to_user_id(), output);
  }

  // uint32 msg_id = 3;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.message.MessageDataAck)
}

::google::protobuf::uint8* MessageDataAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.message.MessageDataAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_user_id = 1;
  if (this->from_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->from_user_id(), target);
  }

  // uint32 to_user_id = 2;
  if (this->to_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->to_user_id(), target);
  }

  // uint32 msg_id = 3;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.message.MessageDataAck)
  return target;
}

size_t MessageDataAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.message.MessageDataAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 from_user_id = 1;
  if (this->from_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_user_id());
  }

  // uint32 to_user_id = 2;
  if (this->to_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_user_id());
  }

  // uint32 msg_id = 3;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageDataAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.message.MessageDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageDataAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageDataAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.message.MessageDataAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.message.MessageDataAck)
    MergeFrom(*source);
  }
}

void MessageDataAck::MergeFrom(const MessageDataAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.message.MessageDataAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_user_id() != 0) {
    set_from_user_id(from.from_user_id());
  }
  if (from.to_user_id() != 0) {
    set_to_user_id(from.to_user_id());
  }
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
}

void MessageDataAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.message.MessageDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageDataAck::CopyFrom(const MessageDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.message.MessageDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageDataAck::IsInitialized() const {
  return true;
}

void MessageDataAck::Swap(MessageDataAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageDataAck::InternalSwap(MessageDataAck* other) {
  using std::swap;
  swap(from_user_id_, other->from_user_id_);
  swap(to_user_id_, other->to_user_id_);
  swap(msg_id_, other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageDataAck::GetMetadata() const {
  protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LatestMsgIdRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatestMsgIdRequest::kUserIdFieldNumber;
const int LatestMsgIdRequest::kFriendIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatestMsgIdRequest::LatestMsgIdRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2emessage_2eproto::InitDefaultsLatestMsgIdRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.message.LatestMsgIdRequest)
}
LatestMsgIdRequest::LatestMsgIdRequest(const LatestMsgIdRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(friend_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.message.LatestMsgIdRequest)
}

void LatestMsgIdRequest::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(friend_id_));
  _cached_size_ = 0;
}

LatestMsgIdRequest::~LatestMsgIdRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.message.LatestMsgIdRequest)
  SharedDtor();
}

void LatestMsgIdRequest::SharedDtor() {
}

void LatestMsgIdRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatestMsgIdRequest::descriptor() {
  ::protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatestMsgIdRequest& LatestMsgIdRequest::default_instance() {
  ::protobuf_youliao_2emessage_2eproto::InitDefaultsLatestMsgIdRequest();
  return *internal_default_instance();
}


void LatestMsgIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.message.LatestMsgIdRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(friend_id_));
  _internal_metadata_.Clear();
}

bool LatestMsgIdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.message.LatestMsgIdRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.message.LatestMsgIdRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.message.LatestMsgIdRequest)
  return false;
#undef DO_
}

void LatestMsgIdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.message.LatestMsgIdRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->friend_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.message.LatestMsgIdRequest)
}

::google::protobuf::uint8* LatestMsgIdRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.message.LatestMsgIdRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->friend_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.message.LatestMsgIdRequest)
  return target;
}

size_t LatestMsgIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.message.LatestMsgIdRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatestMsgIdRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.message.LatestMsgIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LatestMsgIdRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatestMsgIdRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.message.LatestMsgIdRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.message.LatestMsgIdRequest)
    MergeFrom(*source);
  }
}

void LatestMsgIdRequest::MergeFrom(const LatestMsgIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.message.LatestMsgIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.friend_id() != 0) {
    set_friend_id(from.friend_id());
  }
}

void LatestMsgIdRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.message.LatestMsgIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatestMsgIdRequest::CopyFrom(const LatestMsgIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.message.LatestMsgIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatestMsgIdRequest::IsInitialized() const {
  return true;
}

void LatestMsgIdRequest::Swap(LatestMsgIdRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatestMsgIdRequest::InternalSwap(LatestMsgIdRequest* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(friend_id_, other->friend_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatestMsgIdRequest::GetMetadata() const {
  protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LatestMsgIdRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatestMsgIdRespone::kUserIdFieldNumber;
const int LatestMsgIdRespone::kFriendIdFieldNumber;
const int LatestMsgIdRespone::kLatestMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatestMsgIdRespone::LatestMsgIdRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2emessage_2eproto::InitDefaultsLatestMsgIdRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.message.LatestMsgIdRespone)
}
LatestMsgIdRespone::LatestMsgIdRespone(const LatestMsgIdRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&latest_msg_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(latest_msg_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.message.LatestMsgIdRespone)
}

void LatestMsgIdRespone::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latest_msg_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(latest_msg_id_));
  _cached_size_ = 0;
}

LatestMsgIdRespone::~LatestMsgIdRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.message.LatestMsgIdRespone)
  SharedDtor();
}

void LatestMsgIdRespone::SharedDtor() {
}

void LatestMsgIdRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatestMsgIdRespone::descriptor() {
  ::protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatestMsgIdRespone& LatestMsgIdRespone::default_instance() {
  ::protobuf_youliao_2emessage_2eproto::InitDefaultsLatestMsgIdRespone();
  return *internal_default_instance();
}


void LatestMsgIdRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.message.LatestMsgIdRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latest_msg_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(latest_msg_id_));
  _internal_metadata_.Clear();
}

bool LatestMsgIdRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.message.LatestMsgIdRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 latest_msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &latest_msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.message.LatestMsgIdRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.message.LatestMsgIdRespone)
  return false;
#undef DO_
}

void LatestMsgIdRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.message.LatestMsgIdRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->friend_id(), output);
  }

  // uint32 latest_msg_id = 3;
  if (this->latest_msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->latest_msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.message.LatestMsgIdRespone)
}

::google::protobuf::uint8* LatestMsgIdRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.message.LatestMsgIdRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->friend_id(), target);
  }

  // uint32 latest_msg_id = 3;
  if (this->latest_msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->latest_msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.message.LatestMsgIdRespone)
  return target;
}

size_t LatestMsgIdRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.message.LatestMsgIdRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 friend_id = 2;
  if (this->friend_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_id());
  }

  // uint32 latest_msg_id = 3;
  if (this->latest_msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->latest_msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatestMsgIdRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.message.LatestMsgIdRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const LatestMsgIdRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatestMsgIdRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.message.LatestMsgIdRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.message.LatestMsgIdRespone)
    MergeFrom(*source);
  }
}

void LatestMsgIdRespone::MergeFrom(const LatestMsgIdRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.message.LatestMsgIdRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.friend_id() != 0) {
    set_friend_id(from.friend_id());
  }
  if (from.latest_msg_id() != 0) {
    set_latest_msg_id(from.latest_msg_id());
  }
}

void LatestMsgIdRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.message.LatestMsgIdRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatestMsgIdRespone::CopyFrom(const LatestMsgIdRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.message.LatestMsgIdRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatestMsgIdRespone::IsInitialized() const {
  return true;
}

void LatestMsgIdRespone::Swap(LatestMsgIdRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatestMsgIdRespone::InternalSwap(LatestMsgIdRespone* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(friend_id_, other->friend_id_);
  swap(latest_msg_id_, other->latest_msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatestMsgIdRespone::GetMetadata() const {
  protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOfflineMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOfflineMessageRequest::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOfflineMessageRequest::GetOfflineMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2emessage_2eproto::InitDefaultsGetOfflineMessageRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.message.GetOfflineMessageRequest)
}
GetOfflineMessageRequest::GetOfflineMessageRequest(const GetOfflineMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.message.GetOfflineMessageRequest)
}

void GetOfflineMessageRequest::SharedCtor() {
  user_id_ = 0u;
  _cached_size_ = 0;
}

GetOfflineMessageRequest::~GetOfflineMessageRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.message.GetOfflineMessageRequest)
  SharedDtor();
}

void GetOfflineMessageRequest::SharedDtor() {
}

void GetOfflineMessageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOfflineMessageRequest::descriptor() {
  ::protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOfflineMessageRequest& GetOfflineMessageRequest::default_instance() {
  ::protobuf_youliao_2emessage_2eproto::InitDefaultsGetOfflineMessageRequest();
  return *internal_default_instance();
}


void GetOfflineMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.message.GetOfflineMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetOfflineMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.message.GetOfflineMessageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.message.GetOfflineMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.message.GetOfflineMessageRequest)
  return false;
#undef DO_
}

void GetOfflineMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.message.GetOfflineMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.message.GetOfflineMessageRequest)
}

::google::protobuf::uint8* GetOfflineMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.message.GetOfflineMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.message.GetOfflineMessageRequest)
  return target;
}

size_t GetOfflineMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.message.GetOfflineMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOfflineMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.message.GetOfflineMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOfflineMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOfflineMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.message.GetOfflineMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.message.GetOfflineMessageRequest)
    MergeFrom(*source);
  }
}

void GetOfflineMessageRequest::MergeFrom(const GetOfflineMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.message.GetOfflineMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GetOfflineMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.message.GetOfflineMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOfflineMessageRequest::CopyFrom(const GetOfflineMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.message.GetOfflineMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOfflineMessageRequest::IsInitialized() const {
  return true;
}

void GetOfflineMessageRequest::Swap(GetOfflineMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOfflineMessageRequest::InternalSwap(GetOfflineMessageRequest* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOfflineMessageRequest::GetMetadata() const {
  protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOfflineMessageRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOfflineMessageRespone::kUserIdFieldNumber;
const int GetOfflineMessageRespone::kMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOfflineMessageRespone::GetOfflineMessageRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2emessage_2eproto::InitDefaultsGetOfflineMessageRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.message.GetOfflineMessageRespone)
}
GetOfflineMessageRespone::GetOfflineMessageRespone(const GetOfflineMessageRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_data_(from.msg_data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.message.GetOfflineMessageRespone)
}

void GetOfflineMessageRespone::SharedCtor() {
  user_id_ = 0u;
  _cached_size_ = 0;
}

GetOfflineMessageRespone::~GetOfflineMessageRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.message.GetOfflineMessageRespone)
  SharedDtor();
}

void GetOfflineMessageRespone::SharedDtor() {
}

void GetOfflineMessageRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOfflineMessageRespone::descriptor() {
  ::protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOfflineMessageRespone& GetOfflineMessageRespone::default_instance() {
  ::protobuf_youliao_2emessage_2eproto::InitDefaultsGetOfflineMessageRespone();
  return *internal_default_instance();
}


void GetOfflineMessageRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.message.GetOfflineMessageRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_data_.Clear();
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetOfflineMessageRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.message.GetOfflineMessageRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .youliao.pdu.message.MessageData msg_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.message.GetOfflineMessageRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.message.GetOfflineMessageRespone)
  return false;
#undef DO_
}

void GetOfflineMessageRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.message.GetOfflineMessageRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // repeated .youliao.pdu.message.MessageData msg_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->msg_data(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.message.GetOfflineMessageRespone)
}

::google::protobuf::uint8* GetOfflineMessageRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.message.GetOfflineMessageRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // repeated .youliao.pdu.message.MessageData msg_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->msg_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.message.GetOfflineMessageRespone)
  return target;
}

size_t GetOfflineMessageRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.message.GetOfflineMessageRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .youliao.pdu.message.MessageData msg_data = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->msg_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msg_data(static_cast<int>(i)));
    }
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOfflineMessageRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.message.GetOfflineMessageRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOfflineMessageRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOfflineMessageRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.message.GetOfflineMessageRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.message.GetOfflineMessageRespone)
    MergeFrom(*source);
  }
}

void GetOfflineMessageRespone::MergeFrom(const GetOfflineMessageRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.message.GetOfflineMessageRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_data_.MergeFrom(from.msg_data_);
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GetOfflineMessageRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.message.GetOfflineMessageRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOfflineMessageRespone::CopyFrom(const GetOfflineMessageRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.message.GetOfflineMessageRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOfflineMessageRespone::IsInitialized() const {
  return true;
}

void GetOfflineMessageRespone::Swap(GetOfflineMessageRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOfflineMessageRespone::InternalSwap(GetOfflineMessageRespone* other) {
  using std::swap;
  CastToBase(&msg_data_)->InternalSwap(CastToBase(&other->msg_data_));
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOfflineMessageRespone::GetMetadata() const {
  protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetGroupOfflineMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGroupOfflineMessageRequest::kUserIdFieldNumber;
const int GetGroupOfflineMessageRequest::kGroupIdFieldNumber;
const int GetGroupOfflineMessageRequest::kCurrMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGroupOfflineMessageRequest::GetGroupOfflineMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2emessage_2eproto::InitDefaultsGetGroupOfflineMessageRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.message.GetGroupOfflineMessageRequest)
}
GetGroupOfflineMessageRequest::GetGroupOfflineMessageRequest(const GetGroupOfflineMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&curr_msg_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(curr_msg_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.message.GetGroupOfflineMessageRequest)
}

void GetGroupOfflineMessageRequest::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&curr_msg_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(curr_msg_id_));
  _cached_size_ = 0;
}

GetGroupOfflineMessageRequest::~GetGroupOfflineMessageRequest() {
  // @@protoc_insertion_point(destructor:youliao.pdu.message.GetGroupOfflineMessageRequest)
  SharedDtor();
}

void GetGroupOfflineMessageRequest::SharedDtor() {
}

void GetGroupOfflineMessageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGroupOfflineMessageRequest::descriptor() {
  ::protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGroupOfflineMessageRequest& GetGroupOfflineMessageRequest::default_instance() {
  ::protobuf_youliao_2emessage_2eproto::InitDefaultsGetGroupOfflineMessageRequest();
  return *internal_default_instance();
}


void GetGroupOfflineMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.message.GetGroupOfflineMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&curr_msg_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(curr_msg_id_));
  _internal_metadata_.Clear();
}

bool GetGroupOfflineMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.message.GetGroupOfflineMessageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 curr_msg_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curr_msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.message.GetGroupOfflineMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.message.GetGroupOfflineMessageRequest)
  return false;
#undef DO_
}

void GetGroupOfflineMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.message.GetGroupOfflineMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // uint32 curr_msg_id = 3;
  if (this->curr_msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->curr_msg_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.message.GetGroupOfflineMessageRequest)
}

::google::protobuf::uint8* GetGroupOfflineMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.message.GetGroupOfflineMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // uint32 curr_msg_id = 3;
  if (this->curr_msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->curr_msg_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.message.GetGroupOfflineMessageRequest)
  return target;
}

size_t GetGroupOfflineMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.message.GetGroupOfflineMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 curr_msg_id = 3;
  if (this->curr_msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->curr_msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGroupOfflineMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.message.GetGroupOfflineMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupOfflineMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGroupOfflineMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.message.GetGroupOfflineMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.message.GetGroupOfflineMessageRequest)
    MergeFrom(*source);
  }
}

void GetGroupOfflineMessageRequest::MergeFrom(const GetGroupOfflineMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.message.GetGroupOfflineMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.curr_msg_id() != 0) {
    set_curr_msg_id(from.curr_msg_id());
  }
}

void GetGroupOfflineMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.message.GetGroupOfflineMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupOfflineMessageRequest::CopyFrom(const GetGroupOfflineMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.message.GetGroupOfflineMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupOfflineMessageRequest::IsInitialized() const {
  return true;
}

void GetGroupOfflineMessageRequest::Swap(GetGroupOfflineMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGroupOfflineMessageRequest::InternalSwap(GetGroupOfflineMessageRequest* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(group_id_, other->group_id_);
  swap(curr_msg_id_, other->curr_msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGroupOfflineMessageRequest::GetMetadata() const {
  protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetGroupOfflineMessageRespone::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGroupOfflineMessageRespone::kUserIdFieldNumber;
const int GetGroupOfflineMessageRespone::kGroupIdFieldNumber;
const int GetGroupOfflineMessageRespone::kMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGroupOfflineMessageRespone::GetGroupOfflineMessageRespone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_youliao_2emessage_2eproto::InitDefaultsGetGroupOfflineMessageRespone();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:youliao.pdu.message.GetGroupOfflineMessageRespone)
}
GetGroupOfflineMessageRespone::GetGroupOfflineMessageRespone(const GetGroupOfflineMessageRespone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_data_(from.msg_data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:youliao.pdu.message.GetGroupOfflineMessageRespone)
}

void GetGroupOfflineMessageRespone::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

GetGroupOfflineMessageRespone::~GetGroupOfflineMessageRespone() {
  // @@protoc_insertion_point(destructor:youliao.pdu.message.GetGroupOfflineMessageRespone)
  SharedDtor();
}

void GetGroupOfflineMessageRespone::SharedDtor() {
}

void GetGroupOfflineMessageRespone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGroupOfflineMessageRespone::descriptor() {
  ::protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGroupOfflineMessageRespone& GetGroupOfflineMessageRespone::default_instance() {
  ::protobuf_youliao_2emessage_2eproto::InitDefaultsGetGroupOfflineMessageRespone();
  return *internal_default_instance();
}


void GetGroupOfflineMessageRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:youliao.pdu.message.GetGroupOfflineMessageRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_data_.Clear();
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool GetGroupOfflineMessageRespone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:youliao.pdu.message.GetGroupOfflineMessageRespone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .youliao.pdu.message.MessageData msg_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:youliao.pdu.message.GetGroupOfflineMessageRespone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:youliao.pdu.message.GetGroupOfflineMessageRespone)
  return false;
#undef DO_
}

void GetGroupOfflineMessageRespone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:youliao.pdu.message.GetGroupOfflineMessageRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // repeated .youliao.pdu.message.MessageData msg_data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->msg_data(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:youliao.pdu.message.GetGroupOfflineMessageRespone)
}

::google::protobuf::uint8* GetGroupOfflineMessageRespone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:youliao.pdu.message.GetGroupOfflineMessageRespone)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // repeated .youliao.pdu.message.MessageData msg_data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->msg_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:youliao.pdu.message.GetGroupOfflineMessageRespone)
  return target;
}

size_t GetGroupOfflineMessageRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:youliao.pdu.message.GetGroupOfflineMessageRespone)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .youliao.pdu.message.MessageData msg_data = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->msg_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msg_data(static_cast<int>(i)));
    }
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGroupOfflineMessageRespone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:youliao.pdu.message.GetGroupOfflineMessageRespone)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGroupOfflineMessageRespone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGroupOfflineMessageRespone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:youliao.pdu.message.GetGroupOfflineMessageRespone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:youliao.pdu.message.GetGroupOfflineMessageRespone)
    MergeFrom(*source);
  }
}

void GetGroupOfflineMessageRespone::MergeFrom(const GetGroupOfflineMessageRespone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:youliao.pdu.message.GetGroupOfflineMessageRespone)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_data_.MergeFrom(from.msg_data_);
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void GetGroupOfflineMessageRespone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:youliao.pdu.message.GetGroupOfflineMessageRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGroupOfflineMessageRespone::CopyFrom(const GetGroupOfflineMessageRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:youliao.pdu.message.GetGroupOfflineMessageRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGroupOfflineMessageRespone::IsInitialized() const {
  return true;
}

void GetGroupOfflineMessageRespone::Swap(GetGroupOfflineMessageRespone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGroupOfflineMessageRespone::InternalSwap(GetGroupOfflineMessageRespone* other) {
  using std::swap;
  CastToBase(&msg_data_)->InternalSwap(CastToBase(&other->msg_data_));
  swap(user_id_, other->user_id_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGroupOfflineMessageRespone::GetMetadata() const {
  protobuf_youliao_2emessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_youliao_2emessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace message
}  // namespace pdu
}  // namespace youliao
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::message::MessageData* Arena::Create< ::youliao::pdu::message::MessageData >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::message::MessageData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::message::MessageDataAck* Arena::Create< ::youliao::pdu::message::MessageDataAck >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::message::MessageDataAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::message::LatestMsgIdRequest* Arena::Create< ::youliao::pdu::message::LatestMsgIdRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::message::LatestMsgIdRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::message::LatestMsgIdRespone* Arena::Create< ::youliao::pdu::message::LatestMsgIdRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::message::LatestMsgIdRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::message::GetOfflineMessageRequest* Arena::Create< ::youliao::pdu::message::GetOfflineMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::message::GetOfflineMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::message::GetOfflineMessageRespone* Arena::Create< ::youliao::pdu::message::GetOfflineMessageRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::message::GetOfflineMessageRespone >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::message::GetGroupOfflineMessageRequest* Arena::Create< ::youliao::pdu::message::GetGroupOfflineMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::message::GetGroupOfflineMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::youliao::pdu::message::GetGroupOfflineMessageRespone* Arena::Create< ::youliao::pdu::message::GetGroupOfflineMessageRespone >(Arena* arena) {
  return Arena::CreateInternal< ::youliao::pdu::message::GetGroupOfflineMessageRespone >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
